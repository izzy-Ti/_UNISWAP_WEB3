{
	"id": "d926146411e2b51e2cad57d1f98f8aa3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HTC.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.30;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\ncontract HabeshaToken is ERC20Capped, ERC20Burnable{\r\n\r\n    // initial supply for the owner = 70,000,00 is done \r\n    // max supply in totoal for both owner and reward will be the CAP = 100,000,000\r\n    //We are going to make the token burnable\r\n    // burning token is used after the deploy may be we decide to reduce the total supply so we will burn it\r\n    // create a new block to destribute a reward for the miners\r\n\r\n\r\n    address payable public owner;\r\n    uint public blockReward;\r\n\r\n\r\n    constructor(uint cap , uint reward) ERC20 (\"HabeshaToken\", \"HTC\") ERC20Capped(cap * (10 ** decimals()) ) { // passing our maximum supply and naming out Token\r\n        owner = payable( msg.sender);\r\n        _mint(owner, 70000000 * (10 ** decimals())); // Sending the 70% of the Token to the owner of the Token\r\n\r\n        blockReward = reward * (10 ** decimals()); // Setting the reward amount\r\n    }\r\n    //function _mint(address to, uint256 amount) internal override(ERC20, ERC20Capped) {\r\n    //    super._mint(to, amount);\r\n    //}\r\n\r\n    function _mintMinorReward() internal { // Mint the reward for the miner in the block (validator)\r\n        _mint(block.coinbase, blockReward);\r\n    }\r\n\r\n\r\n    function _update(address from, address to, uint256 value) internal override (ERC20, ERC20Capped) {\r\n        super._update(from, to, value);\r\n    }\r\n\r\n\r\n\r\n    modifier onlyOwner{ // middlware to validate the owner only\r\n        require(msg.sender == owner, \"Sorry you must be an owner to access this one\");\r\n        _;\r\n    }\r\n\r\n    function setBlockReward(uint reward) public onlyOwner{ // This function is wanted if the owner wants to change the block reward after deployment\r\n        blockReward = reward * (10 ** decimals()); \r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Total supply cap has been exceeded.\n     */\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev The supplied cap is not a valid cap.\n     */\n    error ERC20InvalidCap(uint256 cap);\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        if (cap_ == 0) {\n            revert ERC20InvalidCap(0);\n        }\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /// @inheritdoc ERC20\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n\n        if (from == address(0)) {\n            uint256 maxSupply = cap();\n            uint256 supply = totalSupply();\n            if (supply > maxSupply) {\n                revert ERC20ExceededCap(supply, maxSupply);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ERC20Capped": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0xf1c07010528cdb891c75866dd44cf5cd856573457127ec38a522ca748407a340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://266a5704d812997c9e057e50787694ca29c1a3ddd76962af1061c11ed424c7e2\",\"dweb:/ipfs/QmaVTZBgUEWFo4ePF6v7NwoRSLbYBdLQ5XbRkgGFBfPpxa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/HTC.sol": {
				"HabeshaToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blockReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "setBlockReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HTC.sol\":276:2012  contract HabeshaToken is ERC20Capped, ERC20Burnable{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/HTC.sol\":774:1172  constructor(uint cap , uint reward) ERC20 (\"HabeshaToken\", \"HTC\") ERC20Capped(cap * (10 ** decimals()) ) { // passing our maximum supply and naming out Token... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/HTC.sol\":865:875  decimals() */\n  tag_5\n    /* \"contracts/HTC.sol\":865:873  decimals */\n  shl(0x20, tag_6)\n    /* \"contracts/HTC.sol\":865:875  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/HTC.sol\":859:861  10 */\n  0x0a\n    /* \"contracts/HTC.sol\":859:875  10 ** decimals() */\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n    /* \"contracts/HTC.sol\":852:855  cap */\n  dup3\n    /* \"contracts/HTC.sol\":852:876  cap * (10 ** decimals()) */\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x48616265736861546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4854430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_16\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":764:765  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:760  cap_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:765  cap_ == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":804:805  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":788:806  ERC20InvalidCap(0) */\n  mload(0x40)\n  0x392e1e2700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":833:837  cap_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":826:837  _cap = cap_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":716:844  constructor(uint256 cap_) {... */\n  pop\n    /* \"contracts/HTC.sol\":958:968  msg.sender */\n  caller\n    /* \"contracts/HTC.sol\":941:946  owner */\n  0x05\n  0x00\n    /* \"contracts/HTC.sol\":941:969  owner = payable( msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HTC.sol\":980:1023  _mint(owner, 70000000 * (10 ** decimals())) */\n  tag_22\n    /* \"contracts/HTC.sol\":986:991  owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/HTC.sol\":1011:1021  decimals() */\n  tag_23\n    /* \"contracts/HTC.sol\":1011:1019  decimals */\n  shl(0x20, tag_6)\n    /* \"contracts/HTC.sol\":1011:1021  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/HTC.sol\":1005:1007  10 */\n  0x0a\n    /* \"contracts/HTC.sol\":1005:1021  10 ** decimals() */\n  tag_24\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_24:\n    /* \"contracts/HTC.sol\":993:1001  70000000 */\n  0x042c1d80\n    /* \"contracts/HTC.sol\":993:1022  70000000 * (10 ** decimals()) */\n  tag_25\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_25:\n    /* \"contracts/HTC.sol\":980:985  _mint */\n  shl(0x20, tag_26)\n    /* \"contracts/HTC.sol\":980:1023  _mint(owner, 70000000 * (10 ** decimals())) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/HTC.sol\":1124:1134  decimals() */\n  tag_27\n    /* \"contracts/HTC.sol\":1124:1132  decimals */\n  shl(0x20, tag_6)\n    /* \"contracts/HTC.sol\":1124:1134  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/HTC.sol\":1118:1120  10 */\n  0x0a\n    /* \"contracts/HTC.sol\":1118:1134  10 ** decimals() */\n  tag_28\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"contracts/HTC.sol\":1108:1114  reward */\n  dup2\n    /* \"contracts/HTC.sol\":1108:1135  reward * (10 ** decimals()) */\n  tag_29\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_29:\n    /* \"contracts/HTC.sol\":1094:1105  blockReward */\n  0x06\n    /* \"contracts/HTC.sol\":1094:1135  blockReward = reward * (10 ** decimals()) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/HTC.sol\":774:1172  constructor(uint cap , uint reward) ERC20 (\"HabeshaToken\", \"HTC\") ERC20Capped(cap * (10 ** decimals()) ) { // passing our maximum supply and naming out Token... */\n  pop\n  pop\n    /* \"contracts/HTC.sol\":276:2012  contract HabeshaToken is ERC20Capped, ERC20Burnable{... */\n  jump(tag_30)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/HTC.sol\":1473:1619  function _update(address from, address to, uint256 value) internal override (ERC20, ERC20Capped) {... */\ntag_37:\n    /* \"contracts/HTC.sol\":1581:1611  super._update(from, to, value) */\n  tag_39\n    /* \"contracts/HTC.sol\":1595:1599  from */\n  dup4\n    /* \"contracts/HTC.sol\":1601:1603  to */\n  dup4\n    /* \"contracts/HTC.sol\":1605:1610  value */\n  dup4\n    /* \"contracts/HTC.sol\":1581:1594  super._update */\n  shl(0x20, tag_40)\n    /* \"contracts/HTC.sol\":1581:1611  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"contracts/HTC.sol\":1473:1619  function _update(address from, address to, uint256 value) internal override (ERC20, ERC20Capped) {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1036:1407  function _update(address from, address to, uint256 value) internal virtual override {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1160  super._update(from, to, value) */\n  tag_42\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1144:1148  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1150:1152  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1154:1159  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1143  super._update */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1160  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1191:1192  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1193  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1179  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1193  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1171:1401  if (from == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1209:1226  uint256 maxSupply */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1234  cap() */\n  tag_45\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1232  cap */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1234  cap() */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1209:1234  uint256 maxSupply = cap() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1248:1262  uint256 supply */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1278  totalSupply() */\n  tag_47\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1276  totalSupply */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1278  totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1248:1278  uint256 supply = totalSupply() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1305:1314  maxSupply */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1296:1302  supply */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1296:1314  supply > maxSupply */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1292:1391  if (supply > maxSupply) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1358:1364  supply */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1366:1375  maxSupply */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1341:1376  ERC20ExceededCap(supply, maxSupply) */\n  mload(0x40)\n  0x9e79f85400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap3\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1292:1391  if (supply > maxSupply) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1195:1401  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1171:1401  if (from == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1036:1407  function _update(address from, address to, uint256 value) internal virtual override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_56)\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_58\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_61)\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_62\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n  mload(0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n  sload(0x02)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_67:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_69:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_70:\n    /* \"#utility.yul\":490:514   */\n  tag_109\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_69\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_110:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_71:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_112\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_70\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_3:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  0x00\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_115\n  tag_67\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":798:917   */\ntag_114:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_116\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_71\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_117\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_71\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1207:1387   */\ntag_72:\n    /* \"#utility.yul\":1255:1332   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1252:1253   */\n  0x00\n    /* \"#utility.yul\":1245:1333   */\n  mstore\n    /* \"#utility.yul\":1352:1356   */\n  0x11\n    /* \"#utility.yul\":1349:1350   */\n  0x04\n    /* \"#utility.yul\":1342:1357   */\n  mstore\n    /* \"#utility.yul\":1376:1380   */\n  0x24\n    /* \"#utility.yul\":1373:1374   */\n  0x00\n    /* \"#utility.yul\":1366:1381   */\n  revert\n    /* \"#utility.yul\":1393:1495   */\ntag_73:\n    /* \"#utility.yul\":1435:1443   */\n  0x00\n    /* \"#utility.yul\":1482:1487   */\n  dup2\n    /* \"#utility.yul\":1479:1480   */\n  0x01\n    /* \"#utility.yul\":1475:1488   */\n  shr\n    /* \"#utility.yul\":1454:1488   */\n  swap1\n  pop\n    /* \"#utility.yul\":1393:1495   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1501:2349   */\ntag_74:\n    /* \"#utility.yul\":1562:1567   */\n  0x00\n    /* \"#utility.yul\":1569:1573   */\n  0x00\n    /* \"#utility.yul\":1593:1599   */\n  dup3\n    /* \"#utility.yul\":1584:1599   */\n  swap2\n  pop\n    /* \"#utility.yul\":1617:1622   */\n  dup4\n    /* \"#utility.yul\":1608:1622   */\n  swap1\n  pop\n    /* \"#utility.yul\":1631:2343   */\ntag_121:\n    /* \"#utility.yul\":1652:1653   */\n  0x01\n    /* \"#utility.yul\":1642:1650   */\n  dup6\n    /* \"#utility.yul\":1639:1654   */\n  gt\n    /* \"#utility.yul\":1631:2343   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":1747:1751   */\n  dup1\n    /* \"#utility.yul\":1742:1745   */\n  dup7\n    /* \"#utility.yul\":1738:1752   */\n  div\n    /* \"#utility.yul\":1732:1736   */\n  dup2\n    /* \"#utility.yul\":1729:1753   */\n  gt\n    /* \"#utility.yul\":1726:1776   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":1756:1774   */\n  tag_125\n  tag_72\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":1726:1776   */\ntag_124:\n    /* \"#utility.yul\":1806:1807   */\n  0x01\n    /* \"#utility.yul\":1796:1804   */\n  dup6\n    /* \"#utility.yul\":1792:1808   */\n  and\n    /* \"#utility.yul\":1789:2240   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":2221:2225   */\n  dup1\n    /* \"#utility.yul\":2214:2219   */\n  dup3\n    /* \"#utility.yul\":2210:2226   */\n  mul\n    /* \"#utility.yul\":2201:2226   */\n  swap2\n  pop\n    /* \"#utility.yul\":1789:2240   */\ntag_126:\n    /* \"#utility.yul\":2271:2275   */\n  dup1\n    /* \"#utility.yul\":2265:2269   */\n  dup2\n    /* \"#utility.yul\":2261:2276   */\n  mul\n    /* \"#utility.yul\":2253:2276   */\n  swap1\n  pop\n    /* \"#utility.yul\":2301:2333   */\n  tag_127\n    /* \"#utility.yul\":2324:2332   */\n  dup6\n    /* \"#utility.yul\":2301:2333   */\n  tag_73\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2289:2333   */\n  swap5\n  pop\n    /* \"#utility.yul\":1631:2343   */\n  jump(tag_121)\ntag_123:\n    /* \"#utility.yul\":1501:2349   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2355:3428   */\ntag_75:\n    /* \"#utility.yul\":2409:2414   */\n  0x00\n    /* \"#utility.yul\":2600:2608   */\n  dup3\n    /* \"#utility.yul\":2590:2630   */\n  tag_129\n  jumpi\n    /* \"#utility.yul\":2621:2622   */\n  0x01\n    /* \"#utility.yul\":2612:2622   */\n  swap1\n  pop\n    /* \"#utility.yul\":2623:2628   */\n  jump(tag_128)\n    /* \"#utility.yul\":2590:2630   */\ntag_129:\n    /* \"#utility.yul\":2649:2653   */\n  dup2\n    /* \"#utility.yul\":2639:2675   */\n  tag_130\n  jumpi\n    /* \"#utility.yul\":2666:2667   */\n  0x00\n    /* \"#utility.yul\":2657:2667   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2673   */\n  jump(tag_128)\n    /* \"#utility.yul\":2639:2675   */\ntag_130:\n    /* \"#utility.yul\":2735:2739   */\n  dup2\n    /* \"#utility.yul\":2783:2784   */\n  0x01\n    /* \"#utility.yul\":2778:2805   */\n  dup2\n  eq\n  tag_132\n  jumpi\n    /* \"#utility.yul\":2819:2820   */\n  0x02\n    /* \"#utility.yul\":2814:3005   */\n  dup2\n  eq\n  tag_133\n  jumpi\n    /* \"#utility.yul\":2728:3005   */\n  jump(tag_131)\n    /* \"#utility.yul\":2778:2805   */\ntag_132:\n    /* \"#utility.yul\":2796:2797   */\n  0x01\n    /* \"#utility.yul\":2787:2797   */\n  swap2\n  pop\n    /* \"#utility.yul\":2798:2803   */\n  pop\n  jump(tag_128)\n    /* \"#utility.yul\":2814:3005   */\ntag_133:\n    /* \"#utility.yul\":2859:2862   */\n  0xff\n    /* \"#utility.yul\":2849:2857   */\n  dup5\n    /* \"#utility.yul\":2846:2863   */\n  gt\n    /* \"#utility.yul\":2843:2886   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":2866:2884   */\n  tag_135\n  tag_72\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2843:2886   */\ntag_134:\n    /* \"#utility.yul\":2915:2923   */\n  dup4\n    /* \"#utility.yul\":2912:2913   */\n  0x02\n    /* \"#utility.yul\":2908:2924   */\n  exp\n    /* \"#utility.yul\":2899:2924   */\n  swap2\n  pop\n    /* \"#utility.yul\":2950:2953   */\n  dup5\n    /* \"#utility.yul\":2943:2948   */\n  dup3\n    /* \"#utility.yul\":2940:2954   */\n  gt\n    /* \"#utility.yul\":2937:2977   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":2957:2975   */\n  tag_137\n  tag_72\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":2937:2977   */\ntag_136:\n    /* \"#utility.yul\":2990:2995   */\n  pop\n  jump(tag_128)\n    /* \"#utility.yul\":2728:3005   */\ntag_131:\n  pop\n    /* \"#utility.yul\":3114:3116   */\n  0x20\n    /* \"#utility.yul\":3104:3112   */\n  dup4\n    /* \"#utility.yul\":3101:3117   */\n  lt\n    /* \"#utility.yul\":3095:3098   */\n  0x0133\n    /* \"#utility.yul\":3089:3093   */\n  dup4\n    /* \"#utility.yul\":3086:3099   */\n  lt\n    /* \"#utility.yul\":3082:3118   */\n  and\n    /* \"#utility.yul\":3064:3066   */\n  0x4e\n    /* \"#utility.yul\":3054:3062   */\n  dup5\n    /* \"#utility.yul\":3051:3067   */\n  lt\n    /* \"#utility.yul\":3046:3048   */\n  0x0b\n    /* \"#utility.yul\":3040:3044   */\n  dup5\n    /* \"#utility.yul\":3037:3049   */\n  lt\n    /* \"#utility.yul\":3033:3068   */\n  and\n    /* \"#utility.yul\":3017:3128   */\n  or\n    /* \"#utility.yul\":3014:3260   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":3170:3178   */\n  dup3\n    /* \"#utility.yul\":3164:3168   */\n  dup3\n    /* \"#utility.yul\":3160:3179   */\n  exp\n    /* \"#utility.yul\":3151:3179   */\n  swap1\n  pop\n    /* \"#utility.yul\":3205:3208   */\n  dup4\n    /* \"#utility.yul\":3198:3203   */\n  dup2\n    /* \"#utility.yul\":3195:3209   */\n  gt\n    /* \"#utility.yul\":3192:3232   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":3212:3230   */\n  tag_140\n  tag_72\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3192:3232   */\ntag_139:\n    /* \"#utility.yul\":3245:3250   */\n  jump(tag_128)\n    /* \"#utility.yul\":3014:3260   */\ntag_138:\n    /* \"#utility.yul\":3285:3327   */\n  tag_141\n    /* \"#utility.yul\":3323:3326   */\n  dup5\n    /* \"#utility.yul\":3313:3321   */\n  dup5\n    /* \"#utility.yul\":3307:3311   */\n  dup5\n    /* \"#utility.yul\":3304:3305   */\n  0x01\n    /* \"#utility.yul\":3285:3327   */\n  tag_74\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3270:3327   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":3359:3363   */\n  dup2\n    /* \"#utility.yul\":3354:3357   */\n  dup5\n    /* \"#utility.yul\":3350:3364   */\n  div\n    /* \"#utility.yul\":3343:3348   */\n  dup2\n    /* \"#utility.yul\":3340:3365   */\n  gt\n    /* \"#utility.yul\":3337:3388   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":3368:3386   */\n  tag_143\n  tag_72\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3337:3388   */\ntag_142:\n    /* \"#utility.yul\":3417:3421   */\n  dup2\n    /* \"#utility.yul\":3410:3415   */\n  dup2\n    /* \"#utility.yul\":3406:3422   */\n  mul\n    /* \"#utility.yul\":3397:3422   */\n  swap1\n  pop\n    /* \"#utility.yul\":2355:3428   */\ntag_128:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3434:3520   */\ntag_76:\n    /* \"#utility.yul\":3469:3476   */\n  0x00\n    /* \"#utility.yul\":3509:3513   */\n  0xff\n    /* \"#utility.yul\":3502:3507   */\n  dup3\n    /* \"#utility.yul\":3498:3514   */\n  and\n    /* \"#utility.yul\":3487:3514   */\n  swap1\n  pop\n    /* \"#utility.yul\":3434:3520   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3526:3807   */\ntag_8:\n    /* \"#utility.yul\":3584:3589   */\n  0x00\n    /* \"#utility.yul\":3608:3631   */\n  tag_146\n    /* \"#utility.yul\":3626:3630   */\n  dup3\n    /* \"#utility.yul\":3608:3631   */\n  tag_69\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3600:3631   */\n  swap2\n  pop\n    /* \"#utility.yul\":3652:3677   */\n  tag_147\n    /* \"#utility.yul\":3668:3676   */\n  dup4\n    /* \"#utility.yul\":3652:3677   */\n  tag_76\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3640:3677   */\n  swap3\n  pop\n    /* \"#utility.yul\":3696:3800   */\n  tag_148\n    /* \"#utility.yul\":3733:3799   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3723:3731   */\n  dup5\n    /* \"#utility.yul\":3717:3721   */\n  dup5\n    /* \"#utility.yul\":3696:3800   */\n  tag_75\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":3687:3800   */\n  swap1\n  pop\n    /* \"#utility.yul\":3526:3807   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3813:4223   */\ntag_10:\n    /* \"#utility.yul\":3853:3860   */\n  0x00\n    /* \"#utility.yul\":3876:3896   */\n  tag_150\n    /* \"#utility.yul\":3894:3895   */\n  dup3\n    /* \"#utility.yul\":3876:3896   */\n  tag_69\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3871:3896   */\n  swap2\n  pop\n    /* \"#utility.yul\":3910:3930   */\n  tag_151\n    /* \"#utility.yul\":3928:3929   */\n  dup4\n    /* \"#utility.yul\":3910:3930   */\n  tag_69\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":3905:3930   */\n  swap3\n  pop\n    /* \"#utility.yul\":3965:3966   */\n  dup3\n    /* \"#utility.yul\":3962:3963   */\n  dup3\n    /* \"#utility.yul\":3958:3967   */\n  mul\n    /* \"#utility.yul\":3987:4017   */\n  tag_152\n    /* \"#utility.yul\":4005:4016   */\n  dup2\n    /* \"#utility.yul\":3987:4017   */\n  tag_69\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":3976:4017   */\n  swap2\n  pop\n    /* \"#utility.yul\":4166:4167   */\n  dup3\n    /* \"#utility.yul\":4157:4164   */\n  dup3\n    /* \"#utility.yul\":4153:4168   */\n  div\n    /* \"#utility.yul\":4150:4151   */\n  dup5\n    /* \"#utility.yul\":4147:4169   */\n  eq\n    /* \"#utility.yul\":4127:4128   */\n  dup4\n    /* \"#utility.yul\":4120:4129   */\n  iszero\n    /* \"#utility.yul\":4100:4183   */\n  or\n    /* \"#utility.yul\":4077:4216   */\n  tag_153\n  jumpi\n    /* \"#utility.yul\":4196:4214   */\n  tag_154\n  tag_72\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4077:4216   */\ntag_153:\n    /* \"#utility.yul\":3861:4223   */\n  pop\n    /* \"#utility.yul\":3813:4223   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4229:4328   */\ntag_77:\n    /* \"#utility.yul\":4281:4287   */\n  0x00\n    /* \"#utility.yul\":4315:4320   */\n  dup2\n    /* \"#utility.yul\":4309:4321   */\n  mload\n    /* \"#utility.yul\":4299:4321   */\n  swap1\n  pop\n    /* \"#utility.yul\":4229:4328   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4334:4514   */\ntag_78:\n    /* \"#utility.yul\":4382:4459   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4379:4380   */\n  0x00\n    /* \"#utility.yul\":4372:4460   */\n  mstore\n    /* \"#utility.yul\":4479:4483   */\n  0x41\n    /* \"#utility.yul\":4476:4477   */\n  0x04\n    /* \"#utility.yul\":4469:4484   */\n  mstore\n    /* \"#utility.yul\":4503:4507   */\n  0x24\n    /* \"#utility.yul\":4500:4501   */\n  0x00\n    /* \"#utility.yul\":4493:4508   */\n  revert\n    /* \"#utility.yul\":4520:4700   */\ntag_79:\n    /* \"#utility.yul\":4568:4645   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4565:4566   */\n  0x00\n    /* \"#utility.yul\":4558:4646   */\n  mstore\n    /* \"#utility.yul\":4665:4669   */\n  0x22\n    /* \"#utility.yul\":4662:4663   */\n  0x04\n    /* \"#utility.yul\":4655:4670   */\n  mstore\n    /* \"#utility.yul\":4689:4693   */\n  0x24\n    /* \"#utility.yul\":4686:4687   */\n  0x00\n    /* \"#utility.yul\":4679:4694   */\n  revert\n    /* \"#utility.yul\":4706:5026   */\ntag_80:\n    /* \"#utility.yul\":4750:4756   */\n  0x00\n    /* \"#utility.yul\":4787:4788   */\n  0x02\n    /* \"#utility.yul\":4781:4785   */\n  dup3\n    /* \"#utility.yul\":4777:4789   */\n  div\n    /* \"#utility.yul\":4767:4789   */\n  swap1\n  pop\n    /* \"#utility.yul\":4834:4835   */\n  0x01\n    /* \"#utility.yul\":4828:4832   */\n  dup3\n    /* \"#utility.yul\":4824:4836   */\n  and\n    /* \"#utility.yul\":4855:4873   */\n  dup1\n    /* \"#utility.yul\":4845:4926   */\n  tag_159\n  jumpi\n    /* \"#utility.yul\":4911:4915   */\n  0x7f\n    /* \"#utility.yul\":4903:4909   */\n  dup3\n    /* \"#utility.yul\":4899:4916   */\n  and\n    /* \"#utility.yul\":4889:4916   */\n  swap2\n  pop\n    /* \"#utility.yul\":4845:4926   */\ntag_159:\n    /* \"#utility.yul\":4973:4975   */\n  0x20\n    /* \"#utility.yul\":4965:4971   */\n  dup3\n    /* \"#utility.yul\":4962:4976   */\n  lt\n    /* \"#utility.yul\":4942:4960   */\n  dup2\n    /* \"#utility.yul\":4939:4977   */\n  sub\n    /* \"#utility.yul\":4936:5020   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":4992:5010   */\n  tag_161\n  tag_79\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":4936:5020   */\ntag_160:\n    /* \"#utility.yul\":4757:5026   */\n  pop\n    /* \"#utility.yul\":4706:5026   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5032:5173   */\ntag_81:\n    /* \"#utility.yul\":5081:5085   */\n  0x00\n    /* \"#utility.yul\":5104:5107   */\n  dup2\n    /* \"#utility.yul\":5096:5107   */\n  swap1\n  pop\n    /* \"#utility.yul\":5127:5130   */\n  dup2\n    /* \"#utility.yul\":5124:5125   */\n  0x00\n    /* \"#utility.yul\":5117:5131   */\n  mstore\n    /* \"#utility.yul\":5161:5165   */\n  0x20\n    /* \"#utility.yul\":5158:5159   */\n  0x00\n    /* \"#utility.yul\":5148:5166   */\n  keccak256\n    /* \"#utility.yul\":5140:5166   */\n  swap1\n  pop\n    /* \"#utility.yul\":5032:5173   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5179:5272   */\ntag_82:\n    /* \"#utility.yul\":5216:5222   */\n  0x00\n    /* \"#utility.yul\":5263:5265   */\n  0x20\n    /* \"#utility.yul\":5258:5260   */\n  0x1f\n    /* \"#utility.yul\":5251:5256   */\n  dup4\n    /* \"#utility.yul\":5247:5261   */\n  add\n    /* \"#utility.yul\":5243:5266   */\n  div\n    /* \"#utility.yul\":5233:5266   */\n  swap1\n  pop\n    /* \"#utility.yul\":5179:5272   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5278:5385   */\ntag_83:\n    /* \"#utility.yul\":5322:5330   */\n  0x00\n    /* \"#utility.yul\":5372:5377   */\n  dup3\n    /* \"#utility.yul\":5366:5370   */\n  dup3\n    /* \"#utility.yul\":5362:5378   */\n  shl\n    /* \"#utility.yul\":5341:5378   */\n  swap1\n  pop\n    /* \"#utility.yul\":5278:5385   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5391:5784   */\ntag_84:\n    /* \"#utility.yul\":5460:5466   */\n  0x00\n    /* \"#utility.yul\":5510:5511   */\n  0x08\n    /* \"#utility.yul\":5498:5508   */\n  dup4\n    /* \"#utility.yul\":5494:5512   */\n  mul\n    /* \"#utility.yul\":5533:5630   */\n  tag_166\n    /* \"#utility.yul\":5563:5629   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5552:5561   */\n  dup3\n    /* \"#utility.yul\":5533:5630   */\n  tag_83\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5651:5690   */\n  tag_167\n    /* \"#utility.yul\":5681:5689   */\n  dup7\n    /* \"#utility.yul\":5670:5679   */\n  dup4\n    /* \"#utility.yul\":5651:5690   */\n  tag_83\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5639:5690   */\n  swap6\n  pop\n    /* \"#utility.yul\":5723:5727   */\n  dup1\n    /* \"#utility.yul\":5719:5728   */\n  not\n    /* \"#utility.yul\":5712:5717   */\n  dup5\n    /* \"#utility.yul\":5708:5729   */\n  and\n    /* \"#utility.yul\":5699:5729   */\n  swap4\n  pop\n    /* \"#utility.yul\":5772:5776   */\n  dup1\n    /* \"#utility.yul\":5762:5770   */\n  dup7\n    /* \"#utility.yul\":5758:5777   */\n  and\n    /* \"#utility.yul\":5751:5756   */\n  dup5\n    /* \"#utility.yul\":5748:5778   */\n  or\n    /* \"#utility.yul\":5738:5778   */\n  swap3\n  pop\n    /* \"#utility.yul\":5467:5784   */\n  pop\n  pop\n    /* \"#utility.yul\":5391:5784   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5790:5850   */\ntag_85:\n    /* \"#utility.yul\":5818:5821   */\n  0x00\n    /* \"#utility.yul\":5839:5844   */\n  dup2\n    /* \"#utility.yul\":5832:5844   */\n  swap1\n  pop\n    /* \"#utility.yul\":5790:5850   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5856:5998   */\ntag_86:\n    /* \"#utility.yul\":5906:5915   */\n  0x00\n    /* \"#utility.yul\":5939:5992   */\n  tag_170\n    /* \"#utility.yul\":5957:5991   */\n  tag_171\n    /* \"#utility.yul\":5966:5990   */\n  tag_172\n    /* \"#utility.yul\":5984:5989   */\n  dup5\n    /* \"#utility.yul\":5966:5990   */\n  tag_69\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5957:5991   */\n  tag_85\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5939:5992   */\n  tag_69\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5926:5992   */\n  swap1\n  pop\n    /* \"#utility.yul\":5856:5998   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6004:6079   */\ntag_87:\n    /* \"#utility.yul\":6047:6050   */\n  0x00\n    /* \"#utility.yul\":6068:6073   */\n  dup2\n    /* \"#utility.yul\":6061:6073   */\n  swap1\n  pop\n    /* \"#utility.yul\":6004:6079   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6085:6354   */\ntag_88:\n    /* \"#utility.yul\":6195:6234   */\n  tag_175\n    /* \"#utility.yul\":6226:6233   */\n  dup4\n    /* \"#utility.yul\":6195:6234   */\n  tag_86\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6256:6347   */\n  tag_176\n    /* \"#utility.yul\":6305:6346   */\n  tag_177\n    /* \"#utility.yul\":6329:6345   */\n  dup3\n    /* \"#utility.yul\":6305:6346   */\n  tag_87\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6297:6303   */\n  dup5\n    /* \"#utility.yul\":6290:6294   */\n  dup5\n    /* \"#utility.yul\":6284:6295   */\n  sload\n    /* \"#utility.yul\":6256:6347   */\n  tag_84\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6250:6254   */\n  dup3\n    /* \"#utility.yul\":6243:6348   */\n  sstore\n    /* \"#utility.yul\":6161:6354   */\n  pop\n    /* \"#utility.yul\":6085:6354   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6360:6433   */\ntag_89:\n    /* \"#utility.yul\":6405:6408   */\n  0x00\n    /* \"#utility.yul\":6426:6427   */\n  0x00\n    /* \"#utility.yul\":6419:6427   */\n  swap1\n  pop\n    /* \"#utility.yul\":6360:6433   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6439:6628   */\ntag_90:\n    /* \"#utility.yul\":6516:6548   */\n  tag_180\n  tag_89\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":6557:6622   */\n  tag_181\n    /* \"#utility.yul\":6615:6621   */\n  dup2\n    /* \"#utility.yul\":6607:6613   */\n  dup5\n    /* \"#utility.yul\":6601:6605   */\n  dup5\n    /* \"#utility.yul\":6557:6622   */\n  tag_88\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":6492:6628   */\n  pop\n    /* \"#utility.yul\":6439:6628   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6634:6820   */\ntag_91:\n    /* \"#utility.yul\":6694:6814   */\ntag_183:\n    /* \"#utility.yul\":6711:6714   */\n  dup2\n    /* \"#utility.yul\":6704:6709   */\n  dup2\n    /* \"#utility.yul\":6701:6715   */\n  lt\n    /* \"#utility.yul\":6694:6814   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":6765:6804   */\n  tag_186\n    /* \"#utility.yul\":6802:6803   */\n  0x00\n    /* \"#utility.yul\":6795:6800   */\n  dup3\n    /* \"#utility.yul\":6765:6804   */\n  tag_90\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6738:6739   */\n  0x01\n    /* \"#utility.yul\":6731:6736   */\n  dup2\n    /* \"#utility.yul\":6727:6740   */\n  add\n    /* \"#utility.yul\":6718:6740   */\n  swap1\n  pop\n    /* \"#utility.yul\":6694:6814   */\n  jump(tag_183)\ntag_185:\n    /* \"#utility.yul\":6634:6820   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6826:7369   */\ntag_92:\n    /* \"#utility.yul\":6927:6929   */\n  0x1f\n    /* \"#utility.yul\":6922:6925   */\n  dup3\n    /* \"#utility.yul\":6919:6930   */\n  gt\n    /* \"#utility.yul\":6916:7362   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":6961:6999   */\n  tag_189\n    /* \"#utility.yul\":6993:6998   */\n  dup2\n    /* \"#utility.yul\":6961:6999   */\n  tag_81\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7045:7074   */\n  tag_190\n    /* \"#utility.yul\":7063:7073   */\n  dup5\n    /* \"#utility.yul\":7045:7074   */\n  tag_82\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7035:7043   */\n  dup2\n    /* \"#utility.yul\":7031:7075   */\n  add\n    /* \"#utility.yul\":7228:7230   */\n  0x20\n    /* \"#utility.yul\":7216:7226   */\n  dup6\n    /* \"#utility.yul\":7213:7231   */\n  lt\n    /* \"#utility.yul\":7210:7259   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":7249:7257   */\n  dup2\n    /* \"#utility.yul\":7234:7257   */\n  swap1\n  pop\n    /* \"#utility.yul\":7210:7259   */\ntag_191:\n    /* \"#utility.yul\":7272:7352   */\n  tag_192\n    /* \"#utility.yul\":7328:7350   */\n  tag_193\n    /* \"#utility.yul\":7346:7349   */\n  dup6\n    /* \"#utility.yul\":7328:7350   */\n  tag_82\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":7318:7326   */\n  dup4\n    /* \"#utility.yul\":7314:7351   */\n  add\n    /* \"#utility.yul\":7301:7312   */\n  dup3\n    /* \"#utility.yul\":7272:7352   */\n  tag_91\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6931:7362   */\n  pop\n  pop\n    /* \"#utility.yul\":6916:7362   */\ntag_188:\n    /* \"#utility.yul\":6826:7369   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7375:7492   */\ntag_93:\n    /* \"#utility.yul\":7429:7437   */\n  0x00\n    /* \"#utility.yul\":7479:7484   */\n  dup3\n    /* \"#utility.yul\":7473:7477   */\n  dup3\n    /* \"#utility.yul\":7469:7485   */\n  shr\n    /* \"#utility.yul\":7448:7485   */\n  swap1\n  pop\n    /* \"#utility.yul\":7375:7492   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7498:7667   */\ntag_94:\n    /* \"#utility.yul\":7542:7548   */\n  0x00\n    /* \"#utility.yul\":7575:7626   */\n  tag_196\n    /* \"#utility.yul\":7623:7624   */\n  0x00\n    /* \"#utility.yul\":7619:7625   */\n  not\n    /* \"#utility.yul\":7611:7616   */\n  dup5\n    /* \"#utility.yul\":7608:7609   */\n  0x08\n    /* \"#utility.yul\":7604:7617   */\n  mul\n    /* \"#utility.yul\":7575:7626   */\n  tag_93\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7571:7627   */\n  not\n    /* \"#utility.yul\":7656:7660   */\n  dup1\n    /* \"#utility.yul\":7650:7654   */\n  dup4\n    /* \"#utility.yul\":7646:7661   */\n  and\n    /* \"#utility.yul\":7636:7661   */\n  swap2\n  pop\n    /* \"#utility.yul\":7549:7667   */\n  pop\n    /* \"#utility.yul\":7498:7667   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7672:7967   */\ntag_95:\n    /* \"#utility.yul\":7748:7752   */\n  0x00\n    /* \"#utility.yul\":7894:7923   */\n  tag_198\n    /* \"#utility.yul\":7919:7922   */\n  dup4\n    /* \"#utility.yul\":7913:7917   */\n  dup4\n    /* \"#utility.yul\":7894:7923   */\n  tag_94\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":7886:7923   */\n  swap2\n  pop\n    /* \"#utility.yul\":7956:7959   */\n  dup3\n    /* \"#utility.yul\":7953:7954   */\n  0x02\n    /* \"#utility.yul\":7949:7960   */\n  mul\n    /* \"#utility.yul\":7943:7947   */\n  dup3\n    /* \"#utility.yul\":7940:7961   */\n  or\n    /* \"#utility.yul\":7932:7961   */\n  swap1\n  pop\n    /* \"#utility.yul\":7672:7967   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7972:9367   */\ntag_15:\n    /* \"#utility.yul\":8089:8126   */\n  tag_200\n    /* \"#utility.yul\":8122:8125   */\n  dup3\n    /* \"#utility.yul\":8089:8126   */\n  tag_77\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8191:8209   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8183:8189   */\n  dup2\n    /* \"#utility.yul\":8180:8210   */\n  gt\n    /* \"#utility.yul\":8177:8233   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8213:8231   */\n  tag_202\n  tag_78\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8177:8233   */\ntag_201:\n    /* \"#utility.yul\":8257:8295   */\n  tag_203\n    /* \"#utility.yul\":8289:8293   */\n  dup3\n    /* \"#utility.yul\":8283:8294   */\n  sload\n    /* \"#utility.yul\":8257:8295   */\n  tag_80\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8342:8409   */\n  tag_204\n    /* \"#utility.yul\":8402:8408   */\n  dup3\n    /* \"#utility.yul\":8394:8400   */\n  dup3\n    /* \"#utility.yul\":8388:8392   */\n  dup6\n    /* \"#utility.yul\":8342:8409   */\n  tag_92\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":8436:8437   */\n  0x00\n    /* \"#utility.yul\":8460:8464   */\n  0x20\n    /* \"#utility.yul\":8447:8464   */\n  swap1\n  pop\n    /* \"#utility.yul\":8492:8494   */\n  0x1f\n    /* \"#utility.yul\":8484:8490   */\n  dup4\n    /* \"#utility.yul\":8481:8495   */\n  gt\n    /* \"#utility.yul\":8509:8510   */\n  0x01\n    /* \"#utility.yul\":8504:9122   */\n  dup2\n  eq\n  tag_206\n  jumpi\n    /* \"#utility.yul\":9166:9167   */\n  0x00\n    /* \"#utility.yul\":9183:9189   */\n  dup5\n    /* \"#utility.yul\":9180:9257   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":9232:9241   */\n  dup3\n    /* \"#utility.yul\":9227:9230   */\n  dup8\n    /* \"#utility.yul\":9223:9242   */\n  add\n    /* \"#utility.yul\":9217:9243   */\n  mload\n    /* \"#utility.yul\":9208:9243   */\n  swap1\n  pop\n    /* \"#utility.yul\":9180:9257   */\ntag_207:\n    /* \"#utility.yul\":9283:9350   */\n  tag_208\n    /* \"#utility.yul\":9343:9349   */\n  dup6\n    /* \"#utility.yul\":9336:9341   */\n  dup3\n    /* \"#utility.yul\":9283:9350   */\n  tag_95\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":9277:9281   */\n  dup7\n    /* \"#utility.yul\":9270:9351   */\n  sstore\n    /* \"#utility.yul\":9139:9361   */\n  pop\n    /* \"#utility.yul\":8474:9361   */\n  jump(tag_205)\n    /* \"#utility.yul\":8504:9122   */\ntag_206:\n    /* \"#utility.yul\":8556:8560   */\n  0x1f\n    /* \"#utility.yul\":8552:8561   */\n  not\n    /* \"#utility.yul\":8544:8550   */\n  dup5\n    /* \"#utility.yul\":8540:8562   */\n  and\n    /* \"#utility.yul\":8590:8627   */\n  tag_209\n    /* \"#utility.yul\":8622:8626   */\n  dup7\n    /* \"#utility.yul\":8590:8627   */\n  tag_81\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":8649:8650   */\n  0x00\n    /* \"#utility.yul\":8663:8871   */\ntag_210:\n    /* \"#utility.yul\":8677:8684   */\n  dup3\n    /* \"#utility.yul\":8674:8675   */\n  dup2\n    /* \"#utility.yul\":8671:8685   */\n  lt\n    /* \"#utility.yul\":8663:8871   */\n  iszero\n  tag_212\n  jumpi\n    /* \"#utility.yul\":8756:8765   */\n  dup5\n    /* \"#utility.yul\":8751:8754   */\n  dup10\n    /* \"#utility.yul\":8747:8766   */\n  add\n    /* \"#utility.yul\":8741:8767   */\n  mload\n    /* \"#utility.yul\":8733:8739   */\n  dup3\n    /* \"#utility.yul\":8726:8768   */\n  sstore\n    /* \"#utility.yul\":8807:8808   */\n  0x01\n    /* \"#utility.yul\":8799:8805   */\n  dup3\n    /* \"#utility.yul\":8795:8809   */\n  add\n    /* \"#utility.yul\":8785:8809   */\n  swap2\n  pop\n    /* \"#utility.yul\":8854:8856   */\n  0x20\n    /* \"#utility.yul\":8843:8852   */\n  dup6\n    /* \"#utility.yul\":8839:8857   */\n  add\n    /* \"#utility.yul\":8826:8857   */\n  swap5\n  pop\n    /* \"#utility.yul\":8700:8704   */\n  0x20\n    /* \"#utility.yul\":8697:8698   */\n  dup2\n    /* \"#utility.yul\":8693:8705   */\n  add\n    /* \"#utility.yul\":8688:8705   */\n  swap1\n  pop\n    /* \"#utility.yul\":8663:8871   */\n  jump(tag_210)\ntag_212:\n    /* \"#utility.yul\":8899:8905   */\n  dup7\n    /* \"#utility.yul\":8890:8897   */\n  dup4\n    /* \"#utility.yul\":8887:8906   */\n  lt\n    /* \"#utility.yul\":8884:9063   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":8957:8966   */\n  dup5\n    /* \"#utility.yul\":8952:8955   */\n  dup10\n    /* \"#utility.yul\":8948:8967   */\n  add\n    /* \"#utility.yul\":8942:8968   */\n  mload\n    /* \"#utility.yul\":9000:9048   */\n  tag_214\n    /* \"#utility.yul\":9042:9046   */\n  0x1f\n    /* \"#utility.yul\":9034:9040   */\n  dup10\n    /* \"#utility.yul\":9030:9047   */\n  and\n    /* \"#utility.yul\":9019:9028   */\n  dup3\n    /* \"#utility.yul\":9000:9048   */\n  tag_94\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":8992:8998   */\n  dup4\n    /* \"#utility.yul\":8985:9049   */\n  sstore\n    /* \"#utility.yul\":8907:9063   */\n  pop\n    /* \"#utility.yul\":8884:9063   */\ntag_213:\n    /* \"#utility.yul\":9109:9110   */\n  0x01\n    /* \"#utility.yul\":9105:9106   */\n  0x02\n    /* \"#utility.yul\":9097:9103   */\n  dup9\n    /* \"#utility.yul\":9093:9107   */\n  mul\n    /* \"#utility.yul\":9089:9111   */\n  add\n    /* \"#utility.yul\":9083:9087   */\n  dup9\n    /* \"#utility.yul\":9076:9112   */\n  sstore\n    /* \"#utility.yul\":8511:9122   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8474:9361   */\ntag_205:\n  pop\n    /* \"#utility.yul\":8064:9367   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7972:9367   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9373:9458   */\ntag_96:\n    /* \"#utility.yul\":9418:9425   */\n  0x00\n    /* \"#utility.yul\":9447:9452   */\n  dup2\n    /* \"#utility.yul\":9436:9452   */\n  swap1\n  pop\n    /* \"#utility.yul\":9373:9458   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9464:9622   */\ntag_97:\n    /* \"#utility.yul\":9522:9531   */\n  0x00\n    /* \"#utility.yul\":9555:9616   */\n  tag_217\n    /* \"#utility.yul\":9573:9615   */\n  tag_218\n    /* \"#utility.yul\":9582:9614   */\n  tag_219\n    /* \"#utility.yul\":9608:9613   */\n  dup5\n    /* \"#utility.yul\":9582:9614   */\n  tag_96\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9573:9615   */\n  tag_85\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9555:9616   */\n  tag_69\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":9542:9616   */\n  swap1\n  pop\n    /* \"#utility.yul\":9464:9622   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9628:9775   */\ntag_98:\n    /* \"#utility.yul\":9723:9768   */\n  tag_221\n    /* \"#utility.yul\":9762:9767   */\n  dup2\n    /* \"#utility.yul\":9723:9768   */\n  tag_97\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":9718:9721   */\n  dup3\n    /* \"#utility.yul\":9711:9769   */\n  mstore\n    /* \"#utility.yul\":9628:9775   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9781:10019   */\ntag_20:\n    /* \"#utility.yul\":9882:9886   */\n  0x00\n    /* \"#utility.yul\":9920:9922   */\n  0x20\n    /* \"#utility.yul\":9909:9918   */\n  dup3\n    /* \"#utility.yul\":9905:9923   */\n  add\n    /* \"#utility.yul\":9897:9923   */\n  swap1\n  pop\n    /* \"#utility.yul\":9933:10012   */\n  tag_223\n    /* \"#utility.yul\":10009:10010   */\n  0x00\n    /* \"#utility.yul\":9998:10007   */\n  dup4\n    /* \"#utility.yul\":9994:10011   */\n  add\n    /* \"#utility.yul\":9985:9991   */\n  dup5\n    /* \"#utility.yul\":9933:10012   */\n  tag_98\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":9781:10019   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10025:10151   */\ntag_99:\n    /* \"#utility.yul\":10062:10069   */\n  0x00\n    /* \"#utility.yul\":10102:10144   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":10095:10100   */\n  dup3\n    /* \"#utility.yul\":10091:10145   */\n  and\n    /* \"#utility.yul\":10080:10145   */\n  swap1\n  pop\n    /* \"#utility.yul\":10025:10151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10157:10253   */\ntag_100:\n    /* \"#utility.yul\":10194:10201   */\n  0x00\n    /* \"#utility.yul\":10223:10247   */\n  tag_226\n    /* \"#utility.yul\":10241:10246   */\n  dup3\n    /* \"#utility.yul\":10223:10247   */\n  tag_99\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10212:10247   */\n  swap1\n  pop\n    /* \"#utility.yul\":10157:10253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10259:10377   */\ntag_101:\n    /* \"#utility.yul\":10346:10370   */\n  tag_228\n    /* \"#utility.yul\":10364:10369   */\n  dup2\n    /* \"#utility.yul\":10346:10370   */\n  tag_100\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10341:10344   */\n  dup3\n    /* \"#utility.yul\":10334:10371   */\n  mstore\n    /* \"#utility.yul\":10259:10377   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10383:10605   */\ntag_35:\n    /* \"#utility.yul\":10476:10480   */\n  0x00\n    /* \"#utility.yul\":10514:10516   */\n  0x20\n    /* \"#utility.yul\":10503:10512   */\n  dup3\n    /* \"#utility.yul\":10499:10517   */\n  add\n    /* \"#utility.yul\":10491:10517   */\n  swap1\n  pop\n    /* \"#utility.yul\":10527:10598   */\n  tag_230\n    /* \"#utility.yul\":10595:10596   */\n  0x00\n    /* \"#utility.yul\":10584:10593   */\n  dup4\n    /* \"#utility.yul\":10580:10597   */\n  add\n    /* \"#utility.yul\":10571:10577   */\n  dup5\n    /* \"#utility.yul\":10527:10598   */\n  tag_101\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":10383:10605   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10611:10729   */\ntag_102:\n    /* \"#utility.yul\":10698:10722   */\n  tag_232\n    /* \"#utility.yul\":10716:10721   */\n  dup2\n    /* \"#utility.yul\":10698:10722   */\n  tag_69\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":10693:10696   */\n  dup3\n    /* \"#utility.yul\":10686:10723   */\n  mstore\n    /* \"#utility.yul\":10611:10729   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10735:11067   */\ntag_51:\n    /* \"#utility.yul\":10856:10860   */\n  0x00\n    /* \"#utility.yul\":10894:10896   */\n  0x40\n    /* \"#utility.yul\":10883:10892   */\n  dup3\n    /* \"#utility.yul\":10879:10897   */\n  add\n    /* \"#utility.yul\":10871:10897   */\n  swap1\n  pop\n    /* \"#utility.yul\":10907:10978   */\n  tag_234\n    /* \"#utility.yul\":10975:10976   */\n  0x00\n    /* \"#utility.yul\":10964:10973   */\n  dup4\n    /* \"#utility.yul\":10960:10977   */\n  add\n    /* \"#utility.yul\":10951:10957   */\n  dup6\n    /* \"#utility.yul\":10907:10978   */\n  tag_102\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":10988:11060   */\n  tag_235\n    /* \"#utility.yul\":11056:11058   */\n  0x20\n    /* \"#utility.yul\":11045:11054   */\n  dup4\n    /* \"#utility.yul\":11041:11059   */\n  add\n    /* \"#utility.yul\":11032:11038   */\n  dup5\n    /* \"#utility.yul\":10988:11060   */\n  tag_102\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":10735:11067   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11073:11264   */\ntag_55:\n    /* \"#utility.yul\":11113:11116   */\n  0x00\n    /* \"#utility.yul\":11132:11152   */\n  tag_237\n    /* \"#utility.yul\":11150:11151   */\n  dup3\n    /* \"#utility.yul\":11132:11152   */\n  tag_69\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":11127:11152   */\n  swap2\n  pop\n    /* \"#utility.yul\":11166:11186   */\n  tag_238\n    /* \"#utility.yul\":11184:11185   */\n  dup4\n    /* \"#utility.yul\":11166:11186   */\n  tag_69\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":11161:11186   */\n  swap3\n  pop\n    /* \"#utility.yul\":11209:11210   */\n  dup3\n    /* \"#utility.yul\":11206:11207   */\n  dup3\n    /* \"#utility.yul\":11202:11211   */\n  add\n    /* \"#utility.yul\":11195:11211   */\n  swap1\n  pop\n    /* \"#utility.yul\":11230:11233   */\n  dup1\n    /* \"#utility.yul\":11227:11228   */\n  dup3\n    /* \"#utility.yul\":11224:11234   */\n  gt\n    /* \"#utility.yul\":11221:11257   */\n  iszero\n  tag_239\n  jumpi\n    /* \"#utility.yul\":11237:11255   */\n  tag_240\n  tag_72\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":11221:11257   */\ntag_239:\n    /* \"#utility.yul\":11073:11264   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11270:11712   */\ntag_59:\n    /* \"#utility.yul\":11419:11423   */\n  0x00\n    /* \"#utility.yul\":11457:11459   */\n  0x60\n    /* \"#utility.yul\":11446:11455   */\n  dup3\n    /* \"#utility.yul\":11442:11460   */\n  add\n    /* \"#utility.yul\":11434:11460   */\n  swap1\n  pop\n    /* \"#utility.yul\":11470:11541   */\n  tag_242\n    /* \"#utility.yul\":11538:11539   */\n  0x00\n    /* \"#utility.yul\":11527:11536   */\n  dup4\n    /* \"#utility.yul\":11523:11540   */\n  add\n    /* \"#utility.yul\":11514:11520   */\n  dup7\n    /* \"#utility.yul\":11470:11541   */\n  tag_101\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":11551:11623   */\n  tag_243\n    /* \"#utility.yul\":11619:11621   */\n  0x20\n    /* \"#utility.yul\":11608:11617   */\n  dup4\n    /* \"#utility.yul\":11604:11622   */\n  add\n    /* \"#utility.yul\":11595:11601   */\n  dup6\n    /* \"#utility.yul\":11551:11623   */\n  tag_102\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":11633:11705   */\n  tag_244\n    /* \"#utility.yul\":11701:11703   */\n  0x40\n    /* \"#utility.yul\":11690:11699   */\n  dup4\n    /* \"#utility.yul\":11686:11704   */\n  add\n    /* \"#utility.yul\":11677:11683   */\n  dup5\n    /* \"#utility.yul\":11633:11705   */\n  tag_102\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":11270:11712   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11718:11940   */\ntag_63:\n    /* \"#utility.yul\":11811:11815   */\n  0x00\n    /* \"#utility.yul\":11849:11851   */\n  0x20\n    /* \"#utility.yul\":11838:11847   */\n  dup3\n    /* \"#utility.yul\":11834:11852   */\n  add\n    /* \"#utility.yul\":11826:11852   */\n  swap1\n  pop\n    /* \"#utility.yul\":11862:11933   */\n  tag_246\n    /* \"#utility.yul\":11930:11931   */\n  0x00\n    /* \"#utility.yul\":11919:11928   */\n  dup4\n    /* \"#utility.yul\":11915:11932   */\n  add\n    /* \"#utility.yul\":11906:11912   */\n  dup5\n    /* \"#utility.yul\":11862:11933   */\n  tag_102\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":11718:11940   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/HTC.sol\":276:2012  contract HabeshaToken is ERC20Capped, ERC20Burnable{... */\ntag_30:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3ef4406067f3f2b83779fd8c58e51154fe5e1675c0d17583dd1aac1409fbf9d7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/HTC.sol\":276:2012  contract HabeshaToken is ERC20Capped, ERC20Burnable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x355274ea\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x355274ea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x18160ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1a18e707\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0ac168a1\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HTC.sol\":740:763  uint public blockReward */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HTC.sol\":1805:2009  function setBlockReward(uint reward) public onlyOwner{ // This function is wanted if the owner wants to change the block reward after deployment... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/HTC.sol\":705:733  address payable public owner */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_83\n      jump\t// in\n    tag_84:\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_86\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_85)\n    tag_86:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_87:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_87\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HTC.sol\":740:763  uint public blockReward */\n    tag_32:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/HTC.sol\":1805:2009  function setBlockReward(uint reward) public onlyOwner{ // This function is wanted if the owner wants to change the block reward after deployment... */\n    tag_41:\n        /* \"contracts/HTC.sol\":1722:1727  owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HTC.sol\":1708:1727  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HTC.sol\":1708:1718  msg.sender */\n      caller\n        /* \"contracts/HTC.sol\":1708:1727  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/HTC.sol\":1700:1777  require(msg.sender == owner, \"Sorry you must be an owner to access this one\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/HTC.sol\":1989:1999  decimals() */\n      tag_99\n        /* \"contracts/HTC.sol\":1989:1997  decimals */\n      tag_48\n        /* \"contracts/HTC.sol\":1989:1999  decimals() */\n      jump\t// in\n    tag_99:\n        /* \"contracts/HTC.sol\":1983:1985  10 */\n      0x0a\n        /* \"contracts/HTC.sol\":1983:1999  10 ** decimals() */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/HTC.sol\":1973:1979  reward */\n      dup2\n        /* \"contracts/HTC.sol\":1973:2000  reward * (10 ** decimals()) */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"contracts/HTC.sol\":1959:1970  blockReward */\n      0x06\n        /* \"contracts/HTC.sol\":1959:2000  blockReward = reward * (10 ** decimals()) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/HTC.sol\":1805:2009  function setBlockReward(uint reward) public onlyOwner{ // This function is wanted if the owner wants to change the block reward after deployment... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n      immutable(\"0x3ef4406067f3f2b83779fd8c58e51154fe5e1675c0d17583dd1aac1409fbf9d7\")\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HTC.sol\":705:733  address payable public owner */\n    tag_66:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_83\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_83\n      jump\t// in\n    tag_123:\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_125\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_124)\n    tag_125:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_126:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_126\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HTC.sol\":1473:1619  function _update(address from, address to, uint256 value) internal override (ERC20, ERC20Capped) {... */\n    tag_149:\n        /* \"contracts/HTC.sol\":1581:1611  super._update(from, to, value) */\n      tag_162\n        /* \"contracts/HTC.sol\":1595:1599  from */\n      dup4\n        /* \"contracts/HTC.sol\":1601:1603  to */\n      dup4\n        /* \"contracts/HTC.sol\":1605:1610  value */\n      dup4\n        /* \"contracts/HTC.sol\":1581:1594  super._update */\n      tag_163\n        /* \"contracts/HTC.sol\":1581:1611  super._update(from, to, value) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/HTC.sol\":1473:1619  function _update(address from, address to, uint256 value) internal override (ERC20, ERC20Capped) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1036:1407  function _update(address from, address to, uint256 value) internal virtual override {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1160  super._update(from, to, value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1144:1148  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1150:1152  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1154:1159  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1143  super._update */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1130:1160  super._update(from, to, value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1191:1192  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1193  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1179  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1175:1193  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1171:1401  if (from == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1209:1226  uint256 maxSupply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1234  cap() */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1232  cap */\n      tag_52\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1229:1234  cap() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1209:1234  uint256 maxSupply = cap() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1248:1262  uint256 supply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1278  totalSupply() */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1276  totalSupply */\n      tag_36\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1265:1278  totalSupply() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1248:1278  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1305:1314  maxSupply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1296:1302  supply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1296:1314  supply > maxSupply */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1292:1391  if (supply > maxSupply) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1358:1364  supply */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1366:1375  maxSupply */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1341:1376  ERC20ExceededCap(supply, maxSupply) */\n      mload(0x40)\n      0x9e79f85400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1292:1391  if (supply > maxSupply) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1195:1401  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1171:1401  if (from == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1036:1407  function _update(address from, address to, uint256 value) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_177)\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_181)\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_183:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_184:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_185:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_186:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_187:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_219\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_183\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":711:782   */\n      tag_220\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_184\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_221\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_185\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":881:910   */\n      tag_222\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_186\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_24:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_224\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_187\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_189:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_191:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_192:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_230\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_191\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_193:\n        /* \"#utility.yul\":1876:1900   */\n      tag_232\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_192\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_233:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_194:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_235\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_193\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_195:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_196:\n        /* \"#utility.yul\":2232:2256   */\n      tag_238\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_195\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_239:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_197:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_241\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_196\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_27:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_244\n      tag_189\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2525:2644   */\n    tag_243:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_245\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_194\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_246\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_197\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_198:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_199:\n        /* \"#utility.yul\":3089:3110   */\n      tag_249\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_198\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_30:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_251\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_199\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_200:\n        /* \"#utility.yul\":3426:3450   */\n      tag_253\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_195\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_34:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_255\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_200\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_40:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_258\n      tag_189\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3767:3886   */\n    tag_257:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_259\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_197\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_44:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_262\n      tag_189\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4136:4255   */\n    tag_261:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_263\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_194\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_264\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_194\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_265\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_197\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_201:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_202:\n        /* \"#utility.yul\":4826:4848   */\n      tag_268\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_201\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_50:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_270\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_202\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_59:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_273\n      tag_189\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5157:5276   */\n    tag_272:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_274\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_194\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5520   */\n    tag_203:\n        /* \"#utility.yul\":5461:5468   */\n      0x00\n        /* \"#utility.yul\":5490:5514   */\n      tag_276\n        /* \"#utility.yul\":5508:5513   */\n      dup3\n        /* \"#utility.yul\":5490:5514   */\n      tag_191\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5479:5514   */\n      swap1\n      pop\n        /* \"#utility.yul\":5416:5520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5526:5668   */\n    tag_204:\n        /* \"#utility.yul\":5629:5661   */\n      tag_278\n        /* \"#utility.yul\":5655:5660   */\n      dup2\n        /* \"#utility.yul\":5629:5661   */\n      tag_203\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5624:5627   */\n      dup3\n        /* \"#utility.yul\":5617:5662   */\n      mstore\n        /* \"#utility.yul\":5526:5668   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5674:5928   */\n    tag_68:\n        /* \"#utility.yul\":5783:5787   */\n      0x00\n        /* \"#utility.yul\":5821:5823   */\n      0x20\n        /* \"#utility.yul\":5810:5819   */\n      dup3\n        /* \"#utility.yul\":5806:5824   */\n      add\n        /* \"#utility.yul\":5798:5824   */\n      swap1\n      pop\n        /* \"#utility.yul\":5834:5921   */\n      tag_280\n        /* \"#utility.yul\":5918:5919   */\n      0x00\n        /* \"#utility.yul\":5907:5916   */\n      dup4\n        /* \"#utility.yul\":5903:5920   */\n      add\n        /* \"#utility.yul\":5894:5900   */\n      dup5\n        /* \"#utility.yul\":5834:5921   */\n      tag_204\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5674:5928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5934:6408   */\n    tag_78:\n        /* \"#utility.yul\":6002:6008   */\n      0x00\n        /* \"#utility.yul\":6010:6016   */\n      0x00\n        /* \"#utility.yul\":6059:6061   */\n      0x40\n        /* \"#utility.yul\":6047:6056   */\n      dup4\n        /* \"#utility.yul\":6038:6045   */\n      dup6\n        /* \"#utility.yul\":6034:6057   */\n      sub\n        /* \"#utility.yul\":6030:6062   */\n      slt\n        /* \"#utility.yul\":6027:6146   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":6065:6144   */\n      tag_283\n      tag_189\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6027:6146   */\n    tag_282:\n        /* \"#utility.yul\":6185:6186   */\n      0x00\n        /* \"#utility.yul\":6210:6263   */\n      tag_284\n        /* \"#utility.yul\":6255:6262   */\n      dup6\n        /* \"#utility.yul\":6246:6252   */\n      dup3\n        /* \"#utility.yul\":6235:6244   */\n      dup7\n        /* \"#utility.yul\":6231:6253   */\n      add\n        /* \"#utility.yul\":6210:6263   */\n      tag_194\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6200:6263   */\n      swap3\n      pop\n        /* \"#utility.yul\":6156:6273   */\n      pop\n        /* \"#utility.yul\":6312:6314   */\n      0x20\n        /* \"#utility.yul\":6338:6391   */\n      tag_285\n        /* \"#utility.yul\":6383:6390   */\n      dup6\n        /* \"#utility.yul\":6374:6380   */\n      dup3\n        /* \"#utility.yul\":6363:6372   */\n      dup7\n        /* \"#utility.yul\":6359:6381   */\n      add\n        /* \"#utility.yul\":6338:6391   */\n      tag_194\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6328:6391   */\n      swap2\n      pop\n        /* \"#utility.yul\":6283:6401   */\n      pop\n        /* \"#utility.yul\":5934:6408   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6414:6594   */\n    tag_205:\n        /* \"#utility.yul\":6462:6539   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6459:6460   */\n      0x00\n        /* \"#utility.yul\":6452:6540   */\n      mstore\n        /* \"#utility.yul\":6559:6563   */\n      0x22\n        /* \"#utility.yul\":6556:6557   */\n      0x04\n        /* \"#utility.yul\":6549:6564   */\n      mstore\n        /* \"#utility.yul\":6583:6587   */\n      0x24\n        /* \"#utility.yul\":6580:6581   */\n      0x00\n        /* \"#utility.yul\":6573:6588   */\n      revert\n        /* \"#utility.yul\":6600:6920   */\n    tag_83:\n        /* \"#utility.yul\":6644:6650   */\n      0x00\n        /* \"#utility.yul\":6681:6682   */\n      0x02\n        /* \"#utility.yul\":6675:6679   */\n      dup3\n        /* \"#utility.yul\":6671:6683   */\n      div\n        /* \"#utility.yul\":6661:6683   */\n      swap1\n      pop\n        /* \"#utility.yul\":6728:6729   */\n      0x01\n        /* \"#utility.yul\":6722:6726   */\n      dup3\n        /* \"#utility.yul\":6718:6730   */\n      and\n        /* \"#utility.yul\":6749:6767   */\n      dup1\n        /* \"#utility.yul\":6739:6820   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":6805:6809   */\n      0x7f\n        /* \"#utility.yul\":6797:6803   */\n      dup3\n        /* \"#utility.yul\":6793:6810   */\n      and\n        /* \"#utility.yul\":6783:6810   */\n      swap2\n      pop\n        /* \"#utility.yul\":6739:6820   */\n    tag_288:\n        /* \"#utility.yul\":6867:6869   */\n      0x20\n        /* \"#utility.yul\":6859:6865   */\n      dup3\n        /* \"#utility.yul\":6856:6870   */\n      lt\n        /* \"#utility.yul\":6836:6854   */\n      dup2\n        /* \"#utility.yul\":6833:6871   */\n      sub\n        /* \"#utility.yul\":6830:6914   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":6886:6904   */\n      tag_290\n      tag_205\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6830:6914   */\n    tag_289:\n        /* \"#utility.yul\":6651:6920   */\n      pop\n        /* \"#utility.yul\":6600:6920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6926:7158   */\n    tag_206:\n        /* \"#utility.yul\":7066:7100   */\n      0x536f72727920796f75206d75737420626520616e206f776e657220746f206163\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7054:7060   */\n      dup3\n        /* \"#utility.yul\":7050:7064   */\n      add\n        /* \"#utility.yul\":7043:7101   */\n      mstore\n        /* \"#utility.yul\":7135:7150   */\n      0x636573732074686973206f6e6500000000000000000000000000000000000000\n        /* \"#utility.yul\":7130:7132   */\n      0x20\n        /* \"#utility.yul\":7122:7128   */\n      dup3\n        /* \"#utility.yul\":7118:7133   */\n      add\n        /* \"#utility.yul\":7111:7151   */\n      mstore\n        /* \"#utility.yul\":6926:7158   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7164:7530   */\n    tag_207:\n        /* \"#utility.yul\":7306:7309   */\n      0x00\n        /* \"#utility.yul\":7327:7394   */\n      tag_293\n        /* \"#utility.yul\":7391:7393   */\n      0x2d\n        /* \"#utility.yul\":7386:7389   */\n      dup4\n        /* \"#utility.yul\":7327:7394   */\n      tag_184\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7320:7394   */\n      swap2\n      pop\n        /* \"#utility.yul\":7403:7496   */\n      tag_294\n        /* \"#utility.yul\":7492:7495   */\n      dup3\n        /* \"#utility.yul\":7403:7496   */\n      tag_206\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7521:7523   */\n      0x40\n        /* \"#utility.yul\":7516:7519   */\n      dup3\n        /* \"#utility.yul\":7512:7524   */\n      add\n        /* \"#utility.yul\":7505:7524   */\n      swap1\n      pop\n        /* \"#utility.yul\":7164:7530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7536:7955   */\n    tag_97:\n        /* \"#utility.yul\":7702:7706   */\n      0x00\n        /* \"#utility.yul\":7740:7742   */\n      0x20\n        /* \"#utility.yul\":7729:7738   */\n      dup3\n        /* \"#utility.yul\":7725:7743   */\n      add\n        /* \"#utility.yul\":7717:7743   */\n      swap1\n      pop\n        /* \"#utility.yul\":7789:7798   */\n      dup2\n        /* \"#utility.yul\":7783:7787   */\n      dup2\n        /* \"#utility.yul\":7779:7799   */\n      sub\n        /* \"#utility.yul\":7775:7776   */\n      0x00\n        /* \"#utility.yul\":7764:7773   */\n      dup4\n        /* \"#utility.yul\":7760:7777   */\n      add\n        /* \"#utility.yul\":7753:7800   */\n      mstore\n        /* \"#utility.yul\":7817:7948   */\n      tag_296\n        /* \"#utility.yul\":7943:7947   */\n      dup2\n        /* \"#utility.yul\":7817:7948   */\n      tag_207\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7809:7948   */\n      swap1\n      pop\n        /* \"#utility.yul\":7536:7955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7961:8141   */\n    tag_208:\n        /* \"#utility.yul\":8009:8086   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8006:8007   */\n      0x00\n        /* \"#utility.yul\":7999:8087   */\n      mstore\n        /* \"#utility.yul\":8106:8110   */\n      0x11\n        /* \"#utility.yul\":8103:8104   */\n      0x04\n        /* \"#utility.yul\":8096:8111   */\n      mstore\n        /* \"#utility.yul\":8130:8134   */\n      0x24\n        /* \"#utility.yul\":8127:8128   */\n      0x00\n        /* \"#utility.yul\":8120:8135   */\n      revert\n        /* \"#utility.yul\":8147:8249   */\n    tag_209:\n        /* \"#utility.yul\":8189:8197   */\n      0x00\n        /* \"#utility.yul\":8236:8241   */\n      dup2\n        /* \"#utility.yul\":8233:8234   */\n      0x01\n        /* \"#utility.yul\":8229:8242   */\n      shr\n        /* \"#utility.yul\":8208:8242   */\n      swap1\n      pop\n        /* \"#utility.yul\":8147:8249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8255:9103   */\n    tag_210:\n        /* \"#utility.yul\":8316:8321   */\n      0x00\n        /* \"#utility.yul\":8323:8327   */\n      0x00\n        /* \"#utility.yul\":8347:8353   */\n      dup3\n        /* \"#utility.yul\":8338:8353   */\n      swap2\n      pop\n        /* \"#utility.yul\":8371:8376   */\n      dup4\n        /* \"#utility.yul\":8362:8376   */\n      swap1\n      pop\n        /* \"#utility.yul\":8385:9097   */\n    tag_300:\n        /* \"#utility.yul\":8406:8407   */\n      0x01\n        /* \"#utility.yul\":8396:8404   */\n      dup6\n        /* \"#utility.yul\":8393:8408   */\n      gt\n        /* \"#utility.yul\":8385:9097   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":8501:8505   */\n      dup1\n        /* \"#utility.yul\":8496:8499   */\n      dup7\n        /* \"#utility.yul\":8492:8506   */\n      div\n        /* \"#utility.yul\":8486:8490   */\n      dup2\n        /* \"#utility.yul\":8483:8507   */\n      gt\n        /* \"#utility.yul\":8480:8530   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":8510:8528   */\n      tag_304\n      tag_208\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8480:8530   */\n    tag_303:\n        /* \"#utility.yul\":8560:8561   */\n      0x01\n        /* \"#utility.yul\":8550:8558   */\n      dup6\n        /* \"#utility.yul\":8546:8562   */\n      and\n        /* \"#utility.yul\":8543:8994   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":8975:8979   */\n      dup1\n        /* \"#utility.yul\":8968:8973   */\n      dup3\n        /* \"#utility.yul\":8964:8980   */\n      mul\n        /* \"#utility.yul\":8955:8980   */\n      swap2\n      pop\n        /* \"#utility.yul\":8543:8994   */\n    tag_305:\n        /* \"#utility.yul\":9025:9029   */\n      dup1\n        /* \"#utility.yul\":9019:9023   */\n      dup2\n        /* \"#utility.yul\":9015:9030   */\n      mul\n        /* \"#utility.yul\":9007:9030   */\n      swap1\n      pop\n        /* \"#utility.yul\":9055:9087   */\n      tag_306\n        /* \"#utility.yul\":9078:9086   */\n      dup6\n        /* \"#utility.yul\":9055:9087   */\n      tag_209\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9043:9087   */\n      swap5\n      pop\n        /* \"#utility.yul\":8385:9097   */\n      jump(tag_300)\n    tag_302:\n        /* \"#utility.yul\":8255:9103   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9109:10182   */\n    tag_211:\n        /* \"#utility.yul\":9163:9168   */\n      0x00\n        /* \"#utility.yul\":9354:9362   */\n      dup3\n        /* \"#utility.yul\":9344:9384   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":9375:9376   */\n      0x01\n        /* \"#utility.yul\":9366:9376   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9382   */\n      jump(tag_307)\n        /* \"#utility.yul\":9344:9384   */\n    tag_308:\n        /* \"#utility.yul\":9403:9407   */\n      dup2\n        /* \"#utility.yul\":9393:9429   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":9420:9421   */\n      0x00\n        /* \"#utility.yul\":9411:9421   */\n      swap1\n      pop\n        /* \"#utility.yul\":9422:9427   */\n      jump(tag_307)\n        /* \"#utility.yul\":9393:9429   */\n    tag_309:\n        /* \"#utility.yul\":9489:9493   */\n      dup2\n        /* \"#utility.yul\":9537:9538   */\n      0x01\n        /* \"#utility.yul\":9532:9559   */\n      dup2\n      eq\n      tag_311\n      jumpi\n        /* \"#utility.yul\":9573:9574   */\n      0x02\n        /* \"#utility.yul\":9568:9759   */\n      dup2\n      eq\n      tag_312\n      jumpi\n        /* \"#utility.yul\":9482:9759   */\n      jump(tag_310)\n        /* \"#utility.yul\":9532:9559   */\n    tag_311:\n        /* \"#utility.yul\":9550:9551   */\n      0x01\n        /* \"#utility.yul\":9541:9551   */\n      swap2\n      pop\n        /* \"#utility.yul\":9552:9557   */\n      pop\n      jump(tag_307)\n        /* \"#utility.yul\":9568:9759   */\n    tag_312:\n        /* \"#utility.yul\":9613:9616   */\n      0xff\n        /* \"#utility.yul\":9603:9611   */\n      dup5\n        /* \"#utility.yul\":9600:9617   */\n      gt\n        /* \"#utility.yul\":9597:9640   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":9620:9638   */\n      tag_314\n      tag_208\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":9597:9640   */\n    tag_313:\n        /* \"#utility.yul\":9669:9677   */\n      dup4\n        /* \"#utility.yul\":9666:9667   */\n      0x02\n        /* \"#utility.yul\":9662:9678   */\n      exp\n        /* \"#utility.yul\":9653:9678   */\n      swap2\n      pop\n        /* \"#utility.yul\":9704:9707   */\n      dup5\n        /* \"#utility.yul\":9697:9702   */\n      dup3\n        /* \"#utility.yul\":9694:9708   */\n      gt\n        /* \"#utility.yul\":9691:9731   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":9711:9729   */\n      tag_316\n      tag_208\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9691:9731   */\n    tag_315:\n        /* \"#utility.yul\":9744:9749   */\n      pop\n      jump(tag_307)\n        /* \"#utility.yul\":9482:9759   */\n    tag_310:\n      pop\n        /* \"#utility.yul\":9868:9870   */\n      0x20\n        /* \"#utility.yul\":9858:9866   */\n      dup4\n        /* \"#utility.yul\":9855:9871   */\n      lt\n        /* \"#utility.yul\":9849:9852   */\n      0x0133\n        /* \"#utility.yul\":9843:9847   */\n      dup4\n        /* \"#utility.yul\":9840:9853   */\n      lt\n        /* \"#utility.yul\":9836:9872   */\n      and\n        /* \"#utility.yul\":9818:9820   */\n      0x4e\n        /* \"#utility.yul\":9808:9816   */\n      dup5\n        /* \"#utility.yul\":9805:9821   */\n      lt\n        /* \"#utility.yul\":9800:9802   */\n      0x0b\n        /* \"#utility.yul\":9794:9798   */\n      dup5\n        /* \"#utility.yul\":9791:9803   */\n      lt\n        /* \"#utility.yul\":9787:9822   */\n      and\n        /* \"#utility.yul\":9771:9882   */\n      or\n        /* \"#utility.yul\":9768:10014   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":9924:9932   */\n      dup3\n        /* \"#utility.yul\":9918:9922   */\n      dup3\n        /* \"#utility.yul\":9914:9933   */\n      exp\n        /* \"#utility.yul\":9905:9933   */\n      swap1\n      pop\n        /* \"#utility.yul\":9959:9962   */\n      dup4\n        /* \"#utility.yul\":9952:9957   */\n      dup2\n        /* \"#utility.yul\":9949:9963   */\n      gt\n        /* \"#utility.yul\":9946:9986   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":9966:9984   */\n      tag_319\n      tag_208\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9946:9986   */\n    tag_318:\n        /* \"#utility.yul\":9999:10004   */\n      jump(tag_307)\n        /* \"#utility.yul\":9768:10014   */\n    tag_317:\n        /* \"#utility.yul\":10039:10081   */\n      tag_320\n        /* \"#utility.yul\":10077:10080   */\n      dup5\n        /* \"#utility.yul\":10067:10075   */\n      dup5\n        /* \"#utility.yul\":10061:10065   */\n      dup5\n        /* \"#utility.yul\":10058:10059   */\n      0x01\n        /* \"#utility.yul\":10039:10081   */\n      tag_210\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":10024:10081   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10113:10117   */\n      dup2\n        /* \"#utility.yul\":10108:10111   */\n      dup5\n        /* \"#utility.yul\":10104:10118   */\n      div\n        /* \"#utility.yul\":10097:10102   */\n      dup2\n        /* \"#utility.yul\":10094:10119   */\n      gt\n        /* \"#utility.yul\":10091:10142   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":10122:10140   */\n      tag_322\n      tag_208\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":10091:10142   */\n    tag_321:\n        /* \"#utility.yul\":10171:10175   */\n      dup2\n        /* \"#utility.yul\":10164:10169   */\n      dup2\n        /* \"#utility.yul\":10160:10176   */\n      mul\n        /* \"#utility.yul\":10151:10176   */\n      swap1\n      pop\n        /* \"#utility.yul\":9109:10182   */\n    tag_307:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10188:10469   */\n    tag_101:\n        /* \"#utility.yul\":10246:10251   */\n      0x00\n        /* \"#utility.yul\":10270:10293   */\n      tag_324\n        /* \"#utility.yul\":10288:10292   */\n      dup3\n        /* \"#utility.yul\":10270:10293   */\n      tag_195\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10262:10293   */\n      swap2\n      pop\n        /* \"#utility.yul\":10314:10339   */\n      tag_325\n        /* \"#utility.yul\":10330:10338   */\n      dup4\n        /* \"#utility.yul\":10314:10339   */\n      tag_201\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10302:10339   */\n      swap3\n      pop\n        /* \"#utility.yul\":10358:10462   */\n      tag_326\n        /* \"#utility.yul\":10395:10461   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10385:10393   */\n      dup5\n        /* \"#utility.yul\":10379:10383   */\n      dup5\n        /* \"#utility.yul\":10358:10462   */\n      tag_211\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10349:10462   */\n      swap1\n      pop\n        /* \"#utility.yul\":10188:10469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10475:10885   */\n    tag_103:\n        /* \"#utility.yul\":10515:10522   */\n      0x00\n        /* \"#utility.yul\":10538:10558   */\n      tag_328\n        /* \"#utility.yul\":10556:10557   */\n      dup3\n        /* \"#utility.yul\":10538:10558   */\n      tag_195\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10533:10558   */\n      swap2\n      pop\n        /* \"#utility.yul\":10572:10592   */\n      tag_329\n        /* \"#utility.yul\":10590:10591   */\n      dup4\n        /* \"#utility.yul\":10572:10592   */\n      tag_195\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10567:10592   */\n      swap3\n      pop\n        /* \"#utility.yul\":10627:10628   */\n      dup3\n        /* \"#utility.yul\":10624:10625   */\n      dup3\n        /* \"#utility.yul\":10620:10629   */\n      mul\n        /* \"#utility.yul\":10649:10679   */\n      tag_330\n        /* \"#utility.yul\":10667:10678   */\n      dup2\n        /* \"#utility.yul\":10649:10679   */\n      tag_195\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":10638:10679   */\n      swap2\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      dup3\n        /* \"#utility.yul\":10819:10826   */\n      dup3\n        /* \"#utility.yul\":10815:10830   */\n      div\n        /* \"#utility.yul\":10812:10813   */\n      dup5\n        /* \"#utility.yul\":10809:10831   */\n      eq\n        /* \"#utility.yul\":10789:10790   */\n      dup4\n        /* \"#utility.yul\":10782:10791   */\n      iszero\n        /* \"#utility.yul\":10762:10845   */\n      or\n        /* \"#utility.yul\":10739:10878   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":10858:10876   */\n      tag_332\n      tag_208\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10739:10878   */\n    tag_331:\n        /* \"#utility.yul\":10523:10885   */\n      pop\n        /* \"#utility.yul\":10475:10885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10891:11009   */\n    tag_212:\n        /* \"#utility.yul\":10978:11002   */\n      tag_334\n        /* \"#utility.yul\":10996:11001   */\n      dup2\n        /* \"#utility.yul\":10978:11002   */\n      tag_192\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10973:10976   */\n      dup3\n        /* \"#utility.yul\":10966:11003   */\n      mstore\n        /* \"#utility.yul\":10891:11009   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11015:11457   */\n    tag_140:\n        /* \"#utility.yul\":11164:11168   */\n      0x00\n        /* \"#utility.yul\":11202:11204   */\n      0x60\n        /* \"#utility.yul\":11191:11200   */\n      dup3\n        /* \"#utility.yul\":11187:11205   */\n      add\n        /* \"#utility.yul\":11179:11205   */\n      swap1\n      pop\n        /* \"#utility.yul\":11215:11286   */\n      tag_336\n        /* \"#utility.yul\":11283:11284   */\n      0x00\n        /* \"#utility.yul\":11272:11281   */\n      dup4\n        /* \"#utility.yul\":11268:11285   */\n      add\n        /* \"#utility.yul\":11259:11265   */\n      dup7\n        /* \"#utility.yul\":11215:11286   */\n      tag_212\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11296:11368   */\n      tag_337\n        /* \"#utility.yul\":11364:11366   */\n      0x20\n        /* \"#utility.yul\":11353:11362   */\n      dup4\n        /* \"#utility.yul\":11349:11367   */\n      add\n        /* \"#utility.yul\":11340:11346   */\n      dup6\n        /* \"#utility.yul\":11296:11368   */\n      tag_200\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11378:11450   */\n      tag_338\n        /* \"#utility.yul\":11446:11448   */\n      0x40\n        /* \"#utility.yul\":11435:11444   */\n      dup4\n        /* \"#utility.yul\":11431:11449   */\n      add\n        /* \"#utility.yul\":11422:11428   */\n      dup5\n        /* \"#utility.yul\":11378:11450   */\n      tag_200\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11015:11457   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11463:11685   */\n    tag_145:\n        /* \"#utility.yul\":11556:11560   */\n      0x00\n        /* \"#utility.yul\":11594:11596   */\n      0x20\n        /* \"#utility.yul\":11583:11592   */\n      dup3\n        /* \"#utility.yul\":11579:11597   */\n      add\n        /* \"#utility.yul\":11571:11597   */\n      swap1\n      pop\n        /* \"#utility.yul\":11607:11678   */\n      tag_340\n        /* \"#utility.yul\":11675:11676   */\n      0x00\n        /* \"#utility.yul\":11664:11673   */\n      dup4\n        /* \"#utility.yul\":11660:11677   */\n      add\n        /* \"#utility.yul\":11651:11657   */\n      dup5\n        /* \"#utility.yul\":11607:11678   */\n      tag_212\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11463:11685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11691:12023   */\n    tag_172:\n        /* \"#utility.yul\":11812:11816   */\n      0x00\n        /* \"#utility.yul\":11850:11852   */\n      0x40\n        /* \"#utility.yul\":11839:11848   */\n      dup3\n        /* \"#utility.yul\":11835:11853   */\n      add\n        /* \"#utility.yul\":11827:11853   */\n      swap1\n      pop\n        /* \"#utility.yul\":11863:11934   */\n      tag_342\n        /* \"#utility.yul\":11931:11932   */\n      0x00\n        /* \"#utility.yul\":11920:11929   */\n      dup4\n        /* \"#utility.yul\":11916:11933   */\n      add\n        /* \"#utility.yul\":11907:11913   */\n      dup6\n        /* \"#utility.yul\":11863:11934   */\n      tag_200\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11944:12016   */\n      tag_343\n        /* \"#utility.yul\":12012:12014   */\n      0x20\n        /* \"#utility.yul\":12001:12010   */\n      dup4\n        /* \"#utility.yul\":11997:12015   */\n      add\n        /* \"#utility.yul\":11988:11994   */\n      dup5\n        /* \"#utility.yul\":11944:12016   */\n      tag_200\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11691:12023   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12029:12220   */\n    tag_176:\n        /* \"#utility.yul\":12069:12072   */\n      0x00\n        /* \"#utility.yul\":12088:12108   */\n      tag_345\n        /* \"#utility.yul\":12106:12107   */\n      dup3\n        /* \"#utility.yul\":12088:12108   */\n      tag_195\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12083:12108   */\n      swap2\n      pop\n        /* \"#utility.yul\":12122:12142   */\n      tag_346\n        /* \"#utility.yul\":12140:12141   */\n      dup4\n        /* \"#utility.yul\":12122:12142   */\n      tag_195\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":12117:12142   */\n      swap3\n      pop\n        /* \"#utility.yul\":12165:12166   */\n      dup3\n        /* \"#utility.yul\":12162:12163   */\n      dup3\n        /* \"#utility.yul\":12158:12167   */\n      add\n        /* \"#utility.yul\":12151:12167   */\n      swap1\n      pop\n        /* \"#utility.yul\":12186:12189   */\n      dup1\n        /* \"#utility.yul\":12183:12184   */\n      dup3\n        /* \"#utility.yul\":12180:12190   */\n      gt\n        /* \"#utility.yul\":12177:12213   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":12193:12211   */\n      tag_348\n      tag_208\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":12177:12213   */\n    tag_347:\n        /* \"#utility.yul\":12029:12220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220efedf29515cf1072c9b523c535f85b2b895593aee1f2836af5b2565712c188d364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_993": {
									"entryPoint": null,
									"id": 993,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 516,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_1024": {
									"entryPoint": 649,
									"id": 1024,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 852,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_873": {
									"entryPoint": 671,
									"id": 873,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@cap_825": {
									"entryPoint": 1389,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 508,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 1398,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2033,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2216,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2348,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11943:8",
										"nodeType": "YulBlock",
										"src": "0:11943:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:32:8",
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nativeSrc": "389:16:8",
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:8",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nativeSrc": "460:79:8",
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:8",
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:8",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nativeSrc": "519:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nativeSrc": "519:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nativeSrc": "490:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nativeSrc": "480:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nativeSrc": "473:43:8",
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nativeSrc": "470:63:8",
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:8",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nativeSrc": "608:80:8",
													"nodeType": "YulBlock",
													"src": "608:80:8",
													"statements": [
														{
															"nativeSrc": "618:22:8",
															"nodeType": "YulAssignment",
															"src": "618:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:8"
																},
																"nativeSrc": "627:13:8",
																"nodeType": "YulFunctionCall",
																"src": "627:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:8"
																},
																"nativeSrc": "649:33:8",
																"nodeType": "YulFunctionCall",
																"src": "649:33:8"
															},
															"nativeSrc": "649:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:8",
														"nodeType": "YulTypedName",
														"src": "586:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:8",
														"nodeType": "YulTypedName",
														"src": "594:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:8",
														"nodeType": "YulTypedName",
														"src": "602:5:8",
														"type": ""
													}
												],
												"src": "545:143:8"
											},
											{
												"body": {
													"nativeSrc": "788:413:8",
													"nodeType": "YulBlock",
													"src": "788:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "834:83:8",
																"nodeType": "YulBlock",
																"src": "834:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "836:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:8"
																			},
																			"nativeSrc": "836:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:8"
																		},
																		"nativeSrc": "836:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "809:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "805:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:8"
																		},
																		"nativeSrc": "805:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:2:8",
																		"nodeType": "YulLiteral",
																		"src": "830:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "801:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:8"
																},
																"nativeSrc": "801:32:8",
																"nodeType": "YulFunctionCall",
																"src": "801:32:8"
															},
															"nativeSrc": "798:119:8",
															"nodeType": "YulIf",
															"src": "798:119:8"
														},
														{
															"nativeSrc": "927:128:8",
															"nodeType": "YulBlock",
															"src": "927:128:8",
															"statements": [
																{
																	"nativeSrc": "942:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "956:1:8",
																		"nodeType": "YulLiteral",
																		"src": "956:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "946:6:8",
																			"nodeType": "YulTypedName",
																			"src": "946:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "971:74:8",
																	"nodeType": "YulAssignment",
																	"src": "971:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1017:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1028:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1013:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:8"
																				},
																				"nativeSrc": "1013:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "981:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:8"
																		},
																		"nativeSrc": "981:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "971:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1065:129:8",
															"nodeType": "YulBlock",
															"src": "1065:129:8",
															"statements": [
																{
																	"nativeSrc": "1080:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1094:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1084:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1110:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1110:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1156:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1167:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1152:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:8"
																				},
																				"nativeSrc": "1152:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1176:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1120:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:8"
																		},
																		"nativeSrc": "1120:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1110:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "750:9:8",
														"nodeType": "YulTypedName",
														"src": "750:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "761:7:8",
														"nodeType": "YulTypedName",
														"src": "761:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "773:6:8",
														"nodeType": "YulTypedName",
														"src": "773:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "781:6:8",
														"nodeType": "YulTypedName",
														"src": "781:6:8",
														"type": ""
													}
												],
												"src": "694:507:8"
											},
											{
												"body": {
													"nativeSrc": "1235:152:8",
													"nodeType": "YulBlock",
													"src": "1235:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1252:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1252:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1255:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1255:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1245:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:8"
																},
																"nativeSrc": "1245:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1245:88:8"
															},
															"nativeSrc": "1245:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1245:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1349:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1349:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1352:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1352:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:8"
																},
																"nativeSrc": "1342:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1342:15:8"
															},
															"nativeSrc": "1342:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1342:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1373:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1373:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1376:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1376:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1366:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:8"
																},
																"nativeSrc": "1366:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1366:15:8"
															},
															"nativeSrc": "1366:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1366:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1207:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1207:180:8"
											},
											{
												"body": {
													"nativeSrc": "1444:51:8",
													"nodeType": "YulBlock",
													"src": "1444:51:8",
													"statements": [
														{
															"nativeSrc": "1454:34:8",
															"nodeType": "YulAssignment",
															"src": "1454:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1482:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1482:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1475:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1475:3:8"
																},
																"nativeSrc": "1475:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1475:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1454:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1454:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "1393:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1425:5:8",
														"nodeType": "YulTypedName",
														"src": "1425:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1435:8:8",
														"nodeType": "YulTypedName",
														"src": "1435:8:8",
														"type": ""
													}
												],
												"src": "1393:102:8"
											},
											{
												"body": {
													"nativeSrc": "1574:775:8",
													"nodeType": "YulBlock",
													"src": "1574:775:8",
													"statements": [
														{
															"nativeSrc": "1584:15:8",
															"nodeType": "YulAssignment",
															"src": "1584:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "1593:6:8",
																"nodeType": "YulIdentifier",
																"src": "1593:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "1584:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1584:5:8"
																}
															]
														},
														{
															"nativeSrc": "1608:14:8",
															"nodeType": "YulAssignment",
															"src": "1608:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "1617:5:8",
																"nodeType": "YulIdentifier",
																"src": "1617:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "1608:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1608:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1666:677:8",
																"nodeType": "YulBlock",
																"src": "1666:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "1754:22:8",
																			"nodeType": "YulBlock",
																			"src": "1754:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "1756:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "1756:16:8"
																						},
																						"nativeSrc": "1756:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1756:18:8"
																					},
																					"nativeSrc": "1756:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "1756:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1732:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1732:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "1742:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1742:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "1747:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "1747:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "1738:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1738:3:8"
																					},
																					"nativeSrc": "1738:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1738:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1729:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1729:2:8"
																			},
																			"nativeSrc": "1729:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1729:24:8"
																		},
																		"nativeSrc": "1726:50:8",
																		"nodeType": "YulIf",
																		"src": "1726:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "1821:419:8",
																			"nodeType": "YulBlock",
																			"src": "1821:419:8",
																			"statements": [
																				{
																					"nativeSrc": "2201:25:8",
																					"nodeType": "YulAssignment",
																					"src": "2201:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "2214:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2214:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "2221:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "2221:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "2210:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2210:3:8"
																						},
																						"nativeSrc": "2210:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2210:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "2201:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "2201:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1796:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "1796:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1806:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1806:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1792:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1792:3:8"
																			},
																			"nativeSrc": "1792:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1792:16:8"
																		},
																		"nativeSrc": "1789:451:8",
																		"nodeType": "YulIf",
																		"src": "1789:451:8"
																	},
																	{
																		"nativeSrc": "2253:23:8",
																		"nodeType": "YulAssignment",
																		"src": "2253:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "2265:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2265:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "2271:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2271:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "2261:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:3:8"
																			},
																			"nativeSrc": "2261:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "2253:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2253:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2289:44:8",
																		"nodeType": "YulAssignment",
																		"src": "2289:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "2324:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "2324:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "2301:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "2301:22:8"
																			},
																			"nativeSrc": "2301:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2301:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "2289:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "2289:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1642:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1642:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1652:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1652:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1639:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1639:2:8"
																},
																"nativeSrc": "1639:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1639:15:8"
															},
															"nativeSrc": "1631:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1655:2:8",
																"nodeType": "YulBlock",
																"src": "1655:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "1635:3:8",
																"nodeType": "YulBlock",
																"src": "1635:3:8",
																"statements": []
															},
															"src": "1631:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "1501:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "1529:6:8",
														"nodeType": "YulTypedName",
														"src": "1529:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "1537:5:8",
														"nodeType": "YulTypedName",
														"src": "1537:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1544:8:8",
														"nodeType": "YulTypedName",
														"src": "1544:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1554:3:8",
														"nodeType": "YulTypedName",
														"src": "1554:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1562:5:8",
														"nodeType": "YulTypedName",
														"src": "1562:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "1569:4:8",
														"nodeType": "YulTypedName",
														"src": "1569:4:8",
														"type": ""
													}
												],
												"src": "1501:848:8"
											},
											{
												"body": {
													"nativeSrc": "2415:1013:8",
													"nodeType": "YulBlock",
													"src": "2415:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2610:20:8",
																"nodeType": "YulBlock",
																"src": "2610:20:8",
																"statements": [
																	{
																		"nativeSrc": "2612:10:8",
																		"nodeType": "YulAssignment",
																		"src": "2612:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2621:1:8",
																			"nodeType": "YulLiteral",
																			"src": "2621:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "2612:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2612:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2623:5:8",
																		"nodeType": "YulLeave",
																		"src": "2623:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2600:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2600:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2593:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:8"
																},
																"nativeSrc": "2593:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2593:16:8"
															},
															"nativeSrc": "2590:40:8",
															"nodeType": "YulIf",
															"src": "2590:40:8"
														},
														{
															"body": {
																"nativeSrc": "2655:20:8",
																"nodeType": "YulBlock",
																"src": "2655:20:8",
																"statements": [
																	{
																		"nativeSrc": "2657:10:8",
																		"nodeType": "YulAssignment",
																		"src": "2657:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2666:1:8",
																			"nodeType": "YulLiteral",
																			"src": "2666:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "2657:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2657:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2668:5:8",
																		"nodeType": "YulLeave",
																		"src": "2668:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2649:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2649:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2642:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:8"
																},
																"nativeSrc": "2642:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2642:12:8"
															},
															"nativeSrc": "2639:36:8",
															"nodeType": "YulIf",
															"src": "2639:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2785:20:8",
																		"nodeType": "YulBlock",
																		"src": "2785:20:8",
																		"statements": [
																			{
																				"nativeSrc": "2787:10:8",
																				"nodeType": "YulAssignment",
																				"src": "2787:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2796:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2796:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "2787:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2787:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "2798:5:8",
																				"nodeType": "YulLeave",
																				"src": "2798:5:8"
																			}
																		]
																	},
																	"nativeSrc": "2778:27:8",
																	"nodeType": "YulCase",
																	"src": "2778:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2783:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2783:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2829:176:8",
																		"nodeType": "YulBlock",
																		"src": "2829:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "2864:22:8",
																					"nodeType": "YulBlock",
																					"src": "2864:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "2866:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "2866:16:8"
																								},
																								"nativeSrc": "2866:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2866:18:8"
																							},
																							"nativeSrc": "2866:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2866:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "2849:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "2849:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2859:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2859:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "2846:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2846:2:8"
																					},
																					"nativeSrc": "2846:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2846:17:8"
																				},
																				"nativeSrc": "2843:43:8",
																				"nodeType": "YulIf",
																				"src": "2843:43:8"
																			},
																			{
																				"nativeSrc": "2899:25:8",
																				"nodeType": "YulAssignment",
																				"src": "2899:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2912:1:8",
																							"nodeType": "YulLiteral",
																							"src": "2912:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "2915:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "2915:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "2908:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2908:3:8"
																					},
																					"nativeSrc": "2908:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2908:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "2899:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2899:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2955:22:8",
																					"nodeType": "YulBlock",
																					"src": "2955:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "2957:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "2957:16:8"
																								},
																								"nativeSrc": "2957:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2957:18:8"
																							},
																							"nativeSrc": "2957:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2957:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "2943:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "2943:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "2950:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2950:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "2940:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2940:2:8"
																					},
																					"nativeSrc": "2940:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2940:14:8"
																				},
																				"nativeSrc": "2937:40:8",
																				"nodeType": "YulIf",
																				"src": "2937:40:8"
																			},
																			{
																				"nativeSrc": "2990:5:8",
																				"nodeType": "YulLeave",
																				"src": "2990:5:8"
																			}
																		]
																	},
																	"nativeSrc": "2814:191:8",
																	"nodeType": "YulCase",
																	"src": "2814:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2819:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2819:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "2735:4:8",
																"nodeType": "YulIdentifier",
																"src": "2735:4:8"
															},
															"nativeSrc": "2728:277:8",
															"nodeType": "YulSwitch",
															"src": "2728:277:8"
														},
														{
															"body": {
																"nativeSrc": "3137:123:8",
																"nodeType": "YulBlock",
																"src": "3137:123:8",
																"statements": [
																	{
																		"nativeSrc": "3151:28:8",
																		"nodeType": "YulAssignment",
																		"src": "3151:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3164:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3164:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3170:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3170:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3160:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3160:3:8"
																			},
																			"nativeSrc": "3160:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3160:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3151:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3151:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3210:22:8",
																			"nodeType": "YulBlock",
																			"src": "3210:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3212:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "3212:16:8"
																						},
																						"nativeSrc": "3212:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3212:18:8"
																					},
																					"nativeSrc": "3212:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "3212:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "3198:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3198:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "3205:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3205:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3195:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3195:2:8"
																			},
																			"nativeSrc": "3195:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3195:14:8"
																		},
																		"nativeSrc": "3192:40:8",
																		"nodeType": "YulIf",
																		"src": "3192:40:8"
																	},
																	{
																		"nativeSrc": "3245:5:8",
																		"nodeType": "YulLeave",
																		"src": "3245:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3040:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3040:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3046:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3046:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3037:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3037:2:8"
																				},
																				"nativeSrc": "3037:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3037:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3054:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "3054:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3064:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3064:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3051:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3051:2:8"
																				},
																				"nativeSrc": "3051:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3051:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3033:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:8"
																		},
																		"nativeSrc": "3033:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3033:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3089:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3089:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3095:3:8",
																						"nodeType": "YulLiteral",
																						"src": "3095:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3086:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3086:2:8"
																				},
																				"nativeSrc": "3086:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3086:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3104:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "3104:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3114:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3114:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3101:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3101:2:8"
																				},
																				"nativeSrc": "3101:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3101:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3082:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:8"
																		},
																		"nativeSrc": "3082:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3082:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3017:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3017:2:8"
																},
																"nativeSrc": "3017:111:8",
																"nodeType": "YulFunctionCall",
																"src": "3017:111:8"
															},
															"nativeSrc": "3014:246:8",
															"nodeType": "YulIf",
															"src": "3014:246:8"
														},
														{
															"nativeSrc": "3270:57:8",
															"nodeType": "YulAssignment",
															"src": "3270:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3304:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3304:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "3307:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3307:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3313:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3313:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "3323:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3323:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3285:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3285:18:8"
																},
																"nativeSrc": "3285:42:8",
																"nodeType": "YulFunctionCall",
																"src": "3285:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3270:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3270:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "3277:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3277:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3366:22:8",
																"nodeType": "YulBlock",
																"src": "3366:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3368:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "3368:16:8"
																			},
																			"nativeSrc": "3368:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3368:18:8"
																		},
																		"nativeSrc": "3368:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3368:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "3343:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3343:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "3354:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3354:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "3359:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3359:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3350:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:8"
																		},
																		"nativeSrc": "3350:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3340:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3340:2:8"
																},
																"nativeSrc": "3340:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3340:25:8"
															},
															"nativeSrc": "3337:51:8",
															"nodeType": "YulIf",
															"src": "3337:51:8"
														},
														{
															"nativeSrc": "3397:25:8",
															"nodeType": "YulAssignment",
															"src": "3397:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "3410:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3410:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "3417:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3417:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3406:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3406:3:8"
																},
																"nativeSrc": "3406:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3406:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3397:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3397:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "2355:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2385:4:8",
														"nodeType": "YulTypedName",
														"src": "2385:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2391:8:8",
														"nodeType": "YulTypedName",
														"src": "2391:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "2401:3:8",
														"nodeType": "YulTypedName",
														"src": "2401:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2409:5:8",
														"nodeType": "YulTypedName",
														"src": "2409:5:8",
														"type": ""
													}
												],
												"src": "2355:1073:8"
											},
											{
												"body": {
													"nativeSrc": "3477:43:8",
													"nodeType": "YulBlock",
													"src": "3477:43:8",
													"statements": [
														{
															"nativeSrc": "3487:27:8",
															"nodeType": "YulAssignment",
															"src": "3487:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3502:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3502:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3509:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3509:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3498:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:8"
																},
																"nativeSrc": "3498:16:8",
																"nodeType": "YulFunctionCall",
																"src": "3498:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3487:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3487:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3434:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3459:5:8",
														"nodeType": "YulTypedName",
														"src": "3459:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3469:7:8",
														"nodeType": "YulTypedName",
														"src": "3469:7:8",
														"type": ""
													}
												],
												"src": "3434:86:8"
											},
											{
												"body": {
													"nativeSrc": "3590:217:8",
													"nodeType": "YulBlock",
													"src": "3590:217:8",
													"statements": [
														{
															"nativeSrc": "3600:31:8",
															"nodeType": "YulAssignment",
															"src": "3600:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3626:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3626:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3608:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3608:17:8"
																},
																"nativeSrc": "3608:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3608:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3600:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3600:4:8"
																}
															]
														},
														{
															"nativeSrc": "3640:37:8",
															"nodeType": "YulAssignment",
															"src": "3640:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3668:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3668:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "3652:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "3652:15:8"
																},
																"nativeSrc": "3652:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3652:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "3640:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3640:8:8"
																}
															]
														},
														{
															"nativeSrc": "3687:113:8",
															"nodeType": "YulAssignment",
															"src": "3687:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3717:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3717:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3723:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3723:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3733:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "3696:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "3696:20:8"
																},
																"nativeSrc": "3696:104:8",
																"nodeType": "YulFunctionCall",
																"src": "3696:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3687:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3687:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "3526:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3565:4:8",
														"nodeType": "YulTypedName",
														"src": "3565:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3571:8:8",
														"nodeType": "YulTypedName",
														"src": "3571:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3584:5:8",
														"nodeType": "YulTypedName",
														"src": "3584:5:8",
														"type": ""
													}
												],
												"src": "3526:281:8"
											},
											{
												"body": {
													"nativeSrc": "3861:362:8",
													"nodeType": "YulBlock",
													"src": "3861:362:8",
													"statements": [
														{
															"nativeSrc": "3871:25:8",
															"nodeType": "YulAssignment",
															"src": "3871:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3894:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3894:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3876:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3876:17:8"
																},
																"nativeSrc": "3876:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3876:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3871:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "3871:1:8"
																}
															]
														},
														{
															"nativeSrc": "3905:25:8",
															"nodeType": "YulAssignment",
															"src": "3905:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3928:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3928:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3910:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3910:17:8"
																},
																"nativeSrc": "3910:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3910:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3905:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "3905:1:8"
																}
															]
														},
														{
															"nativeSrc": "3939:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3939:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3962:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3962:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3965:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "3965:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3958:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3958:3:8"
																},
																"nativeSrc": "3958:9:8",
																"nodeType": "YulFunctionCall",
																"src": "3958:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3943:11:8",
																	"nodeType": "YulTypedName",
																	"src": "3943:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3976:41:8",
															"nodeType": "YulAssignment",
															"src": "3976:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4005:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "4005:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3987:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3987:17:8"
																},
																"nativeSrc": "3987:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3987:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3976:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3976:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4194:22:8",
																"nodeType": "YulBlock",
																"src": "4194:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4196:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4196:16:8"
																			},
																			"nativeSrc": "4196:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4196:18:8"
																		},
																		"nativeSrc": "4196:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4196:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4127:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "4127:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4120:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4120:6:8"
																				},
																				"nativeSrc": "4120:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4120:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4150:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "4150:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4157:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "4157:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4166:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "4166:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4153:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4153:3:8"
																						},
																						"nativeSrc": "4153:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4153:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4147:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4147:2:8"
																				},
																				"nativeSrc": "4147:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4147:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4100:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4100:2:8"
																		},
																		"nativeSrc": "4100:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4100:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4080:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:8"
																},
																"nativeSrc": "4080:113:8",
																"nodeType": "YulFunctionCall",
																"src": "4080:113:8"
															},
															"nativeSrc": "4077:139:8",
															"nodeType": "YulIf",
															"src": "4077:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3813:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3844:1:8",
														"nodeType": "YulTypedName",
														"src": "3844:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3847:1:8",
														"nodeType": "YulTypedName",
														"src": "3847:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3853:7:8",
														"nodeType": "YulTypedName",
														"src": "3853:7:8",
														"type": ""
													}
												],
												"src": "3813:410:8"
											},
											{
												"body": {
													"nativeSrc": "4288:40:8",
													"nodeType": "YulBlock",
													"src": "4288:40:8",
													"statements": [
														{
															"nativeSrc": "4299:22:8",
															"nodeType": "YulAssignment",
															"src": "4299:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4315:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4315:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4309:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4309:5:8"
																},
																"nativeSrc": "4309:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4309:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4299:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4299:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4229:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4271:5:8",
														"nodeType": "YulTypedName",
														"src": "4271:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4281:6:8",
														"nodeType": "YulTypedName",
														"src": "4281:6:8",
														"type": ""
													}
												],
												"src": "4229:99:8"
											},
											{
												"body": {
													"nativeSrc": "4362:152:8",
													"nodeType": "YulBlock",
													"src": "4362:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4379:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4379:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4382:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4382:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4372:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4372:6:8"
																},
																"nativeSrc": "4372:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4372:88:8"
															},
															"nativeSrc": "4372:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4372:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4476:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4476:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4479:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4479:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4469:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4469:6:8"
																},
																"nativeSrc": "4469:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4469:15:8"
															},
															"nativeSrc": "4469:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4469:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4500:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4500:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4503:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4493:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:8"
																},
																"nativeSrc": "4493:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4493:15:8"
															},
															"nativeSrc": "4493:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4493:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4334:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4334:180:8"
											},
											{
												"body": {
													"nativeSrc": "4548:152:8",
													"nodeType": "YulBlock",
													"src": "4548:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4565:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4565:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4568:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4568:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4558:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4558:6:8"
																},
																"nativeSrc": "4558:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4558:88:8"
															},
															"nativeSrc": "4558:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4558:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4662:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4662:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4665:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4665:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4655:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4655:6:8"
																},
																"nativeSrc": "4655:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4655:15:8"
															},
															"nativeSrc": "4655:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4655:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4686:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4686:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4689:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4689:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4679:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4679:6:8"
																},
																"nativeSrc": "4679:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4679:15:8"
															},
															"nativeSrc": "4679:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4679:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4520:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4520:180:8"
											},
											{
												"body": {
													"nativeSrc": "4757:269:8",
													"nodeType": "YulBlock",
													"src": "4757:269:8",
													"statements": [
														{
															"nativeSrc": "4767:22:8",
															"nodeType": "YulAssignment",
															"src": "4767:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4781:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4781:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4787:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4787:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4777:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4777:3:8"
																},
																"nativeSrc": "4777:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4777:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4767:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4767:6:8"
																}
															]
														},
														{
															"nativeSrc": "4798:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4798:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4828:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4828:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4834:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4834:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4824:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4824:3:8"
																},
																"nativeSrc": "4824:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4824:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4802:18:8",
																	"nodeType": "YulTypedName",
																	"src": "4802:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4875:51:8",
																"nodeType": "YulBlock",
																"src": "4875:51:8",
																"statements": [
																	{
																		"nativeSrc": "4889:27:8",
																		"nodeType": "YulAssignment",
																		"src": "4889:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4903:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4903:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4911:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4911:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4899:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4899:3:8"
																			},
																			"nativeSrc": "4899:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4899:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4889:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4889:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4855:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4855:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4848:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:8"
																},
																"nativeSrc": "4848:26:8",
																"nodeType": "YulFunctionCall",
																"src": "4848:26:8"
															},
															"nativeSrc": "4845:81:8",
															"nodeType": "YulIf",
															"src": "4845:81:8"
														},
														{
															"body": {
																"nativeSrc": "4978:42:8",
																"nodeType": "YulBlock",
																"src": "4978:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4992:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4992:16:8"
																			},
																			"nativeSrc": "4992:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4992:18:8"
																		},
																		"nativeSrc": "4992:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4992:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4942:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4942:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4965:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4965:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4973:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4973:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4962:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4962:2:8"
																		},
																		"nativeSrc": "4962:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4962:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4939:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4939:2:8"
																},
																"nativeSrc": "4939:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4939:38:8"
															},
															"nativeSrc": "4936:84:8",
															"nodeType": "YulIf",
															"src": "4936:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4706:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4741:4:8",
														"nodeType": "YulTypedName",
														"src": "4741:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4750:6:8",
														"nodeType": "YulTypedName",
														"src": "4750:6:8",
														"type": ""
													}
												],
												"src": "4706:320:8"
											},
											{
												"body": {
													"nativeSrc": "5086:87:8",
													"nodeType": "YulBlock",
													"src": "5086:87:8",
													"statements": [
														{
															"nativeSrc": "5096:11:8",
															"nodeType": "YulAssignment",
															"src": "5096:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "5104:3:8",
																"nodeType": "YulIdentifier",
																"src": "5104:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5096:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5096:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5124:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5124:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5127:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5117:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:8"
																},
																"nativeSrc": "5117:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5117:14:8"
															},
															"nativeSrc": "5117:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "5117:14:8"
														},
														{
															"nativeSrc": "5140:26:8",
															"nodeType": "YulAssignment",
															"src": "5140:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5158:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5161:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5161:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5148:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5148:9:8"
																},
																"nativeSrc": "5148:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5148:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5140:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5140:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5032:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5073:3:8",
														"nodeType": "YulTypedName",
														"src": "5073:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5081:4:8",
														"nodeType": "YulTypedName",
														"src": "5081:4:8",
														"type": ""
													}
												],
												"src": "5032:141:8"
											},
											{
												"body": {
													"nativeSrc": "5223:49:8",
													"nodeType": "YulBlock",
													"src": "5223:49:8",
													"statements": [
														{
															"nativeSrc": "5233:33:8",
															"nodeType": "YulAssignment",
															"src": "5233:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5251:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5251:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5258:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5258:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5247:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5247:3:8"
																		},
																		"nativeSrc": "5247:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5247:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5263:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5243:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5243:3:8"
																},
																"nativeSrc": "5243:23:8",
																"nodeType": "YulFunctionCall",
																"src": "5243:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5233:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5179:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5206:5:8",
														"nodeType": "YulTypedName",
														"src": "5206:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5216:6:8",
														"nodeType": "YulTypedName",
														"src": "5216:6:8",
														"type": ""
													}
												],
												"src": "5179:93:8"
											},
											{
												"body": {
													"nativeSrc": "5331:54:8",
													"nodeType": "YulBlock",
													"src": "5331:54:8",
													"statements": [
														{
															"nativeSrc": "5341:37:8",
															"nodeType": "YulAssignment",
															"src": "5341:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5366:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5366:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5372:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5372:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5362:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:8"
																},
																"nativeSrc": "5362:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5362:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5341:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5341:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5278:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5306:4:8",
														"nodeType": "YulTypedName",
														"src": "5306:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5312:5:8",
														"nodeType": "YulTypedName",
														"src": "5312:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5322:8:8",
														"nodeType": "YulTypedName",
														"src": "5322:8:8",
														"type": ""
													}
												],
												"src": "5278:107:8"
											},
											{
												"body": {
													"nativeSrc": "5467:317:8",
													"nodeType": "YulBlock",
													"src": "5467:317:8",
													"statements": [
														{
															"nativeSrc": "5477:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5477:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5498:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "5498:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5510:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5494:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:8"
																},
																"nativeSrc": "5494:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5494:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5481:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5481:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5521:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5521:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5552:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5552:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5563:66:8",
																		"nodeType": "YulLiteral",
																		"src": "5563:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5533:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5533:18:8"
																},
																"nativeSrc": "5533:97:8",
																"nodeType": "YulFunctionCall",
																"src": "5533:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5525:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5525:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5639:51:8",
															"nodeType": "YulAssignment",
															"src": "5639:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5670:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5670:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5681:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "5681:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5651:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5651:18:8"
																},
																"nativeSrc": "5651:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5651:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5639:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5639:8:8"
																}
															]
														},
														{
															"nativeSrc": "5699:30:8",
															"nodeType": "YulAssignment",
															"src": "5699:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5712:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5712:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5723:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5723:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5719:3:8"
																		},
																		"nativeSrc": "5719:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5719:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5708:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:8"
																},
																"nativeSrc": "5708:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5708:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5699:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5699:5:8"
																}
															]
														},
														{
															"nativeSrc": "5738:40:8",
															"nodeType": "YulAssignment",
															"src": "5738:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5751:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5751:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5762:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "5762:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5772:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5772:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5758:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5758:3:8"
																		},
																		"nativeSrc": "5758:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5758:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5748:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5748:2:8"
																},
																"nativeSrc": "5748:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5748:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5738:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5738:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5391:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5428:5:8",
														"nodeType": "YulTypedName",
														"src": "5428:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5435:10:8",
														"nodeType": "YulTypedName",
														"src": "5435:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5447:8:8",
														"nodeType": "YulTypedName",
														"src": "5447:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5460:6:8",
														"nodeType": "YulTypedName",
														"src": "5460:6:8",
														"type": ""
													}
												],
												"src": "5391:393:8"
											},
											{
												"body": {
													"nativeSrc": "5822:28:8",
													"nodeType": "YulBlock",
													"src": "5822:28:8",
													"statements": [
														{
															"nativeSrc": "5832:12:8",
															"nodeType": "YulAssignment",
															"src": "5832:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5839:5:8",
																"nodeType": "YulIdentifier",
																"src": "5839:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5832:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5832:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5790:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5808:5:8",
														"nodeType": "YulTypedName",
														"src": "5808:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5818:3:8",
														"nodeType": "YulTypedName",
														"src": "5818:3:8",
														"type": ""
													}
												],
												"src": "5790:60:8"
											},
											{
												"body": {
													"nativeSrc": "5916:82:8",
													"nodeType": "YulBlock",
													"src": "5916:82:8",
													"statements": [
														{
															"nativeSrc": "5926:66:8",
															"nodeType": "YulAssignment",
															"src": "5926:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5984:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5984:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5966:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "5966:17:8"
																				},
																				"nativeSrc": "5966:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5966:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5957:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "5957:8:8"
																		},
																		"nativeSrc": "5957:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5957:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5939:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5939:17:8"
																},
																"nativeSrc": "5939:53:8",
																"nodeType": "YulFunctionCall",
																"src": "5939:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5926:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5926:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5856:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5896:5:8",
														"nodeType": "YulTypedName",
														"src": "5896:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5906:9:8",
														"nodeType": "YulTypedName",
														"src": "5906:9:8",
														"type": ""
													}
												],
												"src": "5856:142:8"
											},
											{
												"body": {
													"nativeSrc": "6051:28:8",
													"nodeType": "YulBlock",
													"src": "6051:28:8",
													"statements": [
														{
															"nativeSrc": "6061:12:8",
															"nodeType": "YulAssignment",
															"src": "6061:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "6068:5:8",
																"nodeType": "YulIdentifier",
																"src": "6068:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6061:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6061:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6004:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6037:5:8",
														"nodeType": "YulTypedName",
														"src": "6037:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6047:3:8",
														"nodeType": "YulTypedName",
														"src": "6047:3:8",
														"type": ""
													}
												],
												"src": "6004:75:8"
											},
											{
												"body": {
													"nativeSrc": "6161:193:8",
													"nodeType": "YulBlock",
													"src": "6161:193:8",
													"statements": [
														{
															"nativeSrc": "6171:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6171:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6226:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "6226:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6195:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6195:30:8"
																},
																"nativeSrc": "6195:39:8",
																"nodeType": "YulFunctionCall",
																"src": "6195:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6175:16:8",
																	"nodeType": "YulTypedName",
																	"src": "6175:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6250:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6250:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6290:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "6290:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6284:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6284:5:8"
																				},
																				"nativeSrc": "6284:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6284:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6297:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6297:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6329:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "6329:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6305:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "6305:23:8"
																				},
																				"nativeSrc": "6305:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6305:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6256:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "6256:27:8"
																		},
																		"nativeSrc": "6256:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6256:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6243:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6243:6:8"
																},
																"nativeSrc": "6243:105:8",
																"nodeType": "YulFunctionCall",
																"src": "6243:105:8"
															},
															"nativeSrc": "6243:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "6243:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6085:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6138:4:8",
														"nodeType": "YulTypedName",
														"src": "6138:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6144:6:8",
														"nodeType": "YulTypedName",
														"src": "6144:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6152:7:8",
														"nodeType": "YulTypedName",
														"src": "6152:7:8",
														"type": ""
													}
												],
												"src": "6085:269:8"
											},
											{
												"body": {
													"nativeSrc": "6409:24:8",
													"nodeType": "YulBlock",
													"src": "6409:24:8",
													"statements": [
														{
															"nativeSrc": "6419:8:8",
															"nodeType": "YulAssignment",
															"src": "6419:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6426:1:8",
																"nodeType": "YulLiteral",
																"src": "6426:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6419:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6360:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6405:3:8",
														"nodeType": "YulTypedName",
														"src": "6405:3:8",
														"type": ""
													}
												],
												"src": "6360:73:8"
											},
											{
												"body": {
													"nativeSrc": "6492:136:8",
													"nodeType": "YulBlock",
													"src": "6492:136:8",
													"statements": [
														{
															"nativeSrc": "6502:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6502:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6516:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6516:30:8"
																},
																"nativeSrc": "6516:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6516:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6506:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6506:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6601:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6601:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6607:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6607:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6615:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6615:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6557:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6557:43:8"
																},
																"nativeSrc": "6557:65:8",
																"nodeType": "YulFunctionCall",
																"src": "6557:65:8"
															},
															"nativeSrc": "6557:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "6557:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6439:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6478:4:8",
														"nodeType": "YulTypedName",
														"src": "6478:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6484:6:8",
														"nodeType": "YulTypedName",
														"src": "6484:6:8",
														"type": ""
													}
												],
												"src": "6439:189:8"
											},
											{
												"body": {
													"nativeSrc": "6684:136:8",
													"nodeType": "YulBlock",
													"src": "6684:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6751:63:8",
																"nodeType": "YulBlock",
																"src": "6751:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6795:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6795:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6802:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6802:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6765:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "6765:29:8"
																			},
																			"nativeSrc": "6765:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6765:39:8"
																		},
																		"nativeSrc": "6765:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6765:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6704:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6704:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6711:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6711:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6701:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6701:2:8"
																},
																"nativeSrc": "6701:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6701:14:8"
															},
															"nativeSrc": "6694:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6716:26:8",
																"nodeType": "YulBlock",
																"src": "6716:26:8",
																"statements": [
																	{
																		"nativeSrc": "6718:22:8",
																		"nodeType": "YulAssignment",
																		"src": "6718:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6731:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6731:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6738:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6738:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6727:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6727:3:8"
																			},
																			"nativeSrc": "6727:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6727:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6718:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6718:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6698:2:8",
																"nodeType": "YulBlock",
																"src": "6698:2:8",
																"statements": []
															},
															"src": "6694:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6634:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6672:5:8",
														"nodeType": "YulTypedName",
														"src": "6672:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6679:3:8",
														"nodeType": "YulTypedName",
														"src": "6679:3:8",
														"type": ""
													}
												],
												"src": "6634:186:8"
											},
											{
												"body": {
													"nativeSrc": "6905:464:8",
													"nodeType": "YulBlock",
													"src": "6905:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6931:431:8",
																"nodeType": "YulBlock",
																"src": "6931:431:8",
																"statements": [
																	{
																		"nativeSrc": "6945:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6945:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6993:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6993:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6961:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "6961:31:8"
																			},
																			"nativeSrc": "6961:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6961:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6949:8:8",
																				"nodeType": "YulTypedName",
																				"src": "6949:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7012:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7012:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7035:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7035:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7063:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "7063:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7045:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "7045:17:8"
																					},
																					"nativeSrc": "7045:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7045:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7031:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7031:3:8"
																			},
																			"nativeSrc": "7031:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7031:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7016:11:8",
																				"nodeType": "YulTypedName",
																				"src": "7016:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7232:27:8",
																			"nodeType": "YulBlock",
																			"src": "7232:27:8",
																			"statements": [
																				{
																					"nativeSrc": "7234:23:8",
																					"nodeType": "YulAssignment",
																					"src": "7234:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7249:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "7249:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7234:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "7234:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7216:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "7216:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7228:2:8",
																					"nodeType": "YulLiteral",
																					"src": "7228:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7213:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7213:2:8"
																			},
																			"nativeSrc": "7213:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7213:18:8"
																		},
																		"nativeSrc": "7210:49:8",
																		"nodeType": "YulIf",
																		"src": "7210:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7301:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "7301:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7318:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "7318:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7346:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7346:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7328:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "7328:17:8"
																							},
																							"nativeSrc": "7328:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7328:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7314:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7314:3:8"
																					},
																					"nativeSrc": "7314:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7314:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7272:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "7272:28:8"
																			},
																			"nativeSrc": "7272:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7272:80:8"
																		},
																		"nativeSrc": "7272:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7272:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6922:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6922:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6927:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6927:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6919:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6919:2:8"
																},
																"nativeSrc": "6919:11:8",
																"nodeType": "YulFunctionCall",
																"src": "6919:11:8"
															},
															"nativeSrc": "6916:446:8",
															"nodeType": "YulIf",
															"src": "6916:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6826:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6881:5:8",
														"nodeType": "YulTypedName",
														"src": "6881:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6888:3:8",
														"nodeType": "YulTypedName",
														"src": "6888:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6893:10:8",
														"nodeType": "YulTypedName",
														"src": "6893:10:8",
														"type": ""
													}
												],
												"src": "6826:543:8"
											},
											{
												"body": {
													"nativeSrc": "7438:54:8",
													"nodeType": "YulBlock",
													"src": "7438:54:8",
													"statements": [
														{
															"nativeSrc": "7448:37:8",
															"nodeType": "YulAssignment",
															"src": "7448:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7473:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7473:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7479:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7479:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7469:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7469:3:8"
																},
																"nativeSrc": "7469:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7469:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7448:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7448:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7375:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7413:4:8",
														"nodeType": "YulTypedName",
														"src": "7413:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7419:5:8",
														"nodeType": "YulTypedName",
														"src": "7419:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7429:8:8",
														"nodeType": "YulTypedName",
														"src": "7429:8:8",
														"type": ""
													}
												],
												"src": "7375:117:8"
											},
											{
												"body": {
													"nativeSrc": "7549:118:8",
													"nodeType": "YulBlock",
													"src": "7549:118:8",
													"statements": [
														{
															"nativeSrc": "7559:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7559:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7608:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7608:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7611:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7611:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7604:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7604:3:8"
																				},
																				"nativeSrc": "7604:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7604:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7623:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7623:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7619:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7619:3:8"
																				},
																				"nativeSrc": "7619:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7619:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7575:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "7575:28:8"
																		},
																		"nativeSrc": "7575:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7575:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7571:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7571:3:8"
																},
																"nativeSrc": "7571:56:8",
																"nodeType": "YulFunctionCall",
																"src": "7571:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7563:4:8",
																	"nodeType": "YulTypedName",
																	"src": "7563:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7636:25:8",
															"nodeType": "YulAssignment",
															"src": "7636:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7650:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7650:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7656:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7656:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7646:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7646:3:8"
																},
																"nativeSrc": "7646:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7646:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7636:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7636:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7498:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7526:4:8",
														"nodeType": "YulTypedName",
														"src": "7526:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7532:5:8",
														"nodeType": "YulTypedName",
														"src": "7532:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7542:6:8",
														"nodeType": "YulTypedName",
														"src": "7542:6:8",
														"type": ""
													}
												],
												"src": "7498:169:8"
											},
											{
												"body": {
													"nativeSrc": "7753:214:8",
													"nodeType": "YulBlock",
													"src": "7753:214:8",
													"statements": [
														{
															"nativeSrc": "7886:37:8",
															"nodeType": "YulAssignment",
															"src": "7886:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7913:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7913:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7919:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7919:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7894:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "7894:18:8"
																},
																"nativeSrc": "7894:29:8",
																"nodeType": "YulFunctionCall",
																"src": "7894:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7886:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7886:4:8"
																}
															]
														},
														{
															"nativeSrc": "7932:29:8",
															"nodeType": "YulAssignment",
															"src": "7932:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7943:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7943:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7953:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7953:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7956:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7956:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7949:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7949:3:8"
																		},
																		"nativeSrc": "7949:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7949:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7940:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7940:2:8"
																},
																"nativeSrc": "7940:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7940:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7932:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7932:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7672:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7734:4:8",
														"nodeType": "YulTypedName",
														"src": "7734:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7740:3:8",
														"nodeType": "YulTypedName",
														"src": "7740:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7748:4:8",
														"nodeType": "YulTypedName",
														"src": "7748:4:8",
														"type": ""
													}
												],
												"src": "7672:295:8"
											},
											{
												"body": {
													"nativeSrc": "8064:1303:8",
													"nodeType": "YulBlock",
													"src": "8064:1303:8",
													"statements": [
														{
															"nativeSrc": "8075:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8075:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8122:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8122:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8089:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "8089:32:8"
																},
																"nativeSrc": "8089:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8089:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8079:6:8",
																	"nodeType": "YulTypedName",
																	"src": "8079:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8211:22:8",
																"nodeType": "YulBlock",
																"src": "8211:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8213:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8213:16:8"
																			},
																			"nativeSrc": "8213:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8213:18:8"
																		},
																		"nativeSrc": "8213:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8213:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8183:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8183:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8191:18:8",
																		"nodeType": "YulLiteral",
																		"src": "8191:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8180:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8180:2:8"
																},
																"nativeSrc": "8180:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8180:30:8"
															},
															"nativeSrc": "8177:56:8",
															"nodeType": "YulIf",
															"src": "8177:56:8"
														},
														{
															"nativeSrc": "8243:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8243:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8289:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8289:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8283:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "8283:5:8"
																		},
																		"nativeSrc": "8283:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8283:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8257:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "8257:25:8"
																},
																"nativeSrc": "8257:38:8",
																"nodeType": "YulFunctionCall",
																"src": "8257:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8247:6:8",
																	"nodeType": "YulTypedName",
																	"src": "8247:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8388:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8388:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8394:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8394:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8402:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8402:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8342:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "8342:45:8"
																},
																"nativeSrc": "8342:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8342:67:8"
															},
															"nativeSrc": "8342:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "8342:67:8"
														},
														{
															"nativeSrc": "8419:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8419:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8436:1:8",
																"nodeType": "YulLiteral",
																"src": "8436:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8423:9:8",
																	"nodeType": "YulTypedName",
																	"src": "8423:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8447:17:8",
															"nodeType": "YulAssignment",
															"src": "8447:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8460:4:8",
																"nodeType": "YulLiteral",
																"src": "8460:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8447:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8447:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8511:611:8",
																		"nodeType": "YulBlock",
																		"src": "8511:611:8",
																		"statements": [
																			{
																				"nativeSrc": "8525:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8525:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8544:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8544:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8556:4:8",
																									"nodeType": "YulLiteral",
																									"src": "8556:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8552:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8552:3:8"
																							},
																							"nativeSrc": "8552:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8552:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8540:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8540:3:8"
																					},
																					"nativeSrc": "8540:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8540:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8529:7:8",
																						"nodeType": "YulTypedName",
																						"src": "8529:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8576:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8576:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8622:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8622:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8590:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "8590:31:8"
																					},
																					"nativeSrc": "8590:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8590:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8580:6:8",
																						"nodeType": "YulTypedName",
																						"src": "8580:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8640:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8640:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8649:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8649:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8644:1:8",
																						"nodeType": "YulTypedName",
																						"src": "8644:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8708:163:8",
																					"nodeType": "YulBlock",
																					"src": "8708:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8733:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8733:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8751:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "8751:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8756:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "8756:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8747:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "8747:3:8"
																												},
																												"nativeSrc": "8747:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "8747:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8741:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "8741:5:8"
																										},
																										"nativeSrc": "8741:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8741:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8726:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8726:6:8"
																								},
																								"nativeSrc": "8726:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8726:42:8"
																							},
																							"nativeSrc": "8726:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8726:42:8"
																						},
																						{
																							"nativeSrc": "8785:24:8",
																							"nodeType": "YulAssignment",
																							"src": "8785:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8799:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8799:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8807:1:8",
																										"nodeType": "YulLiteral",
																										"src": "8807:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8795:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8795:3:8"
																								},
																								"nativeSrc": "8795:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8795:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8785:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8785:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8826:31:8",
																							"nodeType": "YulAssignment",
																							"src": "8826:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8843:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "8843:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8854:2:8",
																										"nodeType": "YulLiteral",
																										"src": "8854:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8839:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8839:3:8"
																								},
																								"nativeSrc": "8839:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8839:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8826:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "8826:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8674:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "8674:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8677:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8677:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8671:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8671:2:8"
																					},
																					"nativeSrc": "8671:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8671:14:8"
																				},
																				"nativeSrc": "8663:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8686:21:8",
																					"nodeType": "YulBlock",
																					"src": "8686:21:8",
																					"statements": [
																						{
																							"nativeSrc": "8688:17:8",
																							"nodeType": "YulAssignment",
																							"src": "8688:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8697:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "8697:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8700:4:8",
																										"nodeType": "YulLiteral",
																										"src": "8700:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8693:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8693:3:8"
																								},
																								"nativeSrc": "8693:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8693:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8688:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "8688:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8667:3:8",
																					"nodeType": "YulBlock",
																					"src": "8667:3:8",
																					"statements": []
																				},
																				"src": "8663:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "8907:156:8",
																					"nodeType": "YulBlock",
																					"src": "8907:156:8",
																					"statements": [
																						{
																							"nativeSrc": "8925:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8925:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8952:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8952:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8957:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8957:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8948:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8948:3:8"
																										},
																										"nativeSrc": "8948:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8948:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8942:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8942:5:8"
																								},
																								"nativeSrc": "8942:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8942:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8929:9:8",
																									"nodeType": "YulTypedName",
																									"src": "8929:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8992:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8992:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9019:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "9019:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9034:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "9034:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9042:4:8",
																														"nodeType": "YulLiteral",
																														"src": "9042:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9030:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "9030:3:8"
																												},
																												"nativeSrc": "9030:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "9030:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9000:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "9000:18:8"
																										},
																										"nativeSrc": "9000:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "9000:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8985:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8985:6:8"
																								},
																								"nativeSrc": "8985:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8985:64:8"
																							},
																							"nativeSrc": "8985:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8985:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8890:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8890:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8899:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8899:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8887:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8887:2:8"
																					},
																					"nativeSrc": "8887:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8887:19:8"
																				},
																				"nativeSrc": "8884:179:8",
																				"nodeType": "YulIf",
																				"src": "8884:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9083:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9083:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9097:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "9097:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9105:1:8",
																											"nodeType": "YulLiteral",
																											"src": "9105:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9093:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "9093:3:8"
																									},
																									"nativeSrc": "9093:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "9093:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9109:1:8",
																									"nodeType": "YulLiteral",
																									"src": "9109:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9089:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "9089:3:8"
																							},
																							"nativeSrc": "9089:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9089:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9076:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9076:6:8"
																					},
																					"nativeSrc": "9076:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9076:36:8"
																				},
																				"nativeSrc": "9076:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "9076:36:8"
																			}
																		]
																	},
																	"nativeSrc": "8504:618:8",
																	"nodeType": "YulCase",
																	"src": "8504:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8509:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8509:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9139:222:8",
																		"nodeType": "YulBlock",
																		"src": "9139:222:8",
																		"statements": [
																			{
																				"nativeSrc": "9153:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9153:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9166:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9166:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9157:5:8",
																						"nodeType": "YulTypedName",
																						"src": "9157:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9190:67:8",
																					"nodeType": "YulBlock",
																					"src": "9190:67:8",
																					"statements": [
																						{
																							"nativeSrc": "9208:35:8",
																							"nodeType": "YulAssignment",
																							"src": "9208:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9227:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "9227:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9232:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "9232:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9223:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "9223:3:8"
																										},
																										"nativeSrc": "9223:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "9223:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9217:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9217:5:8"
																								},
																								"nativeSrc": "9217:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9217:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9208:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9208:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9183:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9183:6:8"
																				},
																				"nativeSrc": "9180:77:8",
																				"nodeType": "YulIf",
																				"src": "9180:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9277:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "9277:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9336:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9336:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9343:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "9343:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9283:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "9283:52:8"
																							},
																							"nativeSrc": "9283:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9283:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9270:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9270:6:8"
																					},
																					"nativeSrc": "9270:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9270:81:8"
																				},
																				"nativeSrc": "9270:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "9270:81:8"
																			}
																		]
																	},
																	"nativeSrc": "9131:230:8",
																	"nodeType": "YulCase",
																	"src": "9131:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8484:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8484:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8492:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8492:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8481:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8481:2:8"
																},
																"nativeSrc": "8481:14:8",
																"nodeType": "YulFunctionCall",
																"src": "8481:14:8"
															},
															"nativeSrc": "8474:887:8",
															"nodeType": "YulSwitch",
															"src": "8474:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7972:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8053:4:8",
														"nodeType": "YulTypedName",
														"src": "8053:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8059:3:8",
														"nodeType": "YulTypedName",
														"src": "8059:3:8",
														"type": ""
													}
												],
												"src": "7972:1395:8"
											},
											{
												"body": {
													"nativeSrc": "9426:32:8",
													"nodeType": "YulBlock",
													"src": "9426:32:8",
													"statements": [
														{
															"nativeSrc": "9436:16:8",
															"nodeType": "YulAssignment",
															"src": "9436:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "9447:5:8",
																"nodeType": "YulIdentifier",
																"src": "9447:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9436:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9436:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "9373:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9408:5:8",
														"nodeType": "YulTypedName",
														"src": "9408:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9418:7:8",
														"nodeType": "YulTypedName",
														"src": "9418:7:8",
														"type": ""
													}
												],
												"src": "9373:85:8"
											},
											{
												"body": {
													"nativeSrc": "9532:90:8",
													"nodeType": "YulBlock",
													"src": "9532:90:8",
													"statements": [
														{
															"nativeSrc": "9542:74:8",
															"nodeType": "YulAssignment",
															"src": "9542:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9608:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9608:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "9582:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "9582:25:8"
																				},
																				"nativeSrc": "9582:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9582:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9573:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "9573:8:8"
																		},
																		"nativeSrc": "9573:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9573:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9555:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9555:17:8"
																},
																"nativeSrc": "9555:61:8",
																"nodeType": "YulFunctionCall",
																"src": "9555:61:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9542:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "9542:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "9464:158:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9512:5:8",
														"nodeType": "YulTypedName",
														"src": "9512:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9522:9:8",
														"nodeType": "YulTypedName",
														"src": "9522:9:8",
														"type": ""
													}
												],
												"src": "9464:158:8"
											},
											{
												"body": {
													"nativeSrc": "9701:74:8",
													"nodeType": "YulBlock",
													"src": "9701:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9718:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9718:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9762:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9762:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "9723:38:8",
																			"nodeType": "YulIdentifier",
																			"src": "9723:38:8"
																		},
																		"nativeSrc": "9723:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9723:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9711:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9711:6:8"
																},
																"nativeSrc": "9711:58:8",
																"nodeType": "YulFunctionCall",
																"src": "9711:58:8"
															},
															"nativeSrc": "9711:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "9711:58:8"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "9628:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9689:5:8",
														"nodeType": "YulTypedName",
														"src": "9689:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9696:3:8",
														"nodeType": "YulTypedName",
														"src": "9696:3:8",
														"type": ""
													}
												],
												"src": "9628:147:8"
											},
											{
												"body": {
													"nativeSrc": "9887:132:8",
													"nodeType": "YulBlock",
													"src": "9887:132:8",
													"statements": [
														{
															"nativeSrc": "9897:26:8",
															"nodeType": "YulAssignment",
															"src": "9897:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9909:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9909:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9920:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9920:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9905:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9905:3:8"
																},
																"nativeSrc": "9905:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9905:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9897:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9897:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9985:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9985:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9998:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9998:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10009:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10009:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9994:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9994:3:8"
																		},
																		"nativeSrc": "9994:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9994:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "9933:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "9933:51:8"
																},
																"nativeSrc": "9933:79:8",
																"nodeType": "YulFunctionCall",
																"src": "9933:79:8"
															},
															"nativeSrc": "9933:79:8",
															"nodeType": "YulExpressionStatement",
															"src": "9933:79:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9781:238:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9859:9:8",
														"nodeType": "YulTypedName",
														"src": "9859:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9871:6:8",
														"nodeType": "YulTypedName",
														"src": "9871:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9882:4:8",
														"nodeType": "YulTypedName",
														"src": "9882:4:8",
														"type": ""
													}
												],
												"src": "9781:238:8"
											},
											{
												"body": {
													"nativeSrc": "10070:81:8",
													"nodeType": "YulBlock",
													"src": "10070:81:8",
													"statements": [
														{
															"nativeSrc": "10080:65:8",
															"nodeType": "YulAssignment",
															"src": "10080:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10095:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10095:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10102:42:8",
																		"nodeType": "YulLiteral",
																		"src": "10102:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10091:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10091:3:8"
																},
																"nativeSrc": "10091:54:8",
																"nodeType": "YulFunctionCall",
																"src": "10091:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10080:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10080:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "10025:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10052:5:8",
														"nodeType": "YulTypedName",
														"src": "10052:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10062:7:8",
														"nodeType": "YulTypedName",
														"src": "10062:7:8",
														"type": ""
													}
												],
												"src": "10025:126:8"
											},
											{
												"body": {
													"nativeSrc": "10202:51:8",
													"nodeType": "YulBlock",
													"src": "10202:51:8",
													"statements": [
														{
															"nativeSrc": "10212:35:8",
															"nodeType": "YulAssignment",
															"src": "10212:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10241:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10241:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "10223:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10223:17:8"
																},
																"nativeSrc": "10223:24:8",
																"nodeType": "YulFunctionCall",
																"src": "10223:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10212:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10212:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "10157:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10184:5:8",
														"nodeType": "YulTypedName",
														"src": "10184:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10194:7:8",
														"nodeType": "YulTypedName",
														"src": "10194:7:8",
														"type": ""
													}
												],
												"src": "10157:96:8"
											},
											{
												"body": {
													"nativeSrc": "10324:53:8",
													"nodeType": "YulBlock",
													"src": "10324:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10341:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10341:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10364:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10364:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10346:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10346:17:8"
																		},
																		"nativeSrc": "10346:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10346:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10334:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10334:6:8"
																},
																"nativeSrc": "10334:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10334:37:8"
															},
															"nativeSrc": "10334:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10334:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10259:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10312:5:8",
														"nodeType": "YulTypedName",
														"src": "10312:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10319:3:8",
														"nodeType": "YulTypedName",
														"src": "10319:3:8",
														"type": ""
													}
												],
												"src": "10259:118:8"
											},
											{
												"body": {
													"nativeSrc": "10481:124:8",
													"nodeType": "YulBlock",
													"src": "10481:124:8",
													"statements": [
														{
															"nativeSrc": "10491:26:8",
															"nodeType": "YulAssignment",
															"src": "10491:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10503:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10503:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10514:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10514:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10499:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10499:3:8"
																},
																"nativeSrc": "10499:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10499:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10491:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10491:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10571:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10571:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10584:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10584:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10595:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10595:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10580:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10580:3:8"
																		},
																		"nativeSrc": "10580:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10580:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10527:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10527:43:8"
																},
																"nativeSrc": "10527:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10527:71:8"
															},
															"nativeSrc": "10527:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10527:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10383:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10453:9:8",
														"nodeType": "YulTypedName",
														"src": "10453:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10465:6:8",
														"nodeType": "YulTypedName",
														"src": "10465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10476:4:8",
														"nodeType": "YulTypedName",
														"src": "10476:4:8",
														"type": ""
													}
												],
												"src": "10383:222:8"
											},
											{
												"body": {
													"nativeSrc": "10676:53:8",
													"nodeType": "YulBlock",
													"src": "10676:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10693:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10693:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10716:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10716:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10698:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10698:17:8"
																		},
																		"nativeSrc": "10698:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10698:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10686:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10686:6:8"
																},
																"nativeSrc": "10686:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10686:37:8"
															},
															"nativeSrc": "10686:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10686:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10611:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10664:5:8",
														"nodeType": "YulTypedName",
														"src": "10664:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10671:3:8",
														"nodeType": "YulTypedName",
														"src": "10671:3:8",
														"type": ""
													}
												],
												"src": "10611:118:8"
											},
											{
												"body": {
													"nativeSrc": "10861:206:8",
													"nodeType": "YulBlock",
													"src": "10861:206:8",
													"statements": [
														{
															"nativeSrc": "10871:26:8",
															"nodeType": "YulAssignment",
															"src": "10871:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10883:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10883:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10894:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10894:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10879:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10879:3:8"
																},
																"nativeSrc": "10879:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10879:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10871:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10871:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10951:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10951:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10964:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10964:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10975:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10975:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10960:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10960:3:8"
																		},
																		"nativeSrc": "10960:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10960:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10907:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10907:43:8"
																},
																"nativeSrc": "10907:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10907:71:8"
															},
															"nativeSrc": "10907:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10907:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11032:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11032:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11045:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11045:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11056:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11056:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11041:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11041:3:8"
																		},
																		"nativeSrc": "11041:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11041:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10988:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10988:43:8"
																},
																"nativeSrc": "10988:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10988:72:8"
															},
															"nativeSrc": "10988:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10988:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10735:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10825:9:8",
														"nodeType": "YulTypedName",
														"src": "10825:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10837:6:8",
														"nodeType": "YulTypedName",
														"src": "10837:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10845:6:8",
														"nodeType": "YulTypedName",
														"src": "10845:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10856:4:8",
														"nodeType": "YulTypedName",
														"src": "10856:4:8",
														"type": ""
													}
												],
												"src": "10735:332:8"
											},
											{
												"body": {
													"nativeSrc": "11117:147:8",
													"nodeType": "YulBlock",
													"src": "11117:147:8",
													"statements": [
														{
															"nativeSrc": "11127:25:8",
															"nodeType": "YulAssignment",
															"src": "11127:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11150:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11150:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11132:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11132:17:8"
																},
																"nativeSrc": "11132:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11132:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11127:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11127:1:8"
																}
															]
														},
														{
															"nativeSrc": "11161:25:8",
															"nodeType": "YulAssignment",
															"src": "11161:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11184:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11184:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11166:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11166:17:8"
																},
																"nativeSrc": "11166:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11166:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11161:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11161:1:8"
																}
															]
														},
														{
															"nativeSrc": "11195:16:8",
															"nodeType": "YulAssignment",
															"src": "11195:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11206:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11206:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11209:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11209:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11202:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11202:3:8"
																},
																"nativeSrc": "11202:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11202:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11195:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11195:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11235:22:8",
																"nodeType": "YulBlock",
																"src": "11235:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11237:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11237:16:8"
																			},
																			"nativeSrc": "11237:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11237:18:8"
																		},
																		"nativeSrc": "11237:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11237:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11227:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11227:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11230:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11230:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11224:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11224:2:8"
																},
																"nativeSrc": "11224:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11224:10:8"
															},
															"nativeSrc": "11221:36:8",
															"nodeType": "YulIf",
															"src": "11221:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11073:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11104:1:8",
														"nodeType": "YulTypedName",
														"src": "11104:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11107:1:8",
														"nodeType": "YulTypedName",
														"src": "11107:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11113:3:8",
														"nodeType": "YulTypedName",
														"src": "11113:3:8",
														"type": ""
													}
												],
												"src": "11073:191:8"
											},
											{
												"body": {
													"nativeSrc": "11424:288:8",
													"nodeType": "YulBlock",
													"src": "11424:288:8",
													"statements": [
														{
															"nativeSrc": "11434:26:8",
															"nodeType": "YulAssignment",
															"src": "11434:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11446:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11446:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11457:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11457:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11442:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11442:3:8"
																},
																"nativeSrc": "11442:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11442:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11434:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11434:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11514:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11514:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11527:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11527:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11538:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11538:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11523:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11523:3:8"
																		},
																		"nativeSrc": "11523:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11523:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11470:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11470:43:8"
																},
																"nativeSrc": "11470:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11470:71:8"
															},
															"nativeSrc": "11470:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11470:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11595:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11595:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11608:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11608:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11619:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11619:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11604:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11604:3:8"
																		},
																		"nativeSrc": "11604:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11604:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11551:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11551:43:8"
																},
																"nativeSrc": "11551:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11551:72:8"
															},
															"nativeSrc": "11551:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11551:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11677:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11677:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11690:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11690:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11701:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11686:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11686:3:8"
																		},
																		"nativeSrc": "11686:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11686:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11633:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11633:43:8"
																},
																"nativeSrc": "11633:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11633:72:8"
															},
															"nativeSrc": "11633:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11633:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11270:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11380:9:8",
														"nodeType": "YulTypedName",
														"src": "11380:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11392:6:8",
														"nodeType": "YulTypedName",
														"src": "11392:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11400:6:8",
														"nodeType": "YulTypedName",
														"src": "11400:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11408:6:8",
														"nodeType": "YulTypedName",
														"src": "11408:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11419:4:8",
														"nodeType": "YulTypedName",
														"src": "11419:4:8",
														"type": ""
													}
												],
												"src": "11270:442:8"
											},
											{
												"body": {
													"nativeSrc": "11816:124:8",
													"nodeType": "YulBlock",
													"src": "11816:124:8",
													"statements": [
														{
															"nativeSrc": "11826:26:8",
															"nodeType": "YulAssignment",
															"src": "11826:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11838:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11838:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11849:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11849:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11834:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11834:3:8"
																},
																"nativeSrc": "11834:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11834:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11826:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11826:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11906:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11906:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11919:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11919:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11930:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11930:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11915:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11915:3:8"
																		},
																		"nativeSrc": "11915:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11915:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11862:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11862:43:8"
																},
																"nativeSrc": "11862:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11862:71:8"
															},
															"nativeSrc": "11862:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11862:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11718:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11788:9:8",
														"nodeType": "YulTypedName",
														"src": "11788:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11800:6:8",
														"nodeType": "YulTypedName",
														"src": "11800:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11811:4:8",
														"nodeType": "YulTypedName",
														"src": "11811:4:8",
														"type": ""
													}
												],
												"src": "11718:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051612097380380612097833981810160405281019061003191906105b6565b61003f6101fc60201b60201c565b600a61004b919061075c565b8261005691906107a6565b6040518060400160405280600c81526020017f48616265736861546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f485443000000000000000000000000000000000000000000000000000000000081525081600390816100d19190610a1b565b5080600490816100e19190610a1b565b5050505f8103610128575f6040517f392e1e2700000000000000000000000000000000000000000000000000000000815260040161011f9190610b23565b60405180910390fd5b8060808181525050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101ca60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101a46101fc60201b60201c565b600a6101b0919061075c565b63042c1d806101bf91906107a6565b61020460201b60201c565b6101d86101fc60201b60201c565b600a6101e4919061075c565b816101ef91906107a6565b6006819055505050610c4b565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610274575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161026b9190610b7b565b60405180910390fd5b6102855f838361028960201b60201c565b5050565b61029a83838361029f60201b60201c565b505050565b6102b083838361035460201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361034f575f6102f261056d60201b60201c565b90505f61030361057660201b60201c565b90508181111561034c5780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610343929190610ba3565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103a4578060025f8282546103989190610bca565b92505081905550610472565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561042d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161042493929190610bfd565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104b9578060025f8282540392505081905550610503565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105609190610c32565b60405180910390a3505050565b5f608051905090565b5f600254905090565b5f5ffd5b5f819050919050565b61059581610583565b811461059f575f5ffd5b50565b5f815190506105b08161058c565b92915050565b5f5f604083850312156105cc576105cb61057f565b5b5f6105d9858286016105a2565b92505060206105ea858286016105a2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b600185111561067657808604811115610652576106516105f4565b5b60018516156106615780820291505b808102905061066f85610621565b9450610636565b94509492505050565b5f8261068e5760019050610749565b8161069b575f9050610749565b81600181146106b157600281146106bb576106ea565b6001915050610749565b60ff8411156106cd576106cc6105f4565b5b8360020a9150848211156106e4576106e36105f4565b5b50610749565b5060208310610133831016604e8410600b841016171561071f5782820a90508381111561071a576107196105f4565b5b610749565b61072c848484600161062d565b92509050818404811115610743576107426105f4565b5b81810290505b9392505050565b5f60ff82169050919050565b5f61076682610583565b915061077183610750565b925061079e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461067f565b905092915050565b5f6107b082610583565b91506107bb83610583565b92508282026107c981610583565b915082820484148315176107e0576107df6105f4565b5b5092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061086257607f821691505b6020821081036108755761087461081e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108d77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261089c565b6108e1868361089c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61091c61091761091284610583565b6108f9565b610583565b9050919050565b5f819050919050565b61093583610902565b61094961094182610923565b8484546108a8565b825550505050565b5f5f905090565b610960610951565b61096b81848461092c565b505050565b5b8181101561098e576109835f82610958565b600181019050610971565b5050565b601f8211156109d3576109a48161087b565b6109ad8461088d565b810160208510156109bc578190505b6109d06109c88561088d565b830182610970565b50505b505050565b5f82821c905092915050565b5f6109f35f19846008026109d8565b1980831691505092915050565b5f610a0b83836109e4565b9150826002028217905092915050565b610a24826107e7565b67ffffffffffffffff811115610a3d57610a3c6107f1565b5b610a47825461084b565b610a52828285610992565b5f60209050601f831160018114610a83575f8415610a71578287015190505b610a7b8582610a00565b865550610ae2565b601f198416610a918661087b565b5f5b82811015610ab857848901518255600182019150602085019450602081019050610a93565b86831015610ad55784890151610ad1601f8916826109e4565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f610b0d610b08610b0384610aea565b6108f9565b610583565b9050919050565b610b1d81610af3565b82525050565b5f602082019050610b365f830184610b14565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b6582610b3c565b9050919050565b610b7581610b5b565b82525050565b5f602082019050610b8e5f830184610b6c565b92915050565b610b9d81610583565b82525050565b5f604082019050610bb65f830185610b94565b610bc36020830184610b94565b9392505050565b5f610bd482610583565b9150610bdf83610583565b9250828201905080821115610bf757610bf66105f4565b5b92915050565b5f606082019050610c105f830186610b6c565b610c1d6020830185610b94565b610c2a6040830184610b94565b949350505050565b5f602082019050610c455f830184610b94565b92915050565b608051611434610c635f395f6104be01526114345ff3fe608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c8063355274ea116100955780638da5cb5b116100645780638da5cb5b1461027157806395d89b411461028f578063a9059cbb146102ad578063dd62ed3e146102dd576100f3565b8063355274ea146101eb57806342966c681461020957806370a082311461022557806379cc679014610255576100f3565b806318160ddd116100d157806318160ddd146101635780631a18e7071461018157806323b872dd1461019d578063313ce567146101cd576100f3565b806306fdde03146100f7578063095ea7b3146101155780630ac168a114610145575b5f5ffd5b6100ff61030d565b60405161010c9190610dda565b60405180910390f35b61012f600480360381019061012a9190610e8b565b61039d565b60405161013c9190610ee3565b60405180910390f35b61014d6103bf565b60405161015a9190610f0b565b60405180910390f35b61016b6103c5565b6040516101789190610f0b565b60405180910390f35b61019b60048036038101906101969190610f24565b6103ce565b005b6101b760048036038101906101b29190610f4f565b610485565b6040516101c49190610ee3565b60405180910390f35b6101d56104b3565b6040516101e29190610fba565b60405180910390f35b6101f36104bb565b6040516102009190610f0b565b60405180910390f35b610223600480360381019061021e9190610f24565b6104e2565b005b61023f600480360381019061023a9190610fd3565b6104f6565b60405161024c9190610f0b565b60405180910390f35b61026f600480360381019061026a9190610e8b565b61053b565b005b61027961055b565b604051610286919061101e565b60405180910390f35b610297610580565b6040516102a49190610dda565b60405180910390f35b6102c760048036038101906102c29190610e8b565b610610565b6040516102d49190610ee3565b60405180910390f35b6102f760048036038101906102f29190611037565b610632565b6040516103049190610f0b565b60405180910390f35b60606003805461031c906110a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610348906110a2565b80156103935780601f1061036a57610100808354040283529160200191610393565b820191905f5260205f20905b81548152906001019060200180831161037657829003601f168201915b5050505050905090565b5f5f6103a76106b4565b90506103b48185856106bb565b600191505092915050565b60065481565b5f600254905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490611142565b60405180910390fd5b6104656104b3565b600a61047191906112bc565b8161047c9190611306565b60068190555050565b5f5f61048f6106b4565b905061049c8582856106cd565b6104a7858585610760565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6104f36104ed6106b4565b82610850565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61054d826105476106b4565b836106cd565b6105578282610850565b5050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461058f906110a2565b80601f01602080910402602001604051908101604052809291908181526020018280546105bb906110a2565b80156106065780601f106105dd57610100808354040283529160200191610606565b820191905f5260205f20905b8154815290600101906020018083116105e957829003601f168201915b5050505050905090565b5f5f61061a6106b4565b9050610627818585610760565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6106c883838360016108cf565b505050565b5f6106d88484610632565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561075a578181101561074b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161074293929190611356565b60405180910390fd5b61075984848484035f6108cf565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107d0575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107c7919061138b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610840575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610837919061138b565b60405180910390fd5b61084b838383610a9e565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c0575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108b7919061138b565b60405180910390fd5b6108cb825f83610a9e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361093f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610936919061138b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109af575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016109a6919061138b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610a98578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a8f9190610f0b565b60405180910390a35b50505050565b610aa9838383610aae565b505050565b610ab9838383610b51565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b4c575f610af56104bb565b90505f610b006103c5565b905081811115610b495780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610b409291906113a4565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ba1578060025f828254610b9591906113cb565b92505081905550610c6f565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610c2a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c2193929190611356565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb6578060025f8282540392505081905550610d00565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d5d9190610f0b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610dac82610d6a565b610db68185610d74565b9350610dc6818560208601610d84565b610dcf81610d92565b840191505092915050565b5f6020820190508181035f830152610df28184610da2565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e2782610dfe565b9050919050565b610e3781610e1d565b8114610e41575f5ffd5b50565b5f81359050610e5281610e2e565b92915050565b5f819050919050565b610e6a81610e58565b8114610e74575f5ffd5b50565b5f81359050610e8581610e61565b92915050565b5f5f60408385031215610ea157610ea0610dfa565b5b5f610eae85828601610e44565b9250506020610ebf85828601610e77565b9150509250929050565b5f8115159050919050565b610edd81610ec9565b82525050565b5f602082019050610ef65f830184610ed4565b92915050565b610f0581610e58565b82525050565b5f602082019050610f1e5f830184610efc565b92915050565b5f60208284031215610f3957610f38610dfa565b5b5f610f4684828501610e77565b91505092915050565b5f5f5f60608486031215610f6657610f65610dfa565b5b5f610f7386828701610e44565b9350506020610f8486828701610e44565b9250506040610f9586828701610e77565b9150509250925092565b5f60ff82169050919050565b610fb481610f9f565b82525050565b5f602082019050610fcd5f830184610fab565b92915050565b5f60208284031215610fe857610fe7610dfa565b5b5f610ff584828501610e44565b91505092915050565b5f61100882610dfe565b9050919050565b61101881610ffe565b82525050565b5f6020820190506110315f83018461100f565b92915050565b5f5f6040838503121561104d5761104c610dfa565b5b5f61105a85828601610e44565b925050602061106b85828601610e44565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806110b957607f821691505b6020821081036110cc576110cb611075565b5b50919050565b7f536f72727920796f75206d75737420626520616e206f776e657220746f2061635f8201527f636573732074686973206f6e6500000000000000000000000000000000000000602082015250565b5f61112c602d83610d74565b9150611137826110d2565b604082019050919050565b5f6020820190508181035f83015261115981611120565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156111e2578086048111156111be576111bd611160565b5b60018516156111cd5780820291505b80810290506111db8561118d565b94506111a2565b94509492505050565b5f826111fa57600190506112b5565b81611207575f90506112b5565b816001811461121d576002811461122757611256565b60019150506112b5565b60ff84111561123957611238611160565b5b8360020a9150848211156112505761124f611160565b5b506112b5565b5060208310610133831016604e8410600b841016171561128b5782820a90508381111561128657611285611160565b5b6112b5565b6112988484846001611199565b925090508184048111156112af576112ae611160565b5b81810290505b9392505050565b5f6112c682610e58565b91506112d183610f9f565b92506112fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111eb565b905092915050565b5f61131082610e58565b915061131b83610e58565b925082820261132981610e58565b915082820484148315176113405761133f611160565b5b5092915050565b61135081610e1d565b82525050565b5f6060820190506113695f830186611347565b6113766020830185610efc565b6113836040830184610efc565b949350505050565b5f60208201905061139e5f830184611347565b92915050565b5f6040820190506113b75f830185610efc565b6113c46020830184610efc565b9392505050565b5f6113d582610e58565b91506113e083610e58565b92508282019050808211156113f8576113f7611160565b5b9291505056fea2646970667358221220efedf29515cf1072c9b523c535f85b2b895593aee1f2836af5b2565712c188d364736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2097 CODESIZE SUB DUP1 PUSH2 0x2097 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x3F PUSH2 0x1FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x4B SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST DUP3 PUSH2 0x56 SWAP2 SWAP1 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48616265736861546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4854430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xA1B JUMP JUMPDEST POP POP POP PUSH0 DUP2 SUB PUSH2 0x128 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x392E1E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP CALLER PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1CA PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A4 PUSH2 0x1FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST PUSH4 0x42C1D80 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x204 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x1FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST DUP2 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xC4B JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x274 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x285 PUSH0 DUP4 DUP4 PUSH2 0x289 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x29A DUP4 DUP4 DUP4 PUSH2 0x29F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2B0 DUP4 DUP4 DUP4 PUSH2 0x354 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34F JUMPI PUSH0 PUSH2 0x2F2 PUSH2 0x56D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x303 PUSH2 0x576 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x34C JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x343 SWAP3 SWAP2 SWAP1 PUSH2 0xBA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3A4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x472 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x42D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4B9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x503 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x595 DUP2 PUSH2 0x583 JUMP JUMPDEST DUP2 EQ PUSH2 0x59F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B0 DUP2 PUSH2 0x58C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5CC JUMPI PUSH2 0x5CB PUSH2 0x57F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5D9 DUP6 DUP3 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x5EA DUP6 DUP3 DUP7 ADD PUSH2 0x5A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x676 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x652 JUMPI PUSH2 0x651 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x661 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x66F DUP6 PUSH2 0x621 JUMP JUMPDEST SWAP5 POP PUSH2 0x636 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x68E JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x749 JUMP JUMPDEST DUP2 PUSH2 0x69B JUMPI PUSH0 SWAP1 POP PUSH2 0x749 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x6B1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x6BB JUMPI PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x749 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x6CC PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x6E4 JUMPI PUSH2 0x6E3 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST POP PUSH2 0x749 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x71F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x71A JUMPI PUSH2 0x719 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH2 0x72C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x62D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x743 JUMPI PUSH2 0x742 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x766 DUP3 PUSH2 0x583 JUMP JUMPDEST SWAP2 POP PUSH2 0x771 DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x67F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7B0 DUP3 PUSH2 0x583 JUMP JUMPDEST SWAP2 POP PUSH2 0x7BB DUP4 PUSH2 0x583 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x7C9 DUP2 PUSH2 0x583 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x7E0 JUMPI PUSH2 0x7DF PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x862 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x81E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x8D7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x8E1 DUP7 DUP4 PUSH2 0x89C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x91C PUSH2 0x917 PUSH2 0x912 DUP5 PUSH2 0x583 JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x583 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x935 DUP4 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x949 PUSH2 0x941 DUP3 PUSH2 0x923 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8A8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x960 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x96B DUP2 DUP5 DUP5 PUSH2 0x92C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x98E JUMPI PUSH2 0x983 PUSH0 DUP3 PUSH2 0x958 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x971 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9D3 JUMPI PUSH2 0x9A4 DUP2 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x9AD DUP5 PUSH2 0x88D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9D0 PUSH2 0x9C8 DUP6 PUSH2 0x88D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x970 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9F3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9D8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA0B DUP4 DUP4 PUSH2 0x9E4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA24 DUP3 PUSH2 0x7E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA3D JUMPI PUSH2 0xA3C PUSH2 0x7F1 JUMP JUMPDEST JUMPDEST PUSH2 0xA47 DUP3 SLOAD PUSH2 0x84B JUMP JUMPDEST PUSH2 0xA52 DUP3 DUP3 DUP6 PUSH2 0x992 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA83 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA71 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA7B DUP6 DUP3 PUSH2 0xA00 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA91 DUP7 PUSH2 0x87B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA93 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAD5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAD1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9E4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB0D PUSH2 0xB08 PUSH2 0xB03 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH2 0x583 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1D DUP2 PUSH2 0xAF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB36 PUSH0 DUP4 ADD DUP5 PUSH2 0xB14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB65 DUP3 PUSH2 0xB3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB75 DUP2 PUSH2 0xB5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB8E PUSH0 DUP4 ADD DUP5 PUSH2 0xB6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB9D DUP2 PUSH2 0x583 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBB6 PUSH0 DUP4 ADD DUP6 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0xBC3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB94 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBD4 DUP3 PUSH2 0x583 JUMP JUMPDEST SWAP2 POP PUSH2 0xBDF DUP4 PUSH2 0x583 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBF7 JUMPI PUSH2 0xBF6 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC10 PUSH0 DUP4 ADD DUP7 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0xC1D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0xC2A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB94 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC45 PUSH0 DUP4 ADD DUP5 PUSH2 0xB94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1434 PUSH2 0xC63 PUSH0 CODECOPY PUSH0 PUSH2 0x4BE ADD MSTORE PUSH2 0x1434 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x355274EA GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x355274EA EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x255 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x1A18E707 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xAC168A1 EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x279 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0x10A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x348 SWAP1 PUSH2 0x10A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x376 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3A7 PUSH2 0x6B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B4 DUP2 DUP6 DUP6 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x454 SWAP1 PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x465 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0xA PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST DUP2 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x48F PUSH2 0x6B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x49C DUP6 DUP3 DUP6 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x4A7 DUP6 DUP6 DUP6 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0x4ED PUSH2 0x6B4 JUMP JUMPDEST DUP3 PUSH2 0x850 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54D DUP3 PUSH2 0x547 PUSH2 0x6B4 JUMP JUMPDEST DUP4 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x557 DUP3 DUP3 PUSH2 0x850 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x10A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BB SWAP1 PUSH2 0x10A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x606 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x606 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x61A PUSH2 0x6B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x627 DUP2 DUP6 DUP6 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D8 DUP5 DUP5 PUSH2 0x632 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x75A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x74B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x742 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x759 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x8CF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x840 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84B DUP4 DUP4 DUP4 PUSH2 0xA9E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CB DUP3 PUSH0 DUP4 PUSH2 0xA9E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA98 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAA9 DUP4 DUP4 DUP4 PUSH2 0xAAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAB9 DUP4 DUP4 DUP4 PUSH2 0xB51 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB4C JUMPI PUSH0 PUSH2 0xAF5 PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB00 PUSH2 0x3C5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB49 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP3 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC6F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC2A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD00 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAC DUP3 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0xDB6 DUP2 DUP6 PUSH2 0xD74 JUMP JUMPDEST SWAP4 POP PUSH2 0xDC6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD84 JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xD92 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF2 DUP2 DUP5 PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE27 DUP3 PUSH2 0xDFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xE1D JUMP JUMPDEST DUP2 EQ PUSH2 0xE41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE52 DUP2 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6A DUP2 PUSH2 0xE58 JUMP JUMPDEST DUP2 EQ PUSH2 0xE74 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE85 DUP2 PUSH2 0xE61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEAE DUP6 DUP3 DUP7 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEBF DUP6 DUP3 DUP7 ADD PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xEC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF05 DUP2 PUSH2 0xE58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1E PUSH0 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF39 JUMPI PUSH2 0xF38 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF46 DUP5 DUP3 DUP6 ADD PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH2 0xF65 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF73 DUP7 DUP3 DUP8 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF84 DUP7 DUP3 DUP8 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF95 DUP7 DUP3 DUP8 ADD PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB4 DUP2 PUSH2 0xF9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCD PUSH0 DUP4 ADD DUP5 PUSH2 0xFAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE8 JUMPI PUSH2 0xFE7 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF5 DUP5 DUP3 DUP6 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1008 DUP3 PUSH2 0xDFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1018 DUP2 PUSH2 0xFFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1031 PUSH0 DUP4 ADD DUP5 PUSH2 0x100F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x104D JUMPI PUSH2 0x104C PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x105A DUP6 DUP3 DUP7 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x106B DUP6 DUP3 DUP7 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10CC JUMPI PUSH2 0x10CB PUSH2 0x1075 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F72727920796F75206D75737420626520616E206F776E657220746F206163 PUSH0 DUP3 ADD MSTORE PUSH32 0x636573732074686973206F6E6500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x112C PUSH1 0x2D DUP4 PUSH2 0xD74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1137 DUP3 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1159 DUP2 PUSH2 0x1120 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x11E2 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x11BE JUMPI PUSH2 0x11BD PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x11CD JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x11DB DUP6 PUSH2 0x118D JUMP JUMPDEST SWAP5 POP PUSH2 0x11A2 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x11FA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x12B5 JUMP JUMPDEST DUP2 PUSH2 0x1207 JUMPI PUSH0 SWAP1 POP PUSH2 0x12B5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x121D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1227 JUMPI PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1250 JUMPI PUSH2 0x124F PUSH2 0x1160 JUMP JUMPDEST JUMPDEST POP PUSH2 0x12B5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x128B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1286 JUMPI PUSH2 0x1285 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x1298 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1199 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x12AF JUMPI PUSH2 0x12AE PUSH2 0x1160 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12C6 DUP3 PUSH2 0xE58 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D1 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP3 POP PUSH2 0x12FE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x11EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1310 DUP3 PUSH2 0xE58 JUMP JUMPDEST SWAP2 POP PUSH2 0x131B DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1329 DUP2 PUSH2 0xE58 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1340 JUMPI PUSH2 0x133F PUSH2 0x1160 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1350 DUP2 PUSH2 0xE1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1369 PUSH0 DUP4 ADD DUP7 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x1376 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x1383 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139E PUSH0 DUP4 ADD DUP5 PUSH2 0x1347 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13B7 PUSH0 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x13C4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D5 DUP3 PUSH2 0xE58 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E0 DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xED CALLCODE SWAP6 ISZERO 0xCF LT PUSH19 0xC9B523C535F85B2B895593AEE1F2836AF5B256 JUMPI SLT 0xC1 DUP9 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "276:1736:7:-:0;;;774:398;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;865:10;:8;;;:10;;:::i;:::-;859:2;:16;;;;:::i;:::-;852:3;:24;;;;:::i;:::-;1582:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;764:1:4;756:4;:9;752:65;;804:1;788:18;;;;;;;;;;;:::i;:::-;;;;;;;;752:65;833:4;826:11;;;;;;716:128;958:10:7::2;941:5;;:28;;;;;;;;;;;;;;;;;;980:43;986:5;;;;;;;;;;;1011:10;:8;;;:10;;:::i;:::-;1005:2;:16;;;;:::i;:::-;993:8;:29;;;;:::i;:::-;980:5;;;:43;;:::i;:::-;1124:10;:8;;;:10;;:::i;:::-;1118:2;:16;;;;:::i;:::-;1108:6;:27;;;;:::i;:::-;1094:11;:41;;;;774:398:::0;;276:1736;;2688:82:1;2737:5;2761:2;2754:9;;2688:82;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;1473:146:7:-;1581:30;1595:4;1601:2;1605:5;1581:13;;;:30;;:::i;:::-;1473:146;;;:::o;1036:371:4:-;1130:30;1144:4;1150:2;1154:5;1130:13;;;:30;;:::i;:::-;1191:1;1175:18;;:4;:18;;;1171:230;;1209:17;1229:5;:3;;;:5;;:::i;:::-;1209:25;;1248:14;1265:13;:11;;;:13;;:::i;:::-;1248:30;;1305:9;1296:6;:18;1292:99;;;1358:6;1366:9;1341:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1292:99;1195:206;;1171:230;1036:371;;;:::o;5912:1107:1:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;923:81:4:-;967:7;993:4;;986:11;;923:81;:::o;2803:97:1:-;2855:7;2881:12;;2874:19;;2803:97;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;1207:180::-;1255:77;1252:1;1245:88;1352:4;1349:1;1342:15;1376:4;1373:1;1366:15;1393:102;1435:8;1482:5;1479:1;1475:13;1454:34;;1393:102;;;:::o;1501:848::-;1562:5;1569:4;1593:6;1584:15;;1617:5;1608:14;;1631:712;1652:1;1642:8;1639:15;1631:712;;;1747:4;1742:3;1738:14;1732:4;1729:24;1726:50;;;1756:18;;:::i;:::-;1726:50;1806:1;1796:8;1792:16;1789:451;;;2221:4;2214:5;2210:16;2201:25;;1789:451;2271:4;2265;2261:15;2253:23;;2301:32;2324:8;2301:32;:::i;:::-;2289:44;;1631:712;;;1501:848;;;;;;;:::o;2355:1073::-;2409:5;2600:8;2590:40;;2621:1;2612:10;;2623:5;;2590:40;2649:4;2639:36;;2666:1;2657:10;;2668:5;;2639:36;2735:4;2783:1;2778:27;;;;2819:1;2814:191;;;;2728:277;;2778:27;2796:1;2787:10;;2798:5;;;2814:191;2859:3;2849:8;2846:17;2843:43;;;2866:18;;:::i;:::-;2843:43;2915:8;2912:1;2908:16;2899:25;;2950:3;2943:5;2940:14;2937:40;;;2957:18;;:::i;:::-;2937:40;2990:5;;;2728:277;;3114:2;3104:8;3101:16;3095:3;3089:4;3086:13;3082:36;3064:2;3054:8;3051:16;3046:2;3040:4;3037:12;3033:35;3017:111;3014:246;;;3170:8;3164:4;3160:19;3151:28;;3205:3;3198:5;3195:14;3192:40;;;3212:18;;:::i;:::-;3192:40;3245:5;;3014:246;3285:42;3323:3;3313:8;3307:4;3304:1;3285:42;:::i;:::-;3270:57;;;;3359:4;3354:3;3350:14;3343:5;3340:25;3337:51;;;3368:18;;:::i;:::-;3337:51;3417:4;3410:5;3406:16;3397:25;;2355:1073;;;;;;:::o;3434:86::-;3469:7;3509:4;3502:5;3498:16;3487:27;;3434:86;;;:::o;3526:281::-;3584:5;3608:23;3626:4;3608:23;:::i;:::-;3600:31;;3652:25;3668:8;3652:25;:::i;:::-;3640:37;;3696:104;3733:66;3723:8;3717:4;3696:104;:::i;:::-;3687:113;;3526:281;;;;:::o;3813:410::-;3853:7;3876:20;3894:1;3876:20;:::i;:::-;3871:25;;3910:20;3928:1;3910:20;:::i;:::-;3905:25;;3965:1;3962;3958:9;3987:30;4005:11;3987:30;:::i;:::-;3976:41;;4166:1;4157:7;4153:15;4150:1;4147:22;4127:1;4120:9;4100:83;4077:139;;4196:18;;:::i;:::-;4077:139;3861:362;3813:410;;;;:::o;4229:99::-;4281:6;4315:5;4309:12;4299:22;;4229:99;;;:::o;4334:180::-;4382:77;4379:1;4372:88;4479:4;4476:1;4469:15;4503:4;4500:1;4493:15;4520:180;4568:77;4565:1;4558:88;4665:4;4662:1;4655:15;4689:4;4686:1;4679:15;4706:320;4750:6;4787:1;4781:4;4777:12;4767:22;;4834:1;4828:4;4824:12;4855:18;4845:81;;4911:4;4903:6;4899:17;4889:27;;4845:81;4973:2;4965:6;4962:14;4942:18;4939:38;4936:84;;4992:18;;:::i;:::-;4936:84;4757:269;4706:320;;;:::o;5032:141::-;5081:4;5104:3;5096:11;;5127:3;5124:1;5117:14;5161:4;5158:1;5148:18;5140:26;;5032:141;;;:::o;5179:93::-;5216:6;5263:2;5258;5251:5;5247:14;5243:23;5233:33;;5179:93;;;:::o;5278:107::-;5322:8;5372:5;5366:4;5362:16;5341:37;;5278:107;;;;:::o;5391:393::-;5460:6;5510:1;5498:10;5494:18;5533:97;5563:66;5552:9;5533:97;:::i;:::-;5651:39;5681:8;5670:9;5651:39;:::i;:::-;5639:51;;5723:4;5719:9;5712:5;5708:21;5699:30;;5772:4;5762:8;5758:19;5751:5;5748:30;5738:40;;5467:317;;5391:393;;;;;:::o;5790:60::-;5818:3;5839:5;5832:12;;5790:60;;;:::o;5856:142::-;5906:9;5939:53;5957:34;5966:24;5984:5;5966:24;:::i;:::-;5957:34;:::i;:::-;5939:53;:::i;:::-;5926:66;;5856:142;;;:::o;6004:75::-;6047:3;6068:5;6061:12;;6004:75;;;:::o;6085:269::-;6195:39;6226:7;6195:39;:::i;:::-;6256:91;6305:41;6329:16;6305:41;:::i;:::-;6297:6;6290:4;6284:11;6256:91;:::i;:::-;6250:4;6243:105;6161:193;6085:269;;;:::o;6360:73::-;6405:3;6426:1;6419:8;;6360:73;:::o;6439:189::-;6516:32;;:::i;:::-;6557:65;6615:6;6607;6601:4;6557:65;:::i;:::-;6492:136;6439:189;;:::o;6634:186::-;6694:120;6711:3;6704:5;6701:14;6694:120;;;6765:39;6802:1;6795:5;6765:39;:::i;:::-;6738:1;6731:5;6727:13;6718:22;;6694:120;;;6634:186;;:::o;6826:543::-;6927:2;6922:3;6919:11;6916:446;;;6961:38;6993:5;6961:38;:::i;:::-;7045:29;7063:10;7045:29;:::i;:::-;7035:8;7031:44;7228:2;7216:10;7213:18;7210:49;;;7249:8;7234:23;;7210:49;7272:80;7328:22;7346:3;7328:22;:::i;:::-;7318:8;7314:37;7301:11;7272:80;:::i;:::-;6931:431;;6916:446;6826:543;;;:::o;7375:117::-;7429:8;7479:5;7473:4;7469:16;7448:37;;7375:117;;;;:::o;7498:169::-;7542:6;7575:51;7623:1;7619:6;7611:5;7608:1;7604:13;7575:51;:::i;:::-;7571:56;7656:4;7650;7646:15;7636:25;;7549:118;7498:169;;;;:::o;7672:295::-;7748:4;7894:29;7919:3;7913:4;7894:29;:::i;:::-;7886:37;;7956:3;7953:1;7949:11;7943:4;7940:21;7932:29;;7672:295;;;;:::o;7972:1395::-;8089:37;8122:3;8089:37;:::i;:::-;8191:18;8183:6;8180:30;8177:56;;;8213:18;;:::i;:::-;8177:56;8257:38;8289:4;8283:11;8257:38;:::i;:::-;8342:67;8402:6;8394;8388:4;8342:67;:::i;:::-;8436:1;8460:4;8447:17;;8492:2;8484:6;8481:14;8509:1;8504:618;;;;9166:1;9183:6;9180:77;;;9232:9;9227:3;9223:19;9217:26;9208:35;;9180:77;9283:67;9343:6;9336:5;9283:67;:::i;:::-;9277:4;9270:81;9139:222;8474:887;;8504:618;8556:4;8552:9;8544:6;8540:22;8590:37;8622:4;8590:37;:::i;:::-;8649:1;8663:208;8677:7;8674:1;8671:14;8663:208;;;8756:9;8751:3;8747:19;8741:26;8733:6;8726:42;8807:1;8799:6;8795:14;8785:24;;8854:2;8843:9;8839:18;8826:31;;8700:4;8697:1;8693:12;8688:17;;8663:208;;;8899:6;8890:7;8887:19;8884:179;;;8957:9;8952:3;8948:19;8942:26;9000:48;9042:4;9034:6;9030:17;9019:9;9000:48;:::i;:::-;8992:6;8985:64;8907:156;8884:179;9109:1;9105;9097:6;9093:14;9089:22;9083:4;9076:36;8511:611;;;8474:887;;8064:1303;;;7972:1395;;:::o;9373:85::-;9418:7;9447:5;9436:16;;9373:85;;;:::o;9464:158::-;9522:9;9555:61;9573:42;9582:32;9608:5;9582:32;:::i;:::-;9573:42;:::i;:::-;9555:61;:::i;:::-;9542:74;;9464:158;;;:::o;9628:147::-;9723:45;9762:5;9723:45;:::i;:::-;9718:3;9711:58;9628:147;;:::o;9781:238::-;9882:4;9920:2;9909:9;9905:18;9897:26;;9933:79;10009:1;9998:9;9994:17;9985:6;9933:79;:::i;:::-;9781:238;;;;:::o;10025:126::-;10062:7;10102:42;10095:5;10091:54;10080:65;;10025:126;;;:::o;10157:96::-;10194:7;10223:24;10241:5;10223:24;:::i;:::-;10212:35;;10157:96;;;:::o;10259:118::-;10346:24;10364:5;10346:24;:::i;:::-;10341:3;10334:37;10259:118;;:::o;10383:222::-;10476:4;10514:2;10503:9;10499:18;10491:26;;10527:71;10595:1;10584:9;10580:17;10571:6;10527:71;:::i;:::-;10383:222;;;;:::o;10611:118::-;10698:24;10716:5;10698:24;:::i;:::-;10693:3;10686:37;10611:118;;:::o;10735:332::-;10856:4;10894:2;10883:9;10879:18;10871:26;;10907:71;10975:1;10964:9;10960:17;10951:6;10907:71;:::i;:::-;10988:72;11056:2;11045:9;11041:18;11032:6;10988:72;:::i;:::-;10735:332;;;;;:::o;11073:191::-;11113:3;11132:20;11150:1;11132:20;:::i;:::-;11127:25;;11166:20;11184:1;11166:20;:::i;:::-;11161:25;;11209:1;11206;11202:9;11195:16;;11230:3;11227:1;11224:10;11221:36;;;11237:18;;:::i;:::-;11221:36;11073:191;;;;:::o;11270:442::-;11419:4;11457:2;11446:9;11442:18;11434:26;;11470:71;11538:1;11527:9;11523:17;11514:6;11470:71;:::i;:::-;11551:72;11619:2;11608:9;11604:18;11595:6;11551:72;:::i;:::-;11633;11701:2;11690:9;11686:18;11677:6;11633:72;:::i;:::-;11270:442;;;;;;:::o;11718:222::-;11811:4;11849:2;11838:9;11834:18;11826:26;;11862:71;11930:1;11919:9;11915:17;11906:6;11862:71;:::i;:::-;11718:222;;;;:::o;276:1736:7:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1723,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 2255,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 2128,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_912": {
									"entryPoint": 1716,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1741,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1888,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1024": {
									"entryPoint": 2718,
									"id": 1024,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2897,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_873": {
									"entryPoint": 2734,
									"id": 873,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1586,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 925,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1270,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blockReward_943": {
									"entryPoint": 959,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_774": {
									"entryPoint": 1339,
									"id": 774,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_753": {
									"entryPoint": 1250,
									"id": 753,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cap_825": {
									"entryPoint": 1211,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1203,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 781,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_941": {
									"entryPoint": 1371,
									"id": 941,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlockReward_1054": {
									"entryPoint": 974,
									"id": 1054,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 1408,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 965,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1157,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1552,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4950,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4587,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4448,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369": {
									"entryPoint": 4306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12223:8",
										"nodeType": "YulBlock",
										"src": "0:12223:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3757:263:8",
													"nodeType": "YulBlock",
													"src": "3757:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:8",
																"nodeType": "YulBlock",
																"src": "3803:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:8"
																			},
																			"nativeSrc": "3805:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:8"
																		},
																		"nativeSrc": "3805:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:8"
																		},
																		"nativeSrc": "3774:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:8"
																},
																"nativeSrc": "3770:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:8"
															},
															"nativeSrc": "3767:119:8",
															"nodeType": "YulIf",
															"src": "3767:119:8"
														},
														{
															"nativeSrc": "3896:117:8",
															"nodeType": "YulBlock",
															"src": "3896:117:8",
															"statements": [
																{
																	"nativeSrc": "3911:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:8"
																				},
																				"nativeSrc": "3971:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3950:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:8"
																		},
																		"nativeSrc": "3950:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3691:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:8",
														"nodeType": "YulTypedName",
														"src": "3727:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:8",
														"nodeType": "YulTypedName",
														"src": "3738:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:8",
														"nodeType": "YulTypedName",
														"src": "3750:6:8",
														"type": ""
													}
												],
												"src": "3691:329:8"
											},
											{
												"body": {
													"nativeSrc": "4126:519:8",
													"nodeType": "YulBlock",
													"src": "4126:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:8",
																"nodeType": "YulBlock",
																"src": "4172:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:8"
																			},
																			"nativeSrc": "4174:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:8"
																		},
																		"nativeSrc": "4174:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:8"
																		},
																		"nativeSrc": "4143:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:8"
																},
																"nativeSrc": "4139:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:8"
															},
															"nativeSrc": "4136:119:8",
															"nodeType": "YulIf",
															"src": "4136:119:8"
														},
														{
															"nativeSrc": "4265:117:8",
															"nodeType": "YulBlock",
															"src": "4265:117:8",
															"statements": [
																{
																	"nativeSrc": "4280:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:8"
																				},
																				"nativeSrc": "4340:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:8"
																		},
																		"nativeSrc": "4319:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:8",
															"nodeType": "YulBlock",
															"src": "4392:118:8",
															"statements": [
																{
																	"nativeSrc": "4407:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:8"
																				},
																				"nativeSrc": "4468:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:8"
																		},
																		"nativeSrc": "4447:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:8",
															"nodeType": "YulBlock",
															"src": "4520:118:8",
															"statements": [
																{
																	"nativeSrc": "4535:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:8"
																				},
																				"nativeSrc": "4596:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:8"
																		},
																		"nativeSrc": "4575:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:8",
														"nodeType": "YulTypedName",
														"src": "4080:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:8",
														"nodeType": "YulTypedName",
														"src": "4091:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:8",
														"nodeType": "YulTypedName",
														"src": "4103:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:8",
														"nodeType": "YulTypedName",
														"src": "4111:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:8",
														"nodeType": "YulTypedName",
														"src": "4119:6:8",
														"type": ""
													}
												],
												"src": "4026:619:8"
											},
											{
												"body": {
													"nativeSrc": "4694:43:8",
													"nodeType": "YulBlock",
													"src": "4694:43:8",
													"statements": [
														{
															"nativeSrc": "4704:27:8",
															"nodeType": "YulAssignment",
															"src": "4704:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:8"
																},
																"nativeSrc": "4715:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:8",
														"nodeType": "YulTypedName",
														"src": "4676:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:8",
														"nodeType": "YulTypedName",
														"src": "4686:7:8",
														"type": ""
													}
												],
												"src": "4651:86:8"
											},
											{
												"body": {
													"nativeSrc": "4804:51:8",
													"nodeType": "YulBlock",
													"src": "4804:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:8"
																		},
																		"nativeSrc": "4826:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:8"
																},
																"nativeSrc": "4814:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:8"
															},
															"nativeSrc": "4814:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:8",
														"nodeType": "YulTypedName",
														"src": "4792:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:8",
														"nodeType": "YulTypedName",
														"src": "4799:3:8",
														"type": ""
													}
												],
												"src": "4743:112:8"
											},
											{
												"body": {
													"nativeSrc": "4955:120:8",
													"nodeType": "YulBlock",
													"src": "4955:120:8",
													"statements": [
														{
															"nativeSrc": "4965:26:8",
															"nodeType": "YulAssignment",
															"src": "4965:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:8"
																},
																"nativeSrc": "4973:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:8"
																		},
																		"nativeSrc": "5050:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:8"
																},
																"nativeSrc": "5001:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:8"
															},
															"nativeSrc": "5001:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:8",
														"nodeType": "YulTypedName",
														"src": "4927:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:8",
														"nodeType": "YulTypedName",
														"src": "4939:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:8",
														"nodeType": "YulTypedName",
														"src": "4950:4:8",
														"type": ""
													}
												],
												"src": "4861:214:8"
											},
											{
												"body": {
													"nativeSrc": "5147:263:8",
													"nodeType": "YulBlock",
													"src": "5147:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:8",
																"nodeType": "YulBlock",
																"src": "5193:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:8"
																			},
																			"nativeSrc": "5195:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:8"
																		},
																		"nativeSrc": "5195:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:8"
																		},
																		"nativeSrc": "5164:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:8"
																},
																"nativeSrc": "5160:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:8"
															},
															"nativeSrc": "5157:119:8",
															"nodeType": "YulIf",
															"src": "5157:119:8"
														},
														{
															"nativeSrc": "5286:117:8",
															"nodeType": "YulBlock",
															"src": "5286:117:8",
															"statements": [
																{
																	"nativeSrc": "5301:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:8"
																				},
																				"nativeSrc": "5361:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:8"
																		},
																		"nativeSrc": "5340:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:8",
														"nodeType": "YulTypedName",
														"src": "5117:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:8",
														"nodeType": "YulTypedName",
														"src": "5128:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:8",
														"nodeType": "YulTypedName",
														"src": "5140:6:8",
														"type": ""
													}
												],
												"src": "5081:329:8"
											},
											{
												"body": {
													"nativeSrc": "5469:51:8",
													"nodeType": "YulBlock",
													"src": "5469:51:8",
													"statements": [
														{
															"nativeSrc": "5479:35:8",
															"nodeType": "YulAssignment",
															"src": "5479:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5508:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5508:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5490:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5490:17:8"
																},
																"nativeSrc": "5490:24:8",
																"nodeType": "YulFunctionCall",
																"src": "5490:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5479:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5479:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "5416:104:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5451:5:8",
														"nodeType": "YulTypedName",
														"src": "5451:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5461:7:8",
														"nodeType": "YulTypedName",
														"src": "5461:7:8",
														"type": ""
													}
												],
												"src": "5416:104:8"
											},
											{
												"body": {
													"nativeSrc": "5607:61:8",
													"nodeType": "YulBlock",
													"src": "5607:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5624:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5624:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5655:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5655:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "5629:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "5629:25:8"
																		},
																		"nativeSrc": "5629:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5629:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5617:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5617:6:8"
																},
																"nativeSrc": "5617:45:8",
																"nodeType": "YulFunctionCall",
																"src": "5617:45:8"
															},
															"nativeSrc": "5617:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "5617:45:8"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "5526:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5595:5:8",
														"nodeType": "YulTypedName",
														"src": "5595:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5602:3:8",
														"nodeType": "YulTypedName",
														"src": "5602:3:8",
														"type": ""
													}
												],
												"src": "5526:142:8"
											},
											{
												"body": {
													"nativeSrc": "5788:140:8",
													"nodeType": "YulBlock",
													"src": "5788:140:8",
													"statements": [
														{
															"nativeSrc": "5798:26:8",
															"nodeType": "YulAssignment",
															"src": "5798:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5810:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5810:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5821:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5821:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5806:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5806:3:8"
																},
																"nativeSrc": "5806:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5806:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5798:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5798:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5894:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5894:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5907:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5907:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5918:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5918:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5903:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5903:3:8"
																		},
																		"nativeSrc": "5903:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5903:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "5834:59:8",
																	"nodeType": "YulIdentifier",
																	"src": "5834:59:8"
																},
																"nativeSrc": "5834:87:8",
																"nodeType": "YulFunctionCall",
																"src": "5834:87:8"
															},
															"nativeSrc": "5834:87:8",
															"nodeType": "YulExpressionStatement",
															"src": "5834:87:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "5674:254:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5760:9:8",
														"nodeType": "YulTypedName",
														"src": "5760:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5772:6:8",
														"nodeType": "YulTypedName",
														"src": "5772:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5783:4:8",
														"nodeType": "YulTypedName",
														"src": "5783:4:8",
														"type": ""
													}
												],
												"src": "5674:254:8"
											},
											{
												"body": {
													"nativeSrc": "6017:391:8",
													"nodeType": "YulBlock",
													"src": "6017:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6063:83:8",
																"nodeType": "YulBlock",
																"src": "6063:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6065:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6065:77:8"
																			},
																			"nativeSrc": "6065:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6065:79:8"
																		},
																		"nativeSrc": "6065:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6065:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6038:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6038:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6047:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6047:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6034:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:8"
																		},
																		"nativeSrc": "6034:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6034:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6059:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6059:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6030:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:8"
																},
																"nativeSrc": "6030:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6030:32:8"
															},
															"nativeSrc": "6027:119:8",
															"nodeType": "YulIf",
															"src": "6027:119:8"
														},
														{
															"nativeSrc": "6156:117:8",
															"nodeType": "YulBlock",
															"src": "6156:117:8",
															"statements": [
																{
																	"nativeSrc": "6171:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6171:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6185:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6185:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6175:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6175:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6200:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6200:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6235:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6235:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6246:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6246:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6231:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6231:3:8"
																				},
																				"nativeSrc": "6231:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6231:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6255:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6255:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6210:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6210:20:8"
																		},
																		"nativeSrc": "6210:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6210:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6200:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6200:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6283:118:8",
															"nodeType": "YulBlock",
															"src": "6283:118:8",
															"statements": [
																{
																	"nativeSrc": "6298:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6298:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6312:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6312:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6302:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6302:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6328:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6328:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6363:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6363:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6374:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6374:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6359:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6359:3:8"
																				},
																				"nativeSrc": "6359:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6359:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6383:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6383:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6338:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6338:20:8"
																		},
																		"nativeSrc": "6338:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6338:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6328:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6328:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5934:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5979:9:8",
														"nodeType": "YulTypedName",
														"src": "5979:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5990:7:8",
														"nodeType": "YulTypedName",
														"src": "5990:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6002:6:8",
														"nodeType": "YulTypedName",
														"src": "6002:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6010:6:8",
														"nodeType": "YulTypedName",
														"src": "6010:6:8",
														"type": ""
													}
												],
												"src": "5934:474:8"
											},
											{
												"body": {
													"nativeSrc": "6442:152:8",
													"nodeType": "YulBlock",
													"src": "6442:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6459:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6459:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6462:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6462:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6452:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6452:6:8"
																},
																"nativeSrc": "6452:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6452:88:8"
															},
															"nativeSrc": "6452:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6452:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6556:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6556:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6559:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6559:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6549:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6549:6:8"
																},
																"nativeSrc": "6549:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6549:15:8"
															},
															"nativeSrc": "6549:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6549:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6580:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6580:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6583:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6583:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6573:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:8"
																},
																"nativeSrc": "6573:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6573:15:8"
															},
															"nativeSrc": "6573:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6573:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6414:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6414:180:8"
											},
											{
												"body": {
													"nativeSrc": "6651:269:8",
													"nodeType": "YulBlock",
													"src": "6651:269:8",
													"statements": [
														{
															"nativeSrc": "6661:22:8",
															"nodeType": "YulAssignment",
															"src": "6661:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6675:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6675:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6681:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6681:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6671:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6671:3:8"
																},
																"nativeSrc": "6671:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6671:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6661:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6661:6:8"
																}
															]
														},
														{
															"nativeSrc": "6692:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6692:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6722:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6722:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6728:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6728:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6718:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6718:3:8"
																},
																"nativeSrc": "6718:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6718:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6696:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6696:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6769:51:8",
																"nodeType": "YulBlock",
																"src": "6769:51:8",
																"statements": [
																	{
																		"nativeSrc": "6783:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6783:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6797:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6797:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6805:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6805:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6793:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6793:3:8"
																			},
																			"nativeSrc": "6793:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6793:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6783:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6783:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6749:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6749:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6742:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6742:6:8"
																},
																"nativeSrc": "6742:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6742:26:8"
															},
															"nativeSrc": "6739:81:8",
															"nodeType": "YulIf",
															"src": "6739:81:8"
														},
														{
															"body": {
																"nativeSrc": "6872:42:8",
																"nodeType": "YulBlock",
																"src": "6872:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6886:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6886:16:8"
																			},
																			"nativeSrc": "6886:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6886:18:8"
																		},
																		"nativeSrc": "6886:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6886:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6836:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6836:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6859:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6859:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6867:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6867:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6856:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6856:2:8"
																		},
																		"nativeSrc": "6856:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6856:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6833:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6833:2:8"
																},
																"nativeSrc": "6833:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6833:38:8"
															},
															"nativeSrc": "6830:84:8",
															"nodeType": "YulIf",
															"src": "6830:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6600:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6635:4:8",
														"nodeType": "YulTypedName",
														"src": "6635:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6644:6:8",
														"nodeType": "YulTypedName",
														"src": "6644:6:8",
														"type": ""
													}
												],
												"src": "6600:320:8"
											},
											{
												"body": {
													"nativeSrc": "7032:126:8",
													"nodeType": "YulBlock",
													"src": "7032:126:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7054:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7054:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7062:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7062:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7050:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7050:3:8"
																		},
																		"nativeSrc": "7050:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7050:14:8"
																	},
																	{
																		"hexValue": "536f72727920796f75206d75737420626520616e206f776e657220746f206163",
																		"kind": "string",
																		"nativeSrc": "7066:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7066:34:8",
																		"type": "",
																		"value": "Sorry you must be an owner to ac"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7043:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7043:6:8"
																},
																"nativeSrc": "7043:58:8",
																"nodeType": "YulFunctionCall",
																"src": "7043:58:8"
															},
															"nativeSrc": "7043:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "7043:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7122:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7122:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7130:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7130:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7118:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7118:3:8"
																		},
																		"nativeSrc": "7118:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7118:15:8"
																	},
																	{
																		"hexValue": "636573732074686973206f6e65",
																		"kind": "string",
																		"nativeSrc": "7135:15:8",
																		"nodeType": "YulLiteral",
																		"src": "7135:15:8",
																		"type": "",
																		"value": "cess this one"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7111:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7111:6:8"
																},
																"nativeSrc": "7111:40:8",
																"nodeType": "YulFunctionCall",
																"src": "7111:40:8"
															},
															"nativeSrc": "7111:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "7111:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369",
												"nativeSrc": "6926:232:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7024:6:8",
														"nodeType": "YulTypedName",
														"src": "7024:6:8",
														"type": ""
													}
												],
												"src": "6926:232:8"
											},
											{
												"body": {
													"nativeSrc": "7310:220:8",
													"nodeType": "YulBlock",
													"src": "7310:220:8",
													"statements": [
														{
															"nativeSrc": "7320:74:8",
															"nodeType": "YulAssignment",
															"src": "7320:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7386:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7386:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7391:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7391:2:8",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7327:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7327:58:8"
																},
																"nativeSrc": "7327:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7327:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7320:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7320:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7492:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7492:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369",
																	"nativeSrc": "7403:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7403:88:8"
																},
																"nativeSrc": "7403:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7403:93:8"
															},
															"nativeSrc": "7403:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7403:93:8"
														},
														{
															"nativeSrc": "7505:19:8",
															"nodeType": "YulAssignment",
															"src": "7505:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7516:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7516:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7521:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7521:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7512:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:8"
																},
																"nativeSrc": "7512:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7512:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7505:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7164:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7298:3:8",
														"nodeType": "YulTypedName",
														"src": "7298:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7306:3:8",
														"nodeType": "YulTypedName",
														"src": "7306:3:8",
														"type": ""
													}
												],
												"src": "7164:366:8"
											},
											{
												"body": {
													"nativeSrc": "7707:248:8",
													"nodeType": "YulBlock",
													"src": "7707:248:8",
													"statements": [
														{
															"nativeSrc": "7717:26:8",
															"nodeType": "YulAssignment",
															"src": "7717:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7729:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7729:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7740:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7740:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7725:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7725:3:8"
																},
																"nativeSrc": "7725:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7725:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7717:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7717:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7764:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7764:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7775:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7775:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7760:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7760:3:8"
																		},
																		"nativeSrc": "7760:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7760:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7783:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7783:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7789:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7789:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7779:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7779:3:8"
																		},
																		"nativeSrc": "7779:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7779:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7753:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7753:6:8"
																},
																"nativeSrc": "7753:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7753:47:8"
															},
															"nativeSrc": "7753:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7753:47:8"
														},
														{
															"nativeSrc": "7809:139:8",
															"nodeType": "YulAssignment",
															"src": "7809:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7943:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7943:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7817:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7817:124:8"
																},
																"nativeSrc": "7817:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7817:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7809:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7809:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7536:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7687:9:8",
														"nodeType": "YulTypedName",
														"src": "7687:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7702:4:8",
														"nodeType": "YulTypedName",
														"src": "7702:4:8",
														"type": ""
													}
												],
												"src": "7536:419:8"
											},
											{
												"body": {
													"nativeSrc": "7989:152:8",
													"nodeType": "YulBlock",
													"src": "7989:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8006:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8006:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8009:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8009:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7999:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7999:6:8"
																},
																"nativeSrc": "7999:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7999:88:8"
															},
															"nativeSrc": "7999:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7999:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8106:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8096:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8096:6:8"
																},
																"nativeSrc": "8096:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8096:15:8"
															},
															"nativeSrc": "8096:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8096:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8120:6:8"
																},
																"nativeSrc": "8120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8120:15:8"
															},
															"nativeSrc": "8120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8120:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7961:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7961:180:8"
											},
											{
												"body": {
													"nativeSrc": "8198:51:8",
													"nodeType": "YulBlock",
													"src": "8198:51:8",
													"statements": [
														{
															"nativeSrc": "8208:34:8",
															"nodeType": "YulAssignment",
															"src": "8208:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8233:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8233:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8236:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8236:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8229:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8229:3:8"
																},
																"nativeSrc": "8229:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8229:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8208:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "8208:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8147:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8179:5:8",
														"nodeType": "YulTypedName",
														"src": "8179:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8189:8:8",
														"nodeType": "YulTypedName",
														"src": "8189:8:8",
														"type": ""
													}
												],
												"src": "8147:102:8"
											},
											{
												"body": {
													"nativeSrc": "8328:775:8",
													"nodeType": "YulBlock",
													"src": "8328:775:8",
													"statements": [
														{
															"nativeSrc": "8338:15:8",
															"nodeType": "YulAssignment",
															"src": "8338:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "8347:6:8",
																"nodeType": "YulIdentifier",
																"src": "8347:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8338:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8338:5:8"
																}
															]
														},
														{
															"nativeSrc": "8362:14:8",
															"nodeType": "YulAssignment",
															"src": "8362:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "8371:5:8",
																"nodeType": "YulIdentifier",
																"src": "8371:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8362:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8362:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8420:677:8",
																"nodeType": "YulBlock",
																"src": "8420:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8508:22:8",
																			"nodeType": "YulBlock",
																			"src": "8508:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8510:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "8510:16:8"
																						},
																						"nativeSrc": "8510:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8510:18:8"
																					},
																					"nativeSrc": "8510:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "8510:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8486:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8486:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8496:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8496:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8501:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8501:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8492:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8492:3:8"
																					},
																					"nativeSrc": "8492:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8492:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8483:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8483:2:8"
																			},
																			"nativeSrc": "8483:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8483:24:8"
																		},
																		"nativeSrc": "8480:50:8",
																		"nodeType": "YulIf",
																		"src": "8480:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "8575:419:8",
																			"nodeType": "YulBlock",
																			"src": "8575:419:8",
																			"statements": [
																				{
																					"nativeSrc": "8955:25:8",
																					"nodeType": "YulAssignment",
																					"src": "8955:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8968:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "8968:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8975:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "8975:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8964:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8964:3:8"
																						},
																						"nativeSrc": "8964:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8964:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8955:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8955:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8550:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8550:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8560:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8560:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8546:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8546:3:8"
																			},
																			"nativeSrc": "8546:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8546:16:8"
																		},
																		"nativeSrc": "8543:451:8",
																		"nodeType": "YulIf",
																		"src": "8543:451:8"
																	},
																	{
																		"nativeSrc": "9007:23:8",
																		"nodeType": "YulAssignment",
																		"src": "9007:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9019:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9019:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9025:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9025:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9015:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9015:3:8"
																			},
																			"nativeSrc": "9015:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9015:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9007:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9007:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9043:44:8",
																		"nodeType": "YulAssignment",
																		"src": "9043:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9078:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9078:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9055:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "9055:22:8"
																			},
																			"nativeSrc": "9055:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9055:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9043:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "9043:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8396:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8396:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8406:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8406:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8393:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8393:2:8"
																},
																"nativeSrc": "8393:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8393:15:8"
															},
															"nativeSrc": "8385:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8409:2:8",
																"nodeType": "YulBlock",
																"src": "8409:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8389:3:8",
																"nodeType": "YulBlock",
																"src": "8389:3:8",
																"statements": []
															},
															"src": "8385:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8255:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8283:6:8",
														"nodeType": "YulTypedName",
														"src": "8283:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8291:5:8",
														"nodeType": "YulTypedName",
														"src": "8291:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8298:8:8",
														"nodeType": "YulTypedName",
														"src": "8298:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8308:3:8",
														"nodeType": "YulTypedName",
														"src": "8308:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8316:5:8",
														"nodeType": "YulTypedName",
														"src": "8316:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8323:4:8",
														"nodeType": "YulTypedName",
														"src": "8323:4:8",
														"type": ""
													}
												],
												"src": "8255:848:8"
											},
											{
												"body": {
													"nativeSrc": "9169:1013:8",
													"nodeType": "YulBlock",
													"src": "9169:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9364:20:8",
																"nodeType": "YulBlock",
																"src": "9364:20:8",
																"statements": [
																	{
																		"nativeSrc": "9366:10:8",
																		"nodeType": "YulAssignment",
																		"src": "9366:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9375:1:8",
																			"nodeType": "YulLiteral",
																			"src": "9375:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9366:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9366:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9377:5:8",
																		"nodeType": "YulLeave",
																		"src": "9377:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9354:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9354:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9347:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:8"
																},
																"nativeSrc": "9347:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9347:16:8"
															},
															"nativeSrc": "9344:40:8",
															"nodeType": "YulIf",
															"src": "9344:40:8"
														},
														{
															"body": {
																"nativeSrc": "9409:20:8",
																"nodeType": "YulBlock",
																"src": "9409:20:8",
																"statements": [
																	{
																		"nativeSrc": "9411:10:8",
																		"nodeType": "YulAssignment",
																		"src": "9411:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9420:1:8",
																			"nodeType": "YulLiteral",
																			"src": "9420:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9411:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9411:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9422:5:8",
																		"nodeType": "YulLeave",
																		"src": "9422:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9403:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9403:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9396:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9396:6:8"
																},
																"nativeSrc": "9396:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9396:12:8"
															},
															"nativeSrc": "9393:36:8",
															"nodeType": "YulIf",
															"src": "9393:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9539:20:8",
																		"nodeType": "YulBlock",
																		"src": "9539:20:8",
																		"statements": [
																			{
																				"nativeSrc": "9541:10:8",
																				"nodeType": "YulAssignment",
																				"src": "9541:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9550:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9550:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9541:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9541:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9552:5:8",
																				"nodeType": "YulLeave",
																				"src": "9552:5:8"
																			}
																		]
																	},
																	"nativeSrc": "9532:27:8",
																	"nodeType": "YulCase",
																	"src": "9532:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9537:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9537:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9583:176:8",
																		"nodeType": "YulBlock",
																		"src": "9583:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9618:22:8",
																					"nodeType": "YulBlock",
																					"src": "9618:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9620:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9620:16:8"
																								},
																								"nativeSrc": "9620:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9620:18:8"
																							},
																							"nativeSrc": "9620:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9620:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9603:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9603:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9613:3:8",
																							"nodeType": "YulLiteral",
																							"src": "9613:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9600:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9600:2:8"
																					},
																					"nativeSrc": "9600:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9600:17:8"
																				},
																				"nativeSrc": "9597:43:8",
																				"nodeType": "YulIf",
																				"src": "9597:43:8"
																			},
																			{
																				"nativeSrc": "9653:25:8",
																				"nodeType": "YulAssignment",
																				"src": "9653:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9666:1:8",
																							"nodeType": "YulLiteral",
																							"src": "9666:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9669:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9669:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9662:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9662:3:8"
																					},
																					"nativeSrc": "9662:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9662:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9653:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9653:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9709:22:8",
																					"nodeType": "YulBlock",
																					"src": "9709:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9711:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9711:16:8"
																								},
																								"nativeSrc": "9711:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9711:18:8"
																							},
																							"nativeSrc": "9711:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9711:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9697:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9697:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9704:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9704:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9694:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9694:2:8"
																					},
																					"nativeSrc": "9694:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9694:14:8"
																				},
																				"nativeSrc": "9691:40:8",
																				"nodeType": "YulIf",
																				"src": "9691:40:8"
																			},
																			{
																				"nativeSrc": "9744:5:8",
																				"nodeType": "YulLeave",
																				"src": "9744:5:8"
																			}
																		]
																	},
																	"nativeSrc": "9568:191:8",
																	"nodeType": "YulCase",
																	"src": "9568:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9573:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9573:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9489:4:8",
																"nodeType": "YulIdentifier",
																"src": "9489:4:8"
															},
															"nativeSrc": "9482:277:8",
															"nodeType": "YulSwitch",
															"src": "9482:277:8"
														},
														{
															"body": {
																"nativeSrc": "9891:123:8",
																"nodeType": "YulBlock",
																"src": "9891:123:8",
																"statements": [
																	{
																		"nativeSrc": "9905:28:8",
																		"nodeType": "YulAssignment",
																		"src": "9905:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9918:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9918:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9924:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9924:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9914:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9914:3:8"
																			},
																			"nativeSrc": "9914:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9914:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9905:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9905:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9964:22:8",
																			"nodeType": "YulBlock",
																			"src": "9964:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9966:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "9966:16:8"
																						},
																						"nativeSrc": "9966:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9966:18:8"
																					},
																					"nativeSrc": "9966:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "9966:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9952:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "9952:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9959:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9959:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9949:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "9949:2:8"
																			},
																			"nativeSrc": "9949:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9949:14:8"
																		},
																		"nativeSrc": "9946:40:8",
																		"nodeType": "YulIf",
																		"src": "9946:40:8"
																	},
																	{
																		"nativeSrc": "9999:5:8",
																		"nodeType": "YulLeave",
																		"src": "9999:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9794:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9794:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9800:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9800:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9791:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9791:2:8"
																				},
																				"nativeSrc": "9791:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9791:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9808:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9808:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9818:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9818:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9805:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9805:2:8"
																				},
																				"nativeSrc": "9805:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9805:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9787:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9787:3:8"
																		},
																		"nativeSrc": "9787:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9787:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9843:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9843:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9849:3:8",
																						"nodeType": "YulLiteral",
																						"src": "9849:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9840:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9840:2:8"
																				},
																				"nativeSrc": "9840:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9840:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9858:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "9858:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9868:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9868:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9855:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9855:2:8"
																				},
																				"nativeSrc": "9855:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9855:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9836:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9836:3:8"
																		},
																		"nativeSrc": "9836:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9836:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9771:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9771:2:8"
																},
																"nativeSrc": "9771:111:8",
																"nodeType": "YulFunctionCall",
																"src": "9771:111:8"
															},
															"nativeSrc": "9768:246:8",
															"nodeType": "YulIf",
															"src": "9768:246:8"
														},
														{
															"nativeSrc": "10024:57:8",
															"nodeType": "YulAssignment",
															"src": "10024:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10058:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10058:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10061:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10061:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10067:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10067:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10077:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10077:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10039:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "10039:18:8"
																},
																"nativeSrc": "10039:42:8",
																"nodeType": "YulFunctionCall",
																"src": "10039:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10024:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10024:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "10031:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10031:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10120:22:8",
																"nodeType": "YulBlock",
																"src": "10120:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10122:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10122:16:8"
																			},
																			"nativeSrc": "10122:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10122:18:8"
																		},
																		"nativeSrc": "10122:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10097:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10097:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10108:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10108:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10113:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10113:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10104:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10104:3:8"
																		},
																		"nativeSrc": "10104:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10104:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10094:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10094:2:8"
																},
																"nativeSrc": "10094:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10094:25:8"
															},
															"nativeSrc": "10091:51:8",
															"nodeType": "YulIf",
															"src": "10091:51:8"
														},
														{
															"nativeSrc": "10151:25:8",
															"nodeType": "YulAssignment",
															"src": "10151:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10164:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10164:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10171:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10171:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10160:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10160:3:8"
																},
																"nativeSrc": "10160:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10160:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10151:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10151:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9109:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9139:4:8",
														"nodeType": "YulTypedName",
														"src": "9139:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9145:8:8",
														"nodeType": "YulTypedName",
														"src": "9145:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9155:3:8",
														"nodeType": "YulTypedName",
														"src": "9155:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9163:5:8",
														"nodeType": "YulTypedName",
														"src": "9163:5:8",
														"type": ""
													}
												],
												"src": "9109:1073:8"
											},
											{
												"body": {
													"nativeSrc": "10252:217:8",
													"nodeType": "YulBlock",
													"src": "10252:217:8",
													"statements": [
														{
															"nativeSrc": "10262:31:8",
															"nodeType": "YulAssignment",
															"src": "10262:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10288:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10288:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10270:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10270:17:8"
																},
																"nativeSrc": "10270:23:8",
																"nodeType": "YulFunctionCall",
																"src": "10270:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10262:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10262:4:8"
																}
															]
														},
														{
															"nativeSrc": "10302:37:8",
															"nodeType": "YulAssignment",
															"src": "10302:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10330:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10330:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "10314:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "10314:15:8"
																},
																"nativeSrc": "10314:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10314:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10302:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "10302:8:8"
																}
															]
														},
														{
															"nativeSrc": "10349:113:8",
															"nodeType": "YulAssignment",
															"src": "10349:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10379:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10379:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10385:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10385:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10395:66:8",
																		"nodeType": "YulLiteral",
																		"src": "10395:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10358:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "10358:20:8"
																},
																"nativeSrc": "10358:104:8",
																"nodeType": "YulFunctionCall",
																"src": "10358:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10349:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "10188:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10227:4:8",
														"nodeType": "YulTypedName",
														"src": "10227:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10233:8:8",
														"nodeType": "YulTypedName",
														"src": "10233:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10246:5:8",
														"nodeType": "YulTypedName",
														"src": "10246:5:8",
														"type": ""
													}
												],
												"src": "10188:281:8"
											},
											{
												"body": {
													"nativeSrc": "10523:362:8",
													"nodeType": "YulBlock",
													"src": "10523:362:8",
													"statements": [
														{
															"nativeSrc": "10533:25:8",
															"nodeType": "YulAssignment",
															"src": "10533:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10556:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10556:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10538:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10538:17:8"
																},
																"nativeSrc": "10538:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10538:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10533:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10533:1:8"
																}
															]
														},
														{
															"nativeSrc": "10567:25:8",
															"nodeType": "YulAssignment",
															"src": "10567:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10590:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10590:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10572:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10572:17:8"
																},
																"nativeSrc": "10572:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10572:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10567:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10567:1:8"
																}
															]
														},
														{
															"nativeSrc": "10601:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10601:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10624:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10624:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10627:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10627:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10620:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10620:3:8"
																},
																"nativeSrc": "10620:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10620:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10605:11:8",
																	"nodeType": "YulTypedName",
																	"src": "10605:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10638:41:8",
															"nodeType": "YulAssignment",
															"src": "10638:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10667:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "10667:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10649:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10649:17:8"
																},
																"nativeSrc": "10649:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10649:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10638:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10638:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10856:22:8",
																"nodeType": "YulBlock",
																"src": "10856:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10858:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10858:16:8"
																			},
																			"nativeSrc": "10858:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10858:18:8"
																		},
																		"nativeSrc": "10858:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10858:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10789:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10789:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10782:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10782:6:8"
																				},
																				"nativeSrc": "10782:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10782:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10812:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10812:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10819:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "10819:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10828:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "10828:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10815:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "10815:3:8"
																						},
																						"nativeSrc": "10815:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10815:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10809:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10809:2:8"
																				},
																				"nativeSrc": "10809:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10809:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10762:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10762:2:8"
																		},
																		"nativeSrc": "10762:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10762:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10742:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10742:6:8"
																},
																"nativeSrc": "10742:113:8",
																"nodeType": "YulFunctionCall",
																"src": "10742:113:8"
															},
															"nativeSrc": "10739:139:8",
															"nodeType": "YulIf",
															"src": "10739:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10475:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10506:1:8",
														"nodeType": "YulTypedName",
														"src": "10506:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10509:1:8",
														"nodeType": "YulTypedName",
														"src": "10509:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10515:7:8",
														"nodeType": "YulTypedName",
														"src": "10515:7:8",
														"type": ""
													}
												],
												"src": "10475:410:8"
											},
											{
												"body": {
													"nativeSrc": "10956:53:8",
													"nodeType": "YulBlock",
													"src": "10956:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10973:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10973:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10996:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10996:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10978:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10978:17:8"
																		},
																		"nativeSrc": "10978:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10978:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10966:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10966:6:8"
																},
																"nativeSrc": "10966:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10966:37:8"
															},
															"nativeSrc": "10966:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10966:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10891:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10944:5:8",
														"nodeType": "YulTypedName",
														"src": "10944:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10951:3:8",
														"nodeType": "YulTypedName",
														"src": "10951:3:8",
														"type": ""
													}
												],
												"src": "10891:118:8"
											},
											{
												"body": {
													"nativeSrc": "11169:288:8",
													"nodeType": "YulBlock",
													"src": "11169:288:8",
													"statements": [
														{
															"nativeSrc": "11179:26:8",
															"nodeType": "YulAssignment",
															"src": "11179:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11191:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11191:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11202:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11202:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11187:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11187:3:8"
																},
																"nativeSrc": "11187:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11187:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11179:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11179:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11259:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11259:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11272:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11272:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11283:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11283:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11268:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11268:3:8"
																		},
																		"nativeSrc": "11268:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11268:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11215:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11215:43:8"
																},
																"nativeSrc": "11215:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11215:71:8"
															},
															"nativeSrc": "11215:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11215:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11340:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11340:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11353:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11353:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11364:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11364:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11349:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11349:3:8"
																		},
																		"nativeSrc": "11349:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11349:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11296:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11296:43:8"
																},
																"nativeSrc": "11296:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11296:72:8"
															},
															"nativeSrc": "11296:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11296:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11422:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11422:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11435:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11435:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11446:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11446:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11431:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11431:3:8"
																		},
																		"nativeSrc": "11431:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11431:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11378:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11378:43:8"
																},
																"nativeSrc": "11378:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11378:72:8"
															},
															"nativeSrc": "11378:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11378:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11015:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11125:9:8",
														"nodeType": "YulTypedName",
														"src": "11125:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11137:6:8",
														"nodeType": "YulTypedName",
														"src": "11137:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11145:6:8",
														"nodeType": "YulTypedName",
														"src": "11145:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11153:6:8",
														"nodeType": "YulTypedName",
														"src": "11153:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11164:4:8",
														"nodeType": "YulTypedName",
														"src": "11164:4:8",
														"type": ""
													}
												],
												"src": "11015:442:8"
											},
											{
												"body": {
													"nativeSrc": "11561:124:8",
													"nodeType": "YulBlock",
													"src": "11561:124:8",
													"statements": [
														{
															"nativeSrc": "11571:26:8",
															"nodeType": "YulAssignment",
															"src": "11571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11579:3:8"
																},
																"nativeSrc": "11579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11660:3:8"
																		},
																		"nativeSrc": "11660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11607:43:8"
																},
																"nativeSrc": "11607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11607:71:8"
															},
															"nativeSrc": "11607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11533:9:8",
														"nodeType": "YulTypedName",
														"src": "11533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11545:6:8",
														"nodeType": "YulTypedName",
														"src": "11545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11556:4:8",
														"nodeType": "YulTypedName",
														"src": "11556:4:8",
														"type": ""
													}
												],
												"src": "11463:222:8"
											},
											{
												"body": {
													"nativeSrc": "11817:206:8",
													"nodeType": "YulBlock",
													"src": "11817:206:8",
													"statements": [
														{
															"nativeSrc": "11827:26:8",
															"nodeType": "YulAssignment",
															"src": "11827:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11839:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11839:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11850:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11850:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11835:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:8"
																},
																"nativeSrc": "11835:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11835:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11827:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11827:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11907:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11907:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11920:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11920:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11931:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11931:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11916:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11916:3:8"
																		},
																		"nativeSrc": "11916:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11916:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11863:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11863:43:8"
																},
																"nativeSrc": "11863:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11863:71:8"
															},
															"nativeSrc": "11863:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11863:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11988:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11988:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12001:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12001:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12012:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12012:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11997:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11997:3:8"
																		},
																		"nativeSrc": "11997:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11997:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11944:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11944:43:8"
																},
																"nativeSrc": "11944:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11944:72:8"
															},
															"nativeSrc": "11944:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11944:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11691:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11781:9:8",
														"nodeType": "YulTypedName",
														"src": "11781:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11793:6:8",
														"nodeType": "YulTypedName",
														"src": "11793:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11801:6:8",
														"nodeType": "YulTypedName",
														"src": "11801:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11812:4:8",
														"nodeType": "YulTypedName",
														"src": "11812:4:8",
														"type": ""
													}
												],
												"src": "11691:332:8"
											},
											{
												"body": {
													"nativeSrc": "12073:147:8",
													"nodeType": "YulBlock",
													"src": "12073:147:8",
													"statements": [
														{
															"nativeSrc": "12083:25:8",
															"nodeType": "YulAssignment",
															"src": "12083:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12106:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12106:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12088:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12088:17:8"
																},
																"nativeSrc": "12088:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12088:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12083:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12083:1:8"
																}
															]
														},
														{
															"nativeSrc": "12117:25:8",
															"nodeType": "YulAssignment",
															"src": "12117:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12140:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12140:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12122:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12122:17:8"
																},
																"nativeSrc": "12122:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12122:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12117:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12117:1:8"
																}
															]
														},
														{
															"nativeSrc": "12151:16:8",
															"nodeType": "YulAssignment",
															"src": "12151:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12162:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12162:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12165:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12165:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12158:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12158:3:8"
																},
																"nativeSrc": "12158:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12158:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12151:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12151:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12191:22:8",
																"nodeType": "YulBlock",
																"src": "12191:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12193:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12193:16:8"
																			},
																			"nativeSrc": "12193:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12193:18:8"
																		},
																		"nativeSrc": "12193:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12193:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12183:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12183:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12186:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12186:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12180:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12180:2:8"
																},
																"nativeSrc": "12180:10:8",
																"nodeType": "YulFunctionCall",
																"src": "12180:10:8"
															},
															"nativeSrc": "12177:36:8",
															"nodeType": "YulIf",
															"src": "12177:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12029:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12060:1:8",
														"nodeType": "YulTypedName",
														"src": "12060:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12063:1:8",
														"nodeType": "YulTypedName",
														"src": "12063:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12069:3:8",
														"nodeType": "YulTypedName",
														"src": "12069:3:8",
														"type": ""
													}
												],
												"src": "12029:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sorry you must be an owner to ac\")\n\n        mstore(add(memPtr, 32), \"cess this one\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"784": [
									{
										"length": 32,
										"start": 1214
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x355274EA GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x355274EA EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x255 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x1A18E707 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xAC168A1 EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x279 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31C SWAP1 PUSH2 0x10A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x348 SWAP1 PUSH2 0x10A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x393 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x393 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x376 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3A7 PUSH2 0x6B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B4 DUP2 DUP6 DUP6 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x454 SWAP1 PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x465 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0xA PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST DUP2 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x48F PUSH2 0x6B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x49C DUP6 DUP3 DUP6 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x4A7 DUP6 DUP6 DUP6 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0x4ED PUSH2 0x6B4 JUMP JUMPDEST DUP3 PUSH2 0x850 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54D DUP3 PUSH2 0x547 PUSH2 0x6B4 JUMP JUMPDEST DUP4 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x557 DUP3 DUP3 PUSH2 0x850 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x58F SWAP1 PUSH2 0x10A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BB SWAP1 PUSH2 0x10A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x606 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x606 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x61A PUSH2 0x6B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x627 DUP2 DUP6 DUP6 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6C8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D8 DUP5 DUP5 PUSH2 0x632 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x75A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x74B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x742 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x759 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x8CF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x840 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84B DUP4 DUP4 DUP4 PUSH2 0xA9E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CB DUP3 PUSH0 DUP4 PUSH2 0xA9E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA98 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAA9 DUP4 DUP4 DUP4 PUSH2 0xAAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAB9 DUP4 DUP4 DUP4 PUSH2 0xB51 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB4C JUMPI PUSH0 PUSH2 0xAF5 PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB00 PUSH2 0x3C5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xB49 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP3 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC6F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC2A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD00 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAC DUP3 PUSH2 0xD6A JUMP JUMPDEST PUSH2 0xDB6 DUP2 DUP6 PUSH2 0xD74 JUMP JUMPDEST SWAP4 POP PUSH2 0xDC6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD84 JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xD92 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDF2 DUP2 DUP5 PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE27 DUP3 PUSH2 0xDFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xE1D JUMP JUMPDEST DUP2 EQ PUSH2 0xE41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE52 DUP2 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6A DUP2 PUSH2 0xE58 JUMP JUMPDEST DUP2 EQ PUSH2 0xE74 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE85 DUP2 PUSH2 0xE61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEAE DUP6 DUP3 DUP7 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEBF DUP6 DUP3 DUP7 ADD PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xEC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF05 DUP2 PUSH2 0xE58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1E PUSH0 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF39 JUMPI PUSH2 0xF38 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF46 DUP5 DUP3 DUP6 ADD PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF66 JUMPI PUSH2 0xF65 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF73 DUP7 DUP3 DUP8 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF84 DUP7 DUP3 DUP8 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF95 DUP7 DUP3 DUP8 ADD PUSH2 0xE77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB4 DUP2 PUSH2 0xF9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCD PUSH0 DUP4 ADD DUP5 PUSH2 0xFAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE8 JUMPI PUSH2 0xFE7 PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF5 DUP5 DUP3 DUP6 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1008 DUP3 PUSH2 0xDFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1018 DUP2 PUSH2 0xFFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1031 PUSH0 DUP4 ADD DUP5 PUSH2 0x100F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x104D JUMPI PUSH2 0x104C PUSH2 0xDFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x105A DUP6 DUP3 DUP7 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x106B DUP6 DUP3 DUP7 ADD PUSH2 0xE44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10CC JUMPI PUSH2 0x10CB PUSH2 0x1075 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F72727920796F75206D75737420626520616E206F776E657220746F206163 PUSH0 DUP3 ADD MSTORE PUSH32 0x636573732074686973206F6E6500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x112C PUSH1 0x2D DUP4 PUSH2 0xD74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1137 DUP3 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1159 DUP2 PUSH2 0x1120 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x11E2 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x11BE JUMPI PUSH2 0x11BD PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x11CD JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x11DB DUP6 PUSH2 0x118D JUMP JUMPDEST SWAP5 POP PUSH2 0x11A2 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x11FA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x12B5 JUMP JUMPDEST DUP2 PUSH2 0x1207 JUMPI PUSH0 SWAP1 POP PUSH2 0x12B5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x121D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1227 JUMPI PUSH2 0x1256 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1250 JUMPI PUSH2 0x124F PUSH2 0x1160 JUMP JUMPDEST JUMPDEST POP PUSH2 0x12B5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x128B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1286 JUMPI PUSH2 0x1285 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x1298 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1199 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x12AF JUMPI PUSH2 0x12AE PUSH2 0x1160 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12C6 DUP3 PUSH2 0xE58 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D1 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP3 POP PUSH2 0x12FE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x11EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1310 DUP3 PUSH2 0xE58 JUMP JUMPDEST SWAP2 POP PUSH2 0x131B DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1329 DUP2 PUSH2 0xE58 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1340 JUMPI PUSH2 0x133F PUSH2 0x1160 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1350 DUP2 PUSH2 0xE1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1369 PUSH0 DUP4 ADD DUP7 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x1376 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x1383 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139E PUSH0 DUP4 ADD DUP5 PUSH2 0x1347 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13B7 PUSH0 DUP4 ADD DUP6 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x13C4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D5 DUP3 PUSH2 0xE58 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E0 DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0x1160 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xED CALLCODE SWAP6 ISZERO 0xCF LT PUSH19 0xC9B523C535F85B2B895593AEE1F2836AF5B256 JUMPI SLT 0xC1 DUP9 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "276:1736:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;740:23:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1805:204:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4680:244:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:81:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:87:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;705:28:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;740:23:7:-;;;;:::o;2803:97:1:-;2855:7;2881:12;;2874:19;;2803:97;:::o;1805:204:7:-;1722:5;;;;;;;;;;;1708:19;;:10;:19;;;1700:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1989:10:::1;:8;:10::i;:::-;1983:2;:16;;;;:::i;:::-;1973:6;:27;;;;:::i;:::-;1959:11;:41;;;;1805:204:::0;:::o;4680:244:1:-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;923:81:4:-;967:7;993:4;986:11;;923:81;:::o;618:87:3:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2933:116:1:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;1021:158:3:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;705:28:7:-;;;;;;;;;;;;;:::o;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;3455:140::-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8630:128:1:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;7888:206::-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;1473:146:7:-;1581:30;1595:4;1601:2;1605:5;1581:13;:30::i;:::-;1473:146;;;:::o;1036:371:4:-;1130:30;1144:4;1150:2;1154:5;1130:13;:30::i;:::-;1191:1;1175:18;;:4;:18;;;1171:230;;1209:17;1229:5;:3;:5::i;:::-;1209:25;;1248:14;1265:13;:11;:13::i;:::-;1248:30;;1305:9;1296:6;:18;1292:99;;;1358:6;1366:9;1341:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1292:99;1195:206;;1171:230;1036:371;;;:::o;5912:1107:1:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:104::-;5461:7;5490:24;5508:5;5490:24;:::i;:::-;5479:35;;5416:104;;;:::o;5526:142::-;5629:32;5655:5;5629:32;:::i;:::-;5624:3;5617:45;5526:142;;:::o;5674:254::-;5783:4;5821:2;5810:9;5806:18;5798:26;;5834:87;5918:1;5907:9;5903:17;5894:6;5834:87;:::i;:::-;5674:254;;;;:::o;5934:474::-;6002:6;6010;6059:2;6047:9;6038:7;6034:23;6030:32;6027:119;;;6065:79;;:::i;:::-;6027:119;6185:1;6210:53;6255:7;6246:6;6235:9;6231:22;6210:53;:::i;:::-;6200:63;;6156:117;6312:2;6338:53;6383:7;6374:6;6363:9;6359:22;6338:53;:::i;:::-;6328:63;;6283:118;5934:474;;;;;:::o;6414:180::-;6462:77;6459:1;6452:88;6559:4;6556:1;6549:15;6583:4;6580:1;6573:15;6600:320;6644:6;6681:1;6675:4;6671:12;6661:22;;6728:1;6722:4;6718:12;6749:18;6739:81;;6805:4;6797:6;6793:17;6783:27;;6739:81;6867:2;6859:6;6856:14;6836:18;6833:38;6830:84;;6886:18;;:::i;:::-;6830:84;6651:269;6600:320;;;:::o;6926:232::-;7066:34;7062:1;7054:6;7050:14;7043:58;7135:15;7130:2;7122:6;7118:15;7111:40;6926:232;:::o;7164:366::-;7306:3;7327:67;7391:2;7386:3;7327:67;:::i;:::-;7320:74;;7403:93;7492:3;7403:93;:::i;:::-;7521:2;7516:3;7512:12;7505:19;;7164:366;;;:::o;7536:419::-;7702:4;7740:2;7729:9;7725:18;7717:26;;7789:9;7783:4;7779:20;7775:1;7764:9;7760:17;7753:47;7817:131;7943:4;7817:131;:::i;:::-;7809:139;;7536:419;;;:::o;7961:180::-;8009:77;8006:1;7999:88;8106:4;8103:1;8096:15;8130:4;8127:1;8120:15;8147:102;8189:8;8236:5;8233:1;8229:13;8208:34;;8147:102;;;:::o;8255:848::-;8316:5;8323:4;8347:6;8338:15;;8371:5;8362:14;;8385:712;8406:1;8396:8;8393:15;8385:712;;;8501:4;8496:3;8492:14;8486:4;8483:24;8480:50;;;8510:18;;:::i;:::-;8480:50;8560:1;8550:8;8546:16;8543:451;;;8975:4;8968:5;8964:16;8955:25;;8543:451;9025:4;9019;9015:15;9007:23;;9055:32;9078:8;9055:32;:::i;:::-;9043:44;;8385:712;;;8255:848;;;;;;;:::o;9109:1073::-;9163:5;9354:8;9344:40;;9375:1;9366:10;;9377:5;;9344:40;9403:4;9393:36;;9420:1;9411:10;;9422:5;;9393:36;9489:4;9537:1;9532:27;;;;9573:1;9568:191;;;;9482:277;;9532:27;9550:1;9541:10;;9552:5;;;9568:191;9613:3;9603:8;9600:17;9597:43;;;9620:18;;:::i;:::-;9597:43;9669:8;9666:1;9662:16;9653:25;;9704:3;9697:5;9694:14;9691:40;;;9711:18;;:::i;:::-;9691:40;9744:5;;;9482:277;;9868:2;9858:8;9855:16;9849:3;9843:4;9840:13;9836:36;9818:2;9808:8;9805:16;9800:2;9794:4;9791:12;9787:35;9771:111;9768:246;;;9924:8;9918:4;9914:19;9905:28;;9959:3;9952:5;9949:14;9946:40;;;9966:18;;:::i;:::-;9946:40;9999:5;;9768:246;10039:42;10077:3;10067:8;10061:4;10058:1;10039:42;:::i;:::-;10024:57;;;;10113:4;10108:3;10104:14;10097:5;10094:25;10091:51;;;10122:18;;:::i;:::-;10091:51;10171:4;10164:5;10160:16;10151:25;;9109:1073;;;;;;:::o;10188:281::-;10246:5;10270:23;10288:4;10270:23;:::i;:::-;10262:31;;10314:25;10330:8;10314:25;:::i;:::-;10302:37;;10358:104;10395:66;10385:8;10379:4;10358:104;:::i;:::-;10349:113;;10188:281;;;;:::o;10475:410::-;10515:7;10538:20;10556:1;10538:20;:::i;:::-;10533:25;;10572:20;10590:1;10572:20;:::i;:::-;10567:25;;10627:1;10624;10620:9;10649:30;10667:11;10649:30;:::i;:::-;10638:41;;10828:1;10819:7;10815:15;10812:1;10809:22;10789:1;10782:9;10762:83;10739:139;;10858:18;;:::i;:::-;10739:139;10523:362;10475:410;;;;:::o;10891:118::-;10978:24;10996:5;10978:24;:::i;:::-;10973:3;10966:37;10891:118;;:::o;11015:442::-;11164:4;11202:2;11191:9;11187:18;11179:26;;11215:71;11283:1;11272:9;11268:17;11259:6;11215:71;:::i;:::-;11296:72;11364:2;11353:9;11349:18;11340:6;11296:72;:::i;:::-;11378;11446:2;11435:9;11431:18;11422:6;11378:72;:::i;:::-;11015:442;;;;;;:::o;11463:222::-;11556:4;11594:2;11583:9;11579:18;11571:26;;11607:71;11675:1;11664:9;11660:17;11651:6;11607:71;:::i;:::-;11463:222;;;;:::o;11691:332::-;11812:4;11850:2;11839:9;11835:18;11827:26;;11863:71;11931:1;11920:9;11916:17;11907:6;11863:71;:::i;:::-;11944:72;12012:2;12001:9;11997:18;11988:6;11944:72;:::i;:::-;11691:332;;;;;:::o;12029:191::-;12069:3;12088:20;12106:1;12088:20;:::i;:::-;12083:25;;12122:20;12140:1;12122:20;:::i;:::-;12117:25;;12165:1;12162;12158:9;12151:16;;12186:3;12183:1;12180:10;12177:36;;;12193:18;;:::i;:::-;12177:36;12029:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1034400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2895",
								"blockReward()": "2493",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"cap()": "infinite",
								"decimals()": "427",
								"name()": "infinite",
								"owner()": "2530",
								"setBlockReward(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mintMinorReward()": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 774,
									"end": 1172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 865,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 865,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 865,
									"end": 873,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 865,
									"end": 873,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 865,
									"end": 875,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 865,
									"end": 875,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 865,
									"end": 875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 865,
									"end": 875,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 865,
									"end": 875,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 859,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 859,
									"end": 875,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 859,
									"end": 875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 859,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 859,
									"end": 875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 859,
									"end": 875,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 859,
									"end": 875,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 852,
									"end": 855,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 852,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 852,
									"end": 876,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 852,
									"end": 876,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 852,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 852,
									"end": 876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 852,
									"end": 876,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 852,
									"end": 876,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "48616265736861546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "4854430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 760,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 756,
									"end": 765,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 752,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "392E1E2700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 788,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 806,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 752,
									"end": 817,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 833,
									"end": 837,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 716,
									"end": 844,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 958,
									"end": 968,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 941,
									"end": 946,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 941,
									"end": 946,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 941,
									"end": 969,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 980,
									"end": 1023,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 986,
									"end": 991,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1021,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1011,
									"end": 1019,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1011,
									"end": 1019,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1011,
									"end": 1019,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1021,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1011,
									"end": 1021,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1021,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1021,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1011,
									"end": 1021,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1005,
									"end": 1007,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1005,
									"end": 1021,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1005,
									"end": 1021,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1005,
									"end": 1021,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1005,
									"end": 1021,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1005,
									"end": 1021,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1005,
									"end": 1021,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1005,
									"end": 1021,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 993,
									"end": 1001,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "42C1D80"
								},
								{
									"begin": 993,
									"end": 1022,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 993,
									"end": 1022,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 993,
									"end": 1022,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 993,
									"end": 1022,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 993,
									"end": 1022,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 993,
									"end": 1022,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 993,
									"end": 1022,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 980,
									"end": 985,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 980,
									"end": 985,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 980,
									"end": 985,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 980,
									"end": 1023,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 980,
									"end": 1023,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 980,
									"end": 1023,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 980,
									"end": 1023,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 980,
									"end": 1023,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1134,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1124,
									"end": 1132,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1124,
									"end": 1132,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1124,
									"end": 1132,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1134,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1124,
									"end": 1134,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1134,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1124,
									"end": 1134,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1124,
									"end": 1134,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1120,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1118,
									"end": 1134,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1118,
									"end": 1134,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1134,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1134,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1118,
									"end": 1134,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1134,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 1118,
									"end": 1134,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1114,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1135,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1108,
									"end": 1135,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1135,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1135,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1108,
									"end": 1135,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1135,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1108,
									"end": 1135,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1105,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1094,
									"end": 1135,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1135,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1135,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1135,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 1172,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1473,
									"end": 1619,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1473,
									"end": 1619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1595,
									"end": 1599,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1603,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1610,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1581,
									"end": 1594,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1581,
									"end": 1594,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1611,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1581,
									"end": 1611,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1611,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1611,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1581,
									"end": 1611,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1473,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1473,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1473,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1473,
									"end": 1619,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1407,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1036,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1154,
									"end": 1159,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1130,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1130,
									"end": 1143,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1130,
									"end": 1143,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1130,
									"end": 1160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1191,
									"end": 1192,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1175,
									"end": 1193,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1175,
									"end": 1193,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1193,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1175,
									"end": 1193,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1193,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1171,
									"end": 1401,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1171,
									"end": 1401,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1209,
									"end": 1226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1229,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1229,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1229,
									"end": 1232,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1229,
									"end": 1232,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1229,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1229,
									"end": 1234,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1229,
									"end": 1234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1229,
									"end": 1234,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1229,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1209,
									"end": 1234,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1209,
									"end": 1234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1262,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 1278,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1265,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1265,
									"end": 1276,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1265,
									"end": 1276,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 1278,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1265,
									"end": 1278,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 1278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1265,
									"end": 1278,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1265,
									"end": 1278,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1278,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1248,
									"end": 1278,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1305,
									"end": 1314,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1302,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1391,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1292,
									"end": 1391,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1364,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1366,
									"end": 1375,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "PUSH",
									"source": 4,
									"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1341,
									"end": 1376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1341,
									"end": 1376,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1391,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1292,
									"end": 1391,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1195,
									"end": 1401,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1195,
									"end": 1401,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1171,
									"end": 1401,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1171,
									"end": 1401,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1407,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1407,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1407,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1407,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 967,
									"end": 974,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 986,
									"end": 997,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 986,
									"end": 997,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 923,
									"end": 1004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2803,
									"end": 2900,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2803,
									"end": 2900,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2855,
									"end": 2862,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2881,
									"end": 2893,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 2893,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2893,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2893,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2803,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2803,
									"end": 2900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1387,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1207,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1255,
									"end": 1332,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1252,
									"end": 1253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 1333,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1352,
									"end": 1356,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1349,
									"end": 1350,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1342,
									"end": 1357,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1376,
									"end": 1380,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1373,
									"end": 1374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1366,
									"end": 1381,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1393,
									"end": 1495,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1393,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 1487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1475,
									"end": 1488,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1454,
									"end": 1488,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1454,
									"end": 1488,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1393,
									"end": 1495,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1393,
									"end": 1495,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1393,
									"end": 1495,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1393,
									"end": 1495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1599,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1584,
									"end": 1599,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1584,
									"end": 1599,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1617,
									"end": 1622,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1608,
									"end": 1622,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1608,
									"end": 1622,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1652,
									"end": 1653,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1642,
									"end": 1650,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1639,
									"end": 1654,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1747,
									"end": 1751,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1742,
									"end": 1745,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1738,
									"end": 1752,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1729,
									"end": 1753,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1776,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 1726,
									"end": 1776,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1756,
									"end": 1774,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 1756,
									"end": 1774,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1756,
									"end": 1774,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1756,
									"end": 1774,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 1756,
									"end": 1774,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1776,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 1726,
									"end": 1776,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1806,
									"end": 1807,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1796,
									"end": 1804,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1792,
									"end": 1808,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1789,
									"end": 2240,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1789,
									"end": 2240,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 1789,
									"end": 2240,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2225,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2214,
									"end": 2219,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2210,
									"end": 2226,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2201,
									"end": 2226,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2201,
									"end": 2226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1789,
									"end": 2240,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 1789,
									"end": 2240,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2271,
									"end": 2275,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2265,
									"end": 2269,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2261,
									"end": 2276,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2253,
									"end": 2276,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2253,
									"end": 2276,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2301,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 2324,
									"end": 2332,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2301,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 2301,
									"end": 2333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2301,
									"end": 2333,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 2301,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2333,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2289,
									"end": 2333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 1631,
									"end": 2343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1501,
									"end": 2349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2409,
									"end": 2414,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2600,
									"end": 2608,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2630,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 2590,
									"end": 2630,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2621,
									"end": 2622,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2612,
									"end": 2622,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2612,
									"end": 2622,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2623,
									"end": 2628,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 2623,
									"end": 2628,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2590,
									"end": 2630,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 2590,
									"end": 2630,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2649,
									"end": 2653,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2639,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 2639,
									"end": 2675,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2666,
									"end": 2667,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2657,
									"end": 2667,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2657,
									"end": 2667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2673,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 2668,
									"end": 2673,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2639,
									"end": 2675,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 2639,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2739,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2783,
									"end": 2784,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2778,
									"end": 2805,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2778,
									"end": 2805,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2778,
									"end": 2805,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 2778,
									"end": 2805,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2819,
									"end": 2820,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2814,
									"end": 3005,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2814,
									"end": 3005,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2814,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 2814,
									"end": 3005,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2728,
									"end": 3005,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 2728,
									"end": 3005,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2778,
									"end": 2805,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 2778,
									"end": 2805,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2796,
									"end": 2797,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2787,
									"end": 2797,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2787,
									"end": 2797,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2798,
									"end": 2803,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2798,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 2798,
									"end": 2803,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2814,
									"end": 3005,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 2814,
									"end": 3005,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2859,
									"end": 2862,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2849,
									"end": 2857,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2846,
									"end": 2863,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2843,
									"end": 2886,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2843,
									"end": 2886,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 2843,
									"end": 2886,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2866,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 2866,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2866,
									"end": 2884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2866,
									"end": 2884,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 2866,
									"end": 2884,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2843,
									"end": 2886,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 2843,
									"end": 2886,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2915,
									"end": 2923,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 2913,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2908,
									"end": 2924,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2899,
									"end": 2924,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2899,
									"end": 2924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2950,
									"end": 2953,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2943,
									"end": 2948,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2940,
									"end": 2954,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2937,
									"end": 2977,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2937,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 2937,
									"end": 2977,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2957,
									"end": 2975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 2957,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2937,
									"end": 2977,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 2937,
									"end": 2977,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2990,
									"end": 2995,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2990,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 2990,
									"end": 2995,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2728,
									"end": 3005,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 2728,
									"end": 3005,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2728,
									"end": 3005,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3114,
									"end": 3116,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3104,
									"end": 3112,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3101,
									"end": 3117,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3089,
									"end": 3093,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3086,
									"end": 3099,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3082,
									"end": 3118,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3064,
									"end": 3066,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 3054,
									"end": 3062,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3051,
									"end": 3067,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3046,
									"end": 3048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 3040,
									"end": 3044,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3037,
									"end": 3049,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3033,
									"end": 3068,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3017,
									"end": 3128,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3014,
									"end": 3260,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3014,
									"end": 3260,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 3014,
									"end": 3260,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3164,
									"end": 3168,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3160,
									"end": 3179,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 3151,
									"end": 3179,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3151,
									"end": 3179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3205,
									"end": 3208,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3198,
									"end": 3203,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3195,
									"end": 3209,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3192,
									"end": 3232,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3192,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 3192,
									"end": 3232,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3212,
									"end": 3230,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 3212,
									"end": 3230,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 3212,
									"end": 3230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3212,
									"end": 3230,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 3212,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3192,
									"end": 3232,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 3192,
									"end": 3232,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3245,
									"end": 3250,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3245,
									"end": 3250,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3014,
									"end": 3260,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 3014,
									"end": 3260,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3285,
									"end": 3327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 3323,
									"end": 3326,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3313,
									"end": 3321,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3307,
									"end": 3311,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3304,
									"end": 3305,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3285,
									"end": 3327,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3285,
									"end": 3327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3285,
									"end": 3327,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 3285,
									"end": 3327,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3270,
									"end": 3327,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3270,
									"end": 3327,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3270,
									"end": 3327,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3270,
									"end": 3327,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3363,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3354,
									"end": 3357,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3350,
									"end": 3364,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3343,
									"end": 3348,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3340,
									"end": 3365,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3337,
									"end": 3388,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3337,
									"end": 3388,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 3337,
									"end": 3388,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3368,
									"end": 3386,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 3368,
									"end": 3386,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 3368,
									"end": 3386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3368,
									"end": 3386,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 3368,
									"end": 3386,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3337,
									"end": 3388,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 3337,
									"end": 3388,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3421,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3410,
									"end": 3415,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3406,
									"end": 3422,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3397,
									"end": 3422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3397,
									"end": 3422,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2355,
									"end": 3428,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2355,
									"end": 3428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3434,
									"end": 3520,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3434,
									"end": 3520,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3469,
									"end": 3476,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3509,
									"end": 3513,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 3502,
									"end": 3507,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3514,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3487,
									"end": 3514,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3487,
									"end": 3514,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3434,
									"end": 3520,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3434,
									"end": 3520,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3434,
									"end": 3520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3434,
									"end": 3520,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3526,
									"end": 3807,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 3526,
									"end": 3807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3584,
									"end": 3589,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3608,
									"end": 3631,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 3626,
									"end": 3630,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3631,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3608,
									"end": 3631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3631,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 3608,
									"end": 3631,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3631,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3631,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3652,
									"end": 3677,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 3668,
									"end": 3676,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3652,
									"end": 3677,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3652,
									"end": 3677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3652,
									"end": 3677,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 3652,
									"end": 3677,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3640,
									"end": 3677,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3640,
									"end": 3677,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3696,
									"end": 3800,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 3733,
									"end": 3799,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3723,
									"end": 3731,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3717,
									"end": 3721,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3696,
									"end": 3800,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 3696,
									"end": 3800,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3696,
									"end": 3800,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 3696,
									"end": 3800,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3687,
									"end": 3800,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3687,
									"end": 3800,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3526,
									"end": 3807,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3526,
									"end": 3807,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3526,
									"end": 3807,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3526,
									"end": 3807,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3526,
									"end": 3807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3813,
									"end": 4223,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 3813,
									"end": 4223,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3853,
									"end": 3860,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3876,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 3894,
									"end": 3895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3876,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3876,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3876,
									"end": 3896,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 3876,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3871,
									"end": 3896,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3871,
									"end": 3896,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3910,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 3928,
									"end": 3929,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3910,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3910,
									"end": 3930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3910,
									"end": 3930,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 3910,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3905,
									"end": 3930,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3905,
									"end": 3930,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3965,
									"end": 3966,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3962,
									"end": 3963,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3958,
									"end": 3967,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4017,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 4005,
									"end": 4016,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4017,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3987,
									"end": 4017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3987,
									"end": 4017,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 3987,
									"end": 4017,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3976,
									"end": 4017,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3976,
									"end": 4017,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4166,
									"end": 4167,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4157,
									"end": 4164,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4153,
									"end": 4168,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4150,
									"end": 4151,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4147,
									"end": 4169,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4127,
									"end": 4128,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4120,
									"end": 4129,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4100,
									"end": 4183,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4077,
									"end": 4216,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4077,
									"end": 4216,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4196,
									"end": 4214,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 4196,
									"end": 4214,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 4196,
									"end": 4214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4196,
									"end": 4214,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 4196,
									"end": 4214,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4077,
									"end": 4216,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 4077,
									"end": 4216,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3861,
									"end": 4223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3813,
									"end": 4223,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3813,
									"end": 4223,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3813,
									"end": 4223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3813,
									"end": 4223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3813,
									"end": 4223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4328,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 4229,
									"end": 4328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4281,
									"end": 4287,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4315,
									"end": 4320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4309,
									"end": 4321,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4299,
									"end": 4321,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4299,
									"end": 4321,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4328,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4328,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4328,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4334,
									"end": 4514,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 4334,
									"end": 4514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4382,
									"end": 4459,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4379,
									"end": 4380,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4372,
									"end": 4460,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4479,
									"end": 4483,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 4476,
									"end": 4477,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4469,
									"end": 4484,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4503,
									"end": 4507,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4500,
									"end": 4501,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4508,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4700,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 4520,
									"end": 4700,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4568,
									"end": 4645,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4565,
									"end": 4566,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4558,
									"end": 4646,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4665,
									"end": 4669,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 4662,
									"end": 4663,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4655,
									"end": 4670,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4689,
									"end": 4693,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4686,
									"end": 4687,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4679,
									"end": 4694,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 5026,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 4706,
									"end": 5026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4750,
									"end": 4756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4788,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4781,
									"end": 4785,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4777,
									"end": 4789,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4767,
									"end": 4789,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4767,
									"end": 4789,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4834,
									"end": 4835,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4828,
									"end": 4832,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4824,
									"end": 4836,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4855,
									"end": 4873,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4926,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 4845,
									"end": 4926,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4911,
									"end": 4915,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 4903,
									"end": 4909,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4899,
									"end": 4916,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4889,
									"end": 4916,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4889,
									"end": 4916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4845,
									"end": 4926,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 4845,
									"end": 4926,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4973,
									"end": 4975,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4965,
									"end": 4971,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4962,
									"end": 4976,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4942,
									"end": 4960,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4939,
									"end": 4977,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4936,
									"end": 5020,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 4936,
									"end": 5020,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4992,
									"end": 5010,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 4992,
									"end": 5010,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 4992,
									"end": 5010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4992,
									"end": 5010,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 4992,
									"end": 5010,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4936,
									"end": 5020,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 4936,
									"end": 5020,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4757,
									"end": 5026,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 5026,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 5026,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 5026,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4706,
									"end": 5026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5173,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 5032,
									"end": 5173,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5081,
									"end": 5085,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5104,
									"end": 5107,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5096,
									"end": 5107,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5096,
									"end": 5107,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5127,
									"end": 5130,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5124,
									"end": 5125,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5117,
									"end": 5131,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5165,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5158,
									"end": 5159,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5148,
									"end": 5166,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 5140,
									"end": 5166,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5140,
									"end": 5166,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5173,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5173,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5173,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5173,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5179,
									"end": 5272,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 5179,
									"end": 5272,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5263,
									"end": 5265,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5258,
									"end": 5260,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5251,
									"end": 5256,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5247,
									"end": 5261,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5243,
									"end": 5266,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5266,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5233,
									"end": 5266,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5179,
									"end": 5272,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5179,
									"end": 5272,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5179,
									"end": 5272,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5179,
									"end": 5272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5278,
									"end": 5385,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 5278,
									"end": 5385,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5322,
									"end": 5330,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5372,
									"end": 5377,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5370,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5362,
									"end": 5378,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5341,
									"end": 5378,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5341,
									"end": 5378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5278,
									"end": 5385,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5278,
									"end": 5385,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5278,
									"end": 5385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5278,
									"end": 5385,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5278,
									"end": 5385,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5391,
									"end": 5784,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 5391,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5460,
									"end": 5466,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5510,
									"end": 5511,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5498,
									"end": 5508,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5494,
									"end": 5512,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5533,
									"end": 5630,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5552,
									"end": 5561,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5533,
									"end": 5630,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 5533,
									"end": 5630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5533,
									"end": 5630,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 5533,
									"end": 5630,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5651,
									"end": 5690,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 5681,
									"end": 5689,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5651,
									"end": 5690,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 5651,
									"end": 5690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5651,
									"end": 5690,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 5651,
									"end": 5690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5639,
									"end": 5690,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 5639,
									"end": 5690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5723,
									"end": 5727,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5728,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5712,
									"end": 5717,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5708,
									"end": 5729,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5699,
									"end": 5729,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5699,
									"end": 5729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 5776,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5762,
									"end": 5770,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5758,
									"end": 5777,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5751,
									"end": 5756,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5748,
									"end": 5778,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5738,
									"end": 5778,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5738,
									"end": 5778,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5467,
									"end": 5784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5467,
									"end": 5784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5391,
									"end": 5784,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5391,
									"end": 5784,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5391,
									"end": 5784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5391,
									"end": 5784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5391,
									"end": 5784,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5391,
									"end": 5784,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5790,
									"end": 5850,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 5790,
									"end": 5850,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5818,
									"end": 5821,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5839,
									"end": 5844,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5832,
									"end": 5844,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5832,
									"end": 5844,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5790,
									"end": 5850,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5790,
									"end": 5850,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5790,
									"end": 5850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5790,
									"end": 5850,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5856,
									"end": 5998,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 5856,
									"end": 5998,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5906,
									"end": 5915,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5939,
									"end": 5992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 5957,
									"end": 5991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 5966,
									"end": 5990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 5984,
									"end": 5989,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5966,
									"end": 5990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 5966,
									"end": 5990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5966,
									"end": 5990,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 5966,
									"end": 5990,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5957,
									"end": 5991,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 5957,
									"end": 5991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5957,
									"end": 5991,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 5957,
									"end": 5991,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5939,
									"end": 5992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 5939,
									"end": 5992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5939,
									"end": 5992,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 5939,
									"end": 5992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5926,
									"end": 5992,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5926,
									"end": 5992,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5856,
									"end": 5998,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5856,
									"end": 5998,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5856,
									"end": 5998,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5856,
									"end": 5998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6079,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 6004,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6047,
									"end": 6050,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6068,
									"end": 6073,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6061,
									"end": 6073,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6061,
									"end": 6073,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6079,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6079,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6004,
									"end": 6079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6085,
									"end": 6354,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 6085,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6195,
									"end": 6234,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 6226,
									"end": 6233,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6195,
									"end": 6234,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 6195,
									"end": 6234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6195,
									"end": 6234,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 6195,
									"end": 6234,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6256,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6305,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 6329,
									"end": 6345,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6305,
									"end": 6346,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 6305,
									"end": 6346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6305,
									"end": 6346,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 6305,
									"end": 6346,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6297,
									"end": 6303,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6290,
									"end": 6294,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6284,
									"end": 6295,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 6256,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 6256,
									"end": 6347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6256,
									"end": 6347,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 6256,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6250,
									"end": 6254,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6243,
									"end": 6348,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6161,
									"end": 6354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6085,
									"end": 6354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6085,
									"end": 6354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6085,
									"end": 6354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6085,
									"end": 6354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6360,
									"end": 6433,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 6360,
									"end": 6433,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6405,
									"end": 6408,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6426,
									"end": 6427,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6419,
									"end": 6427,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6419,
									"end": 6427,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6360,
									"end": 6433,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6360,
									"end": 6433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6439,
									"end": 6628,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 6439,
									"end": 6628,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6548,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 6516,
									"end": 6548,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 6516,
									"end": 6548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6516,
									"end": 6548,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 6516,
									"end": 6548,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6557,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 6615,
									"end": 6621,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6607,
									"end": 6613,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6601,
									"end": 6605,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6557,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 6557,
									"end": 6622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6557,
									"end": 6622,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 6557,
									"end": 6622,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6492,
									"end": 6628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6439,
									"end": 6628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6439,
									"end": 6628,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6439,
									"end": 6628,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6634,
									"end": 6820,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 6634,
									"end": 6820,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6711,
									"end": 6714,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6701,
									"end": 6715,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6765,
									"end": 6804,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 6802,
									"end": 6803,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6795,
									"end": 6800,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6765,
									"end": 6804,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 6765,
									"end": 6804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6765,
									"end": 6804,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 6765,
									"end": 6804,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6738,
									"end": 6739,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6731,
									"end": 6736,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6727,
									"end": 6740,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6718,
									"end": 6740,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6718,
									"end": 6740,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 6694,
									"end": 6814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6634,
									"end": 6820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6634,
									"end": 6820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6634,
									"end": 6820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6826,
									"end": 7369,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 6826,
									"end": 7369,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6927,
									"end": 6929,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6922,
									"end": 6925,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6919,
									"end": 6930,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6916,
									"end": 7362,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6916,
									"end": 7362,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 6916,
									"end": 7362,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6961,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 6993,
									"end": 6998,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6961,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 6961,
									"end": 6999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6961,
									"end": 6999,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 6961,
									"end": 6999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7045,
									"end": 7074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 7063,
									"end": 7073,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7045,
									"end": 7074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 7045,
									"end": 7074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7045,
									"end": 7074,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 7045,
									"end": 7074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7035,
									"end": 7043,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7031,
									"end": 7075,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7228,
									"end": 7230,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7216,
									"end": 7226,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7213,
									"end": 7231,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7210,
									"end": 7259,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7210,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 7210,
									"end": 7259,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7249,
									"end": 7257,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7234,
									"end": 7257,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7234,
									"end": 7257,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7210,
									"end": 7259,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 7210,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7272,
									"end": 7352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 7328,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 7346,
									"end": 7349,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7328,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 7328,
									"end": 7350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7328,
									"end": 7350,
									"name": "tag",
									"source": 8,
									"value": "193"
								},
								{
									"begin": 7328,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7318,
									"end": 7326,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7314,
									"end": 7351,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7301,
									"end": 7312,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7272,
									"end": 7352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 7272,
									"end": 7352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7272,
									"end": 7352,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 7272,
									"end": 7352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6931,
									"end": 7362,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6931,
									"end": 7362,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6916,
									"end": 7362,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 6916,
									"end": 7362,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6826,
									"end": 7369,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6826,
									"end": 7369,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6826,
									"end": 7369,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6826,
									"end": 7369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7375,
									"end": 7492,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 7375,
									"end": 7492,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7429,
									"end": 7437,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7479,
									"end": 7484,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7473,
									"end": 7477,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7469,
									"end": 7485,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 7448,
									"end": 7485,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7448,
									"end": 7485,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7375,
									"end": 7492,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7375,
									"end": 7492,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7375,
									"end": 7492,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7375,
									"end": 7492,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7375,
									"end": 7492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7498,
									"end": 7667,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 7498,
									"end": 7667,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7542,
									"end": 7548,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7575,
									"end": 7626,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 7623,
									"end": 7624,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7619,
									"end": 7625,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7608,
									"end": 7609,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 7604,
									"end": 7617,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7575,
									"end": 7626,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 7575,
									"end": 7626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7575,
									"end": 7626,
									"name": "tag",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 7575,
									"end": 7626,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7571,
									"end": 7627,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7650,
									"end": 7654,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7646,
									"end": 7661,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7636,
									"end": 7661,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7636,
									"end": 7661,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7549,
									"end": 7667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7498,
									"end": 7667,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7498,
									"end": 7667,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7498,
									"end": 7667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7498,
									"end": 7667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7498,
									"end": 7667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7967,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 7672,
									"end": 7967,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7748,
									"end": 7752,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7894,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 7919,
									"end": 7922,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7913,
									"end": 7917,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7894,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 7894,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7894,
									"end": 7923,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 7894,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7886,
									"end": 7923,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7886,
									"end": 7923,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7956,
									"end": 7959,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7953,
									"end": 7954,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7949,
									"end": 7960,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7943,
									"end": 7947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7940,
									"end": 7961,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7932,
									"end": 7961,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7932,
									"end": 7961,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7967,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7967,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7967,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7967,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7967,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7972,
									"end": 9367,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 7972,
									"end": 9367,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8089,
									"end": 8126,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 8122,
									"end": 8125,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8089,
									"end": 8126,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 8089,
									"end": 8126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8089,
									"end": 8126,
									"name": "tag",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 8089,
									"end": 8126,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8191,
									"end": 8209,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8183,
									"end": 8189,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8180,
									"end": 8210,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8177,
									"end": 8233,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8177,
									"end": 8233,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 8177,
									"end": 8233,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8213,
									"end": 8231,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 8213,
									"end": 8231,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 8213,
									"end": 8231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8213,
									"end": 8231,
									"name": "tag",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 8213,
									"end": 8231,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8177,
									"end": 8233,
									"name": "tag",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 8177,
									"end": 8233,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8257,
									"end": 8295,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 8289,
									"end": 8293,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8283,
									"end": 8294,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 8257,
									"end": 8295,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 8257,
									"end": 8295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8257,
									"end": 8295,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 8257,
									"end": 8295,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8342,
									"end": 8409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 8402,
									"end": 8408,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8394,
									"end": 8400,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8388,
									"end": 8392,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8342,
									"end": 8409,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 8342,
									"end": 8409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8342,
									"end": 8409,
									"name": "tag",
									"source": 8,
									"value": "204"
								},
								{
									"begin": 8342,
									"end": 8409,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8436,
									"end": 8437,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8460,
									"end": 8464,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8447,
									"end": 8464,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8447,
									"end": 8464,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8492,
									"end": 8494,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8484,
									"end": 8490,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8481,
									"end": 8495,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8509,
									"end": 8510,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8504,
									"end": 9122,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8504,
									"end": 9122,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8504,
									"end": 9122,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 8504,
									"end": 9122,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9166,
									"end": 9167,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9183,
									"end": 9189,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9180,
									"end": 9257,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9180,
									"end": 9257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 9180,
									"end": 9257,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9232,
									"end": 9241,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9227,
									"end": 9230,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 9223,
									"end": 9242,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9217,
									"end": 9243,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 9208,
									"end": 9243,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9208,
									"end": 9243,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9180,
									"end": 9257,
									"name": "tag",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 9180,
									"end": 9257,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9283,
									"end": 9350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 9343,
									"end": 9349,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9336,
									"end": 9341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9283,
									"end": 9350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 9283,
									"end": 9350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9283,
									"end": 9350,
									"name": "tag",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 9283,
									"end": 9350,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9277,
									"end": 9281,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9270,
									"end": 9351,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 9139,
									"end": 9361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8474,
									"end": 9361,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 8474,
									"end": 9361,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8504,
									"end": 9122,
									"name": "tag",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 8504,
									"end": 9122,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8556,
									"end": 8560,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8552,
									"end": 8561,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8544,
									"end": 8550,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8540,
									"end": 8562,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8590,
									"end": 8627,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 8622,
									"end": 8626,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8590,
									"end": 8627,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 8590,
									"end": 8627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8590,
									"end": 8627,
									"name": "tag",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 8590,
									"end": 8627,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8649,
									"end": 8650,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8677,
									"end": 8684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8674,
									"end": 8675,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8671,
									"end": 8685,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8756,
									"end": 8765,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8751,
									"end": 8754,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8747,
									"end": 8766,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8741,
									"end": 8767,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8733,
									"end": 8739,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8726,
									"end": 8768,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8807,
									"end": 8808,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8799,
									"end": 8805,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8795,
									"end": 8809,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8854,
									"end": 8856,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8843,
									"end": 8852,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8839,
									"end": 8857,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8826,
									"end": 8857,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8826,
									"end": 8857,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8700,
									"end": 8704,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8697,
									"end": 8698,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8693,
									"end": 8705,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8688,
									"end": 8705,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8688,
									"end": 8705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "tag",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 8663,
									"end": 8871,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8899,
									"end": 8905,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8890,
									"end": 8897,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8887,
									"end": 8906,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8884,
									"end": 9063,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8884,
									"end": 9063,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 8884,
									"end": 9063,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8957,
									"end": 8966,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8952,
									"end": 8955,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8948,
									"end": 8967,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8942,
									"end": 8968,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 9042,
									"end": 9046,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 9034,
									"end": 9040,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 9030,
									"end": 9047,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9019,
									"end": 9028,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 9000,
									"end": 9048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "tag",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 9000,
									"end": 9048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8992,
									"end": 8998,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8985,
									"end": 9049,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8907,
									"end": 9063,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8884,
									"end": 9063,
									"name": "tag",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 8884,
									"end": 9063,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9109,
									"end": 9110,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 9105,
									"end": 9106,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 9097,
									"end": 9103,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 9093,
									"end": 9107,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 9089,
									"end": 9111,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 9076,
									"end": 9112,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8511,
									"end": 9122,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8511,
									"end": 9122,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8511,
									"end": 9122,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8474,
									"end": 9361,
									"name": "tag",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 8474,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8474,
									"end": 9361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8064,
									"end": 9367,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8064,
									"end": 9367,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8064,
									"end": 9367,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7972,
									"end": 9367,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7972,
									"end": 9367,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7972,
									"end": 9367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9373,
									"end": 9458,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 9373,
									"end": 9458,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9418,
									"end": 9425,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9447,
									"end": 9452,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9436,
									"end": 9452,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9436,
									"end": 9452,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9373,
									"end": 9458,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9373,
									"end": 9458,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9373,
									"end": 9458,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9373,
									"end": 9458,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9464,
									"end": 9622,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 9464,
									"end": 9622,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9522,
									"end": 9531,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9555,
									"end": 9616,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 9573,
									"end": 9615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "218"
								},
								{
									"begin": 9582,
									"end": 9614,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 9608,
									"end": 9613,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9582,
									"end": 9614,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 9582,
									"end": 9614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9582,
									"end": 9614,
									"name": "tag",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 9582,
									"end": 9614,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9573,
									"end": 9615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 9573,
									"end": 9615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9573,
									"end": 9615,
									"name": "tag",
									"source": 8,
									"value": "218"
								},
								{
									"begin": 9573,
									"end": 9615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9555,
									"end": 9616,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 9555,
									"end": 9616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9555,
									"end": 9616,
									"name": "tag",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 9555,
									"end": 9616,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9542,
									"end": 9616,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9542,
									"end": 9616,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9464,
									"end": 9622,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9464,
									"end": 9622,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9464,
									"end": 9622,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9464,
									"end": 9622,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9628,
									"end": 9775,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 9628,
									"end": 9775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9723,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "221"
								},
								{
									"begin": 9762,
									"end": 9767,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9723,
									"end": 9768,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 9723,
									"end": 9768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9723,
									"end": 9768,
									"name": "tag",
									"source": 8,
									"value": "221"
								},
								{
									"begin": 9723,
									"end": 9768,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9718,
									"end": 9721,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9711,
									"end": 9769,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9628,
									"end": 9775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9628,
									"end": 9775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9628,
									"end": 9775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9781,
									"end": 10019,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9781,
									"end": 10019,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9882,
									"end": 9886,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9920,
									"end": 9922,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9909,
									"end": 9918,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9905,
									"end": 9923,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9897,
									"end": 9923,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9897,
									"end": 9923,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9933,
									"end": 10012,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "223"
								},
								{
									"begin": 10009,
									"end": 10010,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9998,
									"end": 10007,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9994,
									"end": 10011,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9985,
									"end": 9991,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9933,
									"end": 10012,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 9933,
									"end": 10012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9933,
									"end": 10012,
									"name": "tag",
									"source": 8,
									"value": "223"
								},
								{
									"begin": 9933,
									"end": 10012,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9781,
									"end": 10019,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9781,
									"end": 10019,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9781,
									"end": 10019,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9781,
									"end": 10019,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9781,
									"end": 10019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10025,
									"end": 10151,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 10025,
									"end": 10151,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10062,
									"end": 10069,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10102,
									"end": 10144,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10095,
									"end": 10100,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10091,
									"end": 10145,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 10080,
									"end": 10145,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10080,
									"end": 10145,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10025,
									"end": 10151,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10025,
									"end": 10151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10025,
									"end": 10151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10025,
									"end": 10151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10157,
									"end": 10253,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 10157,
									"end": 10253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10194,
									"end": 10201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10223,
									"end": 10247,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "226"
								},
								{
									"begin": 10241,
									"end": 10246,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10223,
									"end": 10247,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 10223,
									"end": 10247,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10223,
									"end": 10247,
									"name": "tag",
									"source": 8,
									"value": "226"
								},
								{
									"begin": 10223,
									"end": 10247,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10212,
									"end": 10247,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10212,
									"end": 10247,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10157,
									"end": 10253,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10157,
									"end": 10253,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10157,
									"end": 10253,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10157,
									"end": 10253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10259,
									"end": 10377,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 10259,
									"end": 10377,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10346,
									"end": 10370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "228"
								},
								{
									"begin": 10364,
									"end": 10369,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10346,
									"end": 10370,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 10346,
									"end": 10370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10346,
									"end": 10370,
									"name": "tag",
									"source": 8,
									"value": "228"
								},
								{
									"begin": 10346,
									"end": 10370,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10341,
									"end": 10344,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10334,
									"end": 10371,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10259,
									"end": 10377,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10259,
									"end": 10377,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10259,
									"end": 10377,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10383,
									"end": 10605,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 10383,
									"end": 10605,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10476,
									"end": 10480,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10514,
									"end": 10516,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10503,
									"end": 10512,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10499,
									"end": 10517,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10491,
									"end": 10517,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10491,
									"end": 10517,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10527,
									"end": 10598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "230"
								},
								{
									"begin": 10595,
									"end": 10596,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10584,
									"end": 10593,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10580,
									"end": 10597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10571,
									"end": 10577,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10527,
									"end": 10598,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 10527,
									"end": 10598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10527,
									"end": 10598,
									"name": "tag",
									"source": 8,
									"value": "230"
								},
								{
									"begin": 10527,
									"end": 10598,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10383,
									"end": 10605,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10383,
									"end": 10605,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10383,
									"end": 10605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10383,
									"end": 10605,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10383,
									"end": 10605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10611,
									"end": 10729,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 10611,
									"end": 10729,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10698,
									"end": 10722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "232"
								},
								{
									"begin": 10716,
									"end": 10721,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10698,
									"end": 10722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 10698,
									"end": 10722,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10698,
									"end": 10722,
									"name": "tag",
									"source": 8,
									"value": "232"
								},
								{
									"begin": 10698,
									"end": 10722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10693,
									"end": 10696,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10686,
									"end": 10723,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10611,
									"end": 10729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10611,
									"end": 10729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10611,
									"end": 10729,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10735,
									"end": 11067,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 10735,
									"end": 11067,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10856,
									"end": 10860,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10894,
									"end": 10896,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10883,
									"end": 10892,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10879,
									"end": 10897,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10871,
									"end": 10897,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10871,
									"end": 10897,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10907,
									"end": 10978,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "234"
								},
								{
									"begin": 10975,
									"end": 10976,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10964,
									"end": 10973,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10960,
									"end": 10977,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10951,
									"end": 10957,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 10907,
									"end": 10978,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 10907,
									"end": 10978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10907,
									"end": 10978,
									"name": "tag",
									"source": 8,
									"value": "234"
								},
								{
									"begin": 10907,
									"end": 10978,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10988,
									"end": 11060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "235"
								},
								{
									"begin": 11056,
									"end": 11058,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11045,
									"end": 11054,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11041,
									"end": 11059,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11032,
									"end": 11038,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10988,
									"end": 11060,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 10988,
									"end": 11060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10988,
									"end": 11060,
									"name": "tag",
									"source": 8,
									"value": "235"
								},
								{
									"begin": 10988,
									"end": 11060,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10735,
									"end": 11067,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 10735,
									"end": 11067,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10735,
									"end": 11067,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10735,
									"end": 11067,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10735,
									"end": 11067,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10735,
									"end": 11067,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11073,
									"end": 11264,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 11073,
									"end": 11264,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11113,
									"end": 11116,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11132,
									"end": 11152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "237"
								},
								{
									"begin": 11150,
									"end": 11151,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11132,
									"end": 11152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 11132,
									"end": 11152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11132,
									"end": 11152,
									"name": "tag",
									"source": 8,
									"value": "237"
								},
								{
									"begin": 11132,
									"end": 11152,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11127,
									"end": 11152,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11127,
									"end": 11152,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11166,
									"end": 11186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "238"
								},
								{
									"begin": 11184,
									"end": 11185,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11166,
									"end": 11186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 11166,
									"end": 11186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11166,
									"end": 11186,
									"name": "tag",
									"source": 8,
									"value": "238"
								},
								{
									"begin": 11166,
									"end": 11186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11186,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11161,
									"end": 11186,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11209,
									"end": 11210,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11206,
									"end": 11207,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11202,
									"end": 11211,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11195,
									"end": 11211,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11195,
									"end": 11211,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11230,
									"end": 11233,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 11227,
									"end": 11228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11224,
									"end": 11234,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 11221,
									"end": 11257,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 11221,
									"end": 11257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "239"
								},
								{
									"begin": 11221,
									"end": 11257,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 11237,
									"end": 11255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "240"
								},
								{
									"begin": 11237,
									"end": 11255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 11237,
									"end": 11255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11237,
									"end": 11255,
									"name": "tag",
									"source": 8,
									"value": "240"
								},
								{
									"begin": 11237,
									"end": 11255,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11221,
									"end": 11257,
									"name": "tag",
									"source": 8,
									"value": "239"
								},
								{
									"begin": 11221,
									"end": 11257,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11073,
									"end": 11264,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11073,
									"end": 11264,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11073,
									"end": 11264,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11073,
									"end": 11264,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11073,
									"end": 11264,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11270,
									"end": 11712,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 11270,
									"end": 11712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11419,
									"end": 11423,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11457,
									"end": 11459,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 11446,
									"end": 11455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11442,
									"end": 11460,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11434,
									"end": 11460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11434,
									"end": 11460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11470,
									"end": 11541,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "242"
								},
								{
									"begin": 11538,
									"end": 11539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11527,
									"end": 11536,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11523,
									"end": 11540,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11514,
									"end": 11520,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 11470,
									"end": 11541,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 11470,
									"end": 11541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11470,
									"end": 11541,
									"name": "tag",
									"source": 8,
									"value": "242"
								},
								{
									"begin": 11470,
									"end": 11541,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11551,
									"end": 11623,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "243"
								},
								{
									"begin": 11619,
									"end": 11621,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11608,
									"end": 11617,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11604,
									"end": 11622,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11595,
									"end": 11601,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 11551,
									"end": 11623,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 11551,
									"end": 11623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11551,
									"end": 11623,
									"name": "tag",
									"source": 8,
									"value": "243"
								},
								{
									"begin": 11551,
									"end": 11623,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11633,
									"end": 11705,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "244"
								},
								{
									"begin": 11701,
									"end": 11703,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 11690,
									"end": 11699,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11686,
									"end": 11704,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11677,
									"end": 11683,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11633,
									"end": 11705,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 11633,
									"end": 11705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11633,
									"end": 11705,
									"name": "tag",
									"source": 8,
									"value": "244"
								},
								{
									"begin": 11633,
									"end": 11705,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11270,
									"end": 11712,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 11270,
									"end": 11712,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 11270,
									"end": 11712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11270,
									"end": 11712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11270,
									"end": 11712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11270,
									"end": 11712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11270,
									"end": 11712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11718,
									"end": 11940,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 11718,
									"end": 11940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11811,
									"end": 11815,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11849,
									"end": 11851,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11838,
									"end": 11847,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11834,
									"end": 11852,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11826,
									"end": 11852,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11826,
									"end": 11852,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11862,
									"end": 11933,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "246"
								},
								{
									"begin": 11930,
									"end": 11931,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11919,
									"end": 11928,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11915,
									"end": 11932,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11906,
									"end": 11912,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11862,
									"end": 11933,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 11862,
									"end": 11933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11862,
									"end": 11933,
									"name": "tag",
									"source": 8,
									"value": "246"
								},
								{
									"begin": 11862,
									"end": 11933,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11718,
									"end": 11940,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11718,
									"end": 11940,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11718,
									"end": 11940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11718,
									"end": 11940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11718,
									"end": 11940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "784"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 2012,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220efedf29515cf1072c9b523c535f85b2b895593aee1f2836af5b2565712c188d364736f6c634300081e0033",
									".code": [
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "355274EA"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "355274EA"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "1A18E707"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "AC168A1"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 2012,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 740,
											"end": 763,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 740,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1805,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 705,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 705,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 763,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 740,
											"end": 763,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 740,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1727,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1718,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1727,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1727,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1727,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1700,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1700,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1989,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1989,
											"end": 1999,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 1999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1989,
											"end": 1999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1983,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1983,
											"end": 1999,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1983,
											"end": 1999,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1983,
											"end": 1999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 1979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1973,
											"end": 2000,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1973,
											"end": 2000,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1973,
											"end": 2000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1959,
											"end": 2000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2000,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 2009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "784"
										},
										{
											"begin": 986,
											"end": 997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 986,
											"end": 997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 705,
											"end": 733,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 705,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1619,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1473,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1581,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1595,
											"end": 1599,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1581,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1581,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1581,
											"end": 1611,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1581,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1473,
											"end": 1619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1473,
											"end": 1619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1473,
											"end": 1619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1473,
											"end": 1619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1144,
											"end": 1148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1154,
											"end": 1159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1130,
											"end": 1160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1179,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1171,
											"end": 1401,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1229,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1229,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1265,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1265,
											"end": 1278,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1265,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1278,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1314,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH",
											"source": 4,
											"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1341,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1376,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1292,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1401,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1171,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1407,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5520,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5416,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5461,
											"end": 5468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5508,
											"end": 5513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5490,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5520,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5520,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5668,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5526,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5629,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5655,
											"end": 5660,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5629,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 5629,
											"end": 5661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5629,
											"end": 5661,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5629,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5624,
											"end": 5627,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5617,
											"end": 5662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5928,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5674,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5823,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5810,
											"end": 5819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5918,
											"end": 5919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5916,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5920,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 5900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5834,
											"end": 5921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5921,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5834,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5928,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5928,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 6408,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 5934,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6008,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6061,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6047,
											"end": 6056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6045,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6057,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6027,
											"end": 6146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6065,
											"end": 6144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6065,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6146,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6027,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6255,
											"end": 6262,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6252,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6210,
											"end": 6263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6263,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6210,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6263,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6156,
											"end": 6273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 6383,
											"end": 6390,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6338,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6338,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6338,
											"end": 6391,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 6338,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 6408,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 6408,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 6408,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 6408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 6408,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5934,
											"end": 6408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6414,
											"end": 6594,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 6414,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6462,
											"end": 6539,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6459,
											"end": 6460,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6556,
											"end": 6557,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6549,
											"end": 6564,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6587,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6920,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6600,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6675,
											"end": 6679,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6671,
											"end": 6683,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6661,
											"end": 6683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6661,
											"end": 6683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6729,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6722,
											"end": 6726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6730,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6739,
											"end": 6820,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6805,
											"end": 6809,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6797,
											"end": 6803,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6793,
											"end": 6810,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6783,
											"end": 6810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6739,
											"end": 6820,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 6739,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6867,
											"end": 6869,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6859,
											"end": 6865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6856,
											"end": 6870,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 6871,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 6830,
											"end": 6914,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 6886,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6914,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 6830,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6651,
											"end": 6920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6920,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6926,
											"end": 7158,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6926,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7066,
											"end": 7100,
											"name": "PUSH",
											"source": 8,
											"value": "536F72727920796F75206D75737420626520616E206F776E657220746F206163"
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7060,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7050,
											"end": 7064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7043,
											"end": 7101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "PUSH",
											"source": 8,
											"value": "636573732074686973206F6E6500000000000000000000000000000000000000"
										},
										{
											"begin": 7130,
											"end": 7132,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7128,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7133,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7151,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6926,
											"end": 7158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6926,
											"end": 7158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7530,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 7164,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7391,
											"end": 7393,
											"name": "PUSH",
											"source": 8,
											"value": "2D"
										},
										{
											"begin": 7386,
											"end": 7389,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7327,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 7327,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7327,
											"end": 7394,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7327,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7394,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7320,
											"end": 7394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7492,
											"end": 7495,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 7403,
											"end": 7496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7496,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7403,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7523,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7512,
											"end": 7524,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7164,
											"end": 7530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7955,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7536,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7742,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7738,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7789,
											"end": 7798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7779,
											"end": 7799,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7775,
											"end": 7776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7773,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7760,
											"end": 7777,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7753,
											"end": 7800,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 7817,
											"end": 7948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7817,
											"end": 7948,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7817,
											"end": 7948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7809,
											"end": 7948,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7809,
											"end": 7948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7955,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7961,
											"end": 8141,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7961,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8009,
											"end": 8086,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8006,
											"end": 8007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8087,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8106,
											"end": 8110,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8096,
											"end": 8111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8134,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8120,
											"end": 8135,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8249,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 8147,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8234,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8229,
											"end": 8242,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8249,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8316,
											"end": 8321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8338,
											"end": 8353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8338,
											"end": 8353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8376,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8396,
											"end": 8404,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8393,
											"end": 8408,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8501,
											"end": 8505,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8496,
											"end": 8499,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8492,
											"end": 8506,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8486,
											"end": 8490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8483,
											"end": 8507,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8530,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8480,
											"end": 8530,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 8510,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8530,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8480,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8561,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8550,
											"end": 8558,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8546,
											"end": 8562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8543,
											"end": 8994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8975,
											"end": 8979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8964,
											"end": 8980,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8955,
											"end": 8980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8955,
											"end": 8980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8543,
											"end": 8994,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8543,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9025,
											"end": 9029,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9030,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9007,
											"end": 9030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9007,
											"end": 9030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9078,
											"end": 9086,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 9055,
											"end": 9087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9087,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 9055,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9043,
											"end": 9087,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9043,
											"end": 9087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8385,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 9103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9362,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9366,
											"end": 9376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9366,
											"end": 9376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9377,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9377,
											"end": 9382,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 9344,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9403,
											"end": 9407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 9393,
											"end": 9429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9421,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9411,
											"end": 9421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9411,
											"end": 9421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9422,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9422,
											"end": 9427,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9429,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 9393,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9489,
											"end": 9493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9538,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9532,
											"end": 9559,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9532,
											"end": 9559,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9532,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 9532,
											"end": 9559,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9573,
											"end": 9574,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9568,
											"end": 9759,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9568,
											"end": 9759,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9568,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9568,
											"end": 9759,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9482,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9482,
											"end": 9759,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9532,
											"end": 9559,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 9532,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9550,
											"end": 9551,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9541,
											"end": 9551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9541,
											"end": 9551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9552,
											"end": 9557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9552,
											"end": 9557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9552,
											"end": 9557,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9568,
											"end": 9759,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 9568,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9613,
											"end": 9616,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 9603,
											"end": 9611,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9600,
											"end": 9617,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9640,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9597,
											"end": 9640,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 9620,
											"end": 9638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9597,
											"end": 9640,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 9597,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9669,
											"end": 9677,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9666,
											"end": 9667,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9662,
											"end": 9678,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9653,
											"end": 9678,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9653,
											"end": 9678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9704,
											"end": 9707,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9697,
											"end": 9702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9708,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9731,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 9691,
											"end": 9731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9711,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9711,
											"end": 9729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 9711,
											"end": 9729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9711,
											"end": 9729,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 9711,
											"end": 9729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9691,
											"end": 9731,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 9691,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9744,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9744,
											"end": 9749,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9482,
											"end": 9759,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 9482,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9482,
											"end": 9759,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9868,
											"end": 9870,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9858,
											"end": 9866,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9871,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9849,
											"end": 9852,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 9843,
											"end": 9847,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9853,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9836,
											"end": 9872,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9818,
											"end": 9820,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 9808,
											"end": 9816,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9805,
											"end": 9821,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9800,
											"end": 9802,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 9794,
											"end": 9798,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9791,
											"end": 9803,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9822,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9771,
											"end": 9882,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9768,
											"end": 10014,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9768,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 9768,
											"end": 10014,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9924,
											"end": 9932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9918,
											"end": 9922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9914,
											"end": 9933,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 9933,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 9933,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9959,
											"end": 9962,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 9957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 9963,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 9986,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 9946,
											"end": 9986,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 9966,
											"end": 9984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9946,
											"end": 9986,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 9946,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9768,
											"end": 10014,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 9768,
											"end": 10014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10039,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 10077,
											"end": 10080,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10067,
											"end": 10075,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10061,
											"end": 10065,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10058,
											"end": 10059,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10039,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 10039,
											"end": 10081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10039,
											"end": 10081,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 10039,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10081,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10113,
											"end": 10117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10108,
											"end": 10111,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10104,
											"end": 10118,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10097,
											"end": 10102,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10094,
											"end": 10119,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10091,
											"end": 10142,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10091,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10091,
											"end": 10142,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 10122,
											"end": 10140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10122,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10091,
											"end": 10142,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 10091,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10169,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10160,
											"end": 10176,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 10182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9109,
											"end": 10182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10469,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 10188,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 10288,
											"end": 10292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10270,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 10270,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10270,
											"end": 10293,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 10270,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10262,
											"end": 10293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10262,
											"end": 10293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 10330,
											"end": 10338,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 10314,
											"end": 10339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 10314,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10302,
											"end": 10339,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10302,
											"end": 10339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10358,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 10395,
											"end": 10461,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10385,
											"end": 10393,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10383,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10358,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 10358,
											"end": 10462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10358,
											"end": 10462,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 10358,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10349,
											"end": 10462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10349,
											"end": 10462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10469,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10885,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 10475,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10515,
											"end": 10522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10538,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 10556,
											"end": 10557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10538,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 10538,
											"end": 10558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10538,
											"end": 10558,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 10538,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10533,
											"end": 10558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10572,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10572,
											"end": 10592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 10572,
											"end": 10592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10572,
											"end": 10592,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 10572,
											"end": 10592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10624,
											"end": 10625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10629,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 10667,
											"end": 10678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 10649,
											"end": 10679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10679,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 10649,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10638,
											"end": 10679,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10638,
											"end": 10679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10815,
											"end": 10830,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10813,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10831,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10789,
											"end": 10790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10782,
											"end": 10791,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10762,
											"end": 10845,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10739,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 10739,
											"end": 10878,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 10858,
											"end": 10876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 10858,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10739,
											"end": 10878,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 10739,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10523,
											"end": 10885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10885,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10475,
											"end": 10885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11009,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 10891,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 10996,
											"end": 11001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 10978,
											"end": 11002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10978,
											"end": 11002,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 10978,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10973,
											"end": 10976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 11009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11457,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 11015,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11164,
											"end": 11168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11191,
											"end": 11200,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11187,
											"end": 11205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11179,
											"end": 11205,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11179,
											"end": 11205,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 11283,
											"end": 11284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11272,
											"end": 11281,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11268,
											"end": 11285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11265,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 11215,
											"end": 11286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11215,
											"end": 11286,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 11215,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 11364,
											"end": 11366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11353,
											"end": 11362,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11349,
											"end": 11367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11346,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11296,
											"end": 11368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 11296,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 11446,
											"end": 11448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11435,
											"end": 11444,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11431,
											"end": 11449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11422,
											"end": 11428,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11378,
											"end": 11450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11378,
											"end": 11450,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 11378,
											"end": 11450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11457,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11457,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11015,
											"end": 11457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11685,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 11463,
											"end": 11685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11556,
											"end": 11560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11594,
											"end": 11596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11583,
											"end": 11592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11607,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 11675,
											"end": 11676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11664,
											"end": 11673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11660,
											"end": 11677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11607,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 11607,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11607,
											"end": 11678,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 11607,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11691,
											"end": 12023,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 11691,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11812,
											"end": 11816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11839,
											"end": 11848,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11835,
											"end": 11853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11827,
											"end": 11853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11827,
											"end": 11853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 11931,
											"end": 11932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11920,
											"end": 11929,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11916,
											"end": 11933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11907,
											"end": 11913,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11863,
											"end": 11934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11934,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 11863,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11944,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 12012,
											"end": 12014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12001,
											"end": 12010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 11994,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11944,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 11944,
											"end": 12016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11944,
											"end": 12016,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 11944,
											"end": 12016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11691,
											"end": 12023,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11691,
											"end": 12023,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11691,
											"end": 12023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11691,
											"end": 12023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11691,
											"end": 12023,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11691,
											"end": 12023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12029,
											"end": 12220,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 12029,
											"end": 12220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12069,
											"end": 12072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12088,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 12106,
											"end": 12107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12088,
											"end": 12108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 12088,
											"end": 12108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12088,
											"end": 12108,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 12088,
											"end": 12108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12083,
											"end": 12108,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12083,
											"end": 12108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 12140,
											"end": 12141,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 12122,
											"end": 12142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12122,
											"end": 12142,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 12122,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12117,
											"end": 12142,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12117,
											"end": 12142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12158,
											"end": 12167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12151,
											"end": 12167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12151,
											"end": 12167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12183,
											"end": 12184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12180,
											"end": 12190,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 12193,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 12193,
											"end": 12211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12193,
											"end": 12211,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 12193,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 12177,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12029,
											"end": 12220,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12029,
											"end": 12220,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12029,
											"end": 12220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12029,
											"end": 12220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12029,
											"end": 12220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/HTC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockReward()": "0ac168a1",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"setBlockReward(uint256)": "1a18e707",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setBlockReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HTC.sol\":\"HabeshaToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0xf1c07010528cdb891c75866dd44cf5cd856573457127ec38a522ca748407a340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://266a5704d812997c9e057e50787694ca29c1a3ddd76962af1061c11ed424c7e2\",\"dweb:/ipfs/QmaVTZBgUEWFo4ePF6v7NwoRSLbYBdLQ5XbRkgGFBfPpxa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/HTC.sol\":{\"keccak256\":\"0xf6306b3d1730cdfc0e97bc29a0d90707d85690cdc83806b95a968c05f67ee510\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://11d5c22dba4c6dddc0f01f4d5426360362716abdf5ec0a10e2b28a89f072c8dc\",\"dweb:/ipfs/QmboKbcrubWbiFyWH97mBimF4KijJLXcAUMYDjkTywFEnC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/HTC.sol:HabeshaToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/HTC.sol:HabeshaToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/HTC.sol:HabeshaToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/HTC.sol:HabeshaToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/HTC.sol:HabeshaToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 941,
								"contract": "contracts/HTC.sol:HabeshaToken",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address_payable"
							},
							{
								"astId": 943,
								"contract": "contracts/HTC.sol:HabeshaToken",
								"label": "blockReward",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							930
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							900
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 901,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 900,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 931,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 930,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 930,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 900,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								900,
								729,
								930
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										887
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										893
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2864:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2881:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2874:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2855:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:1"
									},
									"scope": 651,
									"src": "2803:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3007:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3024:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3034:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3017:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2998:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:1"
									},
									"scope": 651,
									"src": "2933:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3319:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3329:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "3345:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3377:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3384:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3388:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3367:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3404:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3313:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:1"
									},
									"scope": 651,
									"src": "3244:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3544:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3561:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3573:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3580:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3554:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3474:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3489:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3535:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:1"
									},
									"scope": 651,
									"src": "3455:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3981:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3991:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "4007:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4038:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4054:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4070:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3936:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3975:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:1"
									},
									"scope": 651,
									"src": "3902:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4773:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4783:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "4801:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4839:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4854:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4823:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4880:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4886:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4890:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4870:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4906:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4702:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4716:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4728:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4767:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:1"
									},
									"scope": 651,
									"src": "4680:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5366:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5380:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5376:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5400:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5421:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5414:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5475:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5471:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5493:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5514:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5507:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5574:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5580:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5584:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5566:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5316:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5330:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:1"
									},
									"scope": 651,
									"src": "5297:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5987:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6001:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6175:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6189:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6211:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6221:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6244:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6258:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6240:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6265:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6315:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6321:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6334:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6290:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6475:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6485:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6493:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6507:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "5997:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6021:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6137:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6153:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6551:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6766:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6925:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "6935:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6942:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6547:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6569:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6714:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6730:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7002:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "6987:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "6982:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5929:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5943:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:1"
									},
									"scope": 651,
									"src": "5912:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7418:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7428:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7455:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7476:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7469:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7557:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7377:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7394:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:1"
									},
									"scope": 651,
									"src": "7362:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7944:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7958:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "7954:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "7981:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8002:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "7995:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8081:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7920:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:1"
									},
									"scope": 651,
									"src": "7888:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8704:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8739:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8714:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8648:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8680:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:1"
									},
									"scope": 651,
									"src": "8630:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9703:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9717:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9713:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9738:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9759:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9752:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9811:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9838:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9859:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9852:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9910:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9922:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "9940:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "9959:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "9955:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "9970:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "9998:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10005:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10014:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "9989:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "9984:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9623:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9638:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:1"
									},
									"scope": 651,
									"src": "9605:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10408:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10418:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10455:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10445:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10484:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10480:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10522:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10540:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10559:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10536:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10566:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10618:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10627:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10645:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10591:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10716:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10723:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10732:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10751:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10707:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10359:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:1"
									},
									"scope": 651,
									"src": "10319:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9691:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "215:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "397:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "406:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "428:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "448:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:2"
									},
									"src": "391:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "628:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "637:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "660:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "685:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:2"
									},
									"src": "622:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "822:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:2"
									},
									"scope": 729,
									"src": "776:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:2"
									},
									"scope": 729,
									"src": "913:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1223:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1235:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 729,
									"src": "1205:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 729,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2327:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2377:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:2"
									},
									"scope": 729,
									"src": "2310:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2713:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2727:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2739:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2772:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:2"
									},
									"scope": 729,
									"src": "2691:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "205:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2675:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							930
						],
						"ERC20": [
							651
						],
						"ERC20Burnable": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 652,
							"src": "150:35:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "158:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 931,
							"src": "186:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 734,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 930,
										"src": "194:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 737,
										"name": "Context",
										"nameLocations": [
											"483:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 930,
										"src": "483:7:3"
									},
									"id": 738,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:3"
								},
								{
									"baseName": {
										"id": 739,
										"name": "ERC20",
										"nameLocations": [
											"492:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "492:5:3"
									},
									"id": 740,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:3"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 736,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 775,
							"linearizedBaseContracts": [
								775,
								651,
								41,
								900,
								729,
								930
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "662:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 747,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "678:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "692:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "672:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "672:26:3"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:3",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "632:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:3"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:3"
									},
									"scope": 775,
									"src": "618:87:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "1086:93:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 762,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1112:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 763,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "1121:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "1135:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 761,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "1096:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1157:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "1166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1151:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:3"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1039:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1056:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:3"
									},
									"scope": 775,
									"src": "1021:158:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 776,
							"src": "448:733:3",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "124:1058:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
					"exportedSymbols": {
						"ERC20": [
							651
						],
						"ERC20Capped": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 875,
							"sourceUnit": 652,
							"src": "148:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 778,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "156:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "ERC20",
										"nameLocations": [
											"296:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "296:5:4"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "296:5:4"
								}
							],
							"canonicalName": "ERC20Capped",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "185:77:4",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874,
								651,
								41,
								900,
								729,
								930
							],
							"name": "ERC20Capped",
							"nameLocation": "281:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 784,
									"mutability": "immutable",
									"name": "_cap",
									"nameLocation": "334:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 874,
									"src": "308:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "308:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "345:59:4",
										"text": " @dev Total supply cap has been exceeded."
									},
									"errorSelector": "9e79f854",
									"id": 791,
									"name": "ERC20ExceededCap",
									"nameLocation": "415:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "increasedSupply",
												"nameLocation": "440:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "432:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "465:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "457:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:38:4"
									},
									"src": "409:61:4"
								},
								{
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "476:60:4",
										"text": " @dev The supplied cap is not a valid cap."
									},
									"errorSelector": "392e1e27",
									"id": 796,
									"name": "ERC20InvalidCap",
									"nameLocation": "547:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "571:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "563:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:13:4"
									},
									"src": "541:35:4"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "742:102:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "756:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "764:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "756:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"nodeType": "IfStatement",
												"src": "752:65:4",
												"trueBody": {
													"id": 809,
													"nodeType": "Block",
													"src": "767:50:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 805,
																	"name": "ERC20InvalidCap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "788:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 808,
															"nodeType": "RevertStatement",
															"src": "781:25:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 811,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "826:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 812,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "833:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "826:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "826:11:4"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "582:129:4",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 816,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "736:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:14:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:4"
									},
									"scope": 874,
									"src": "716:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "976:28:4",
										"statements": [
											{
												"expression": {
													"id": 822,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 784,
													"src": "993:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 821,
												"id": 823,
												"nodeType": "Return",
												"src": "986:11:4"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "850:68:4",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "932:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:4"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "967:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:9:4"
									},
									"scope": 874,
									"src": "923:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										458
									],
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "1120:287:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "1144:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "1150:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 836,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1130:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Capped_$874_$",
																"typeString": "type(contract super ERC20Capped)"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1136:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 458,
														"src": "1130:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "1130:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 844,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1175:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1191:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1183:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 845,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1183:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1183:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1175:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "1171:230:4",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "1195:206:4",
													"statements": [
														{
															"assignments": [
																851
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 851,
																	"mutability": "mutable",
																	"name": "maxSupply",
																	"nameLocation": "1217:9:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 870,
																	"src": "1209:17:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 850,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1209:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 854,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 852,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "1229:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1229:5:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1209:25:4"
														},
														{
															"assignments": [
																856
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 856,
																	"mutability": "mutable",
																	"name": "supply",
																	"nameLocation": "1256:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 870,
																	"src": "1248:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 855,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1248:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 859,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 857,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "1265:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1265:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1248:30:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 860,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "1296:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 861,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "1305:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1296:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 869,
															"nodeType": "IfStatement",
															"src": "1292:99:4",
															"trueBody": {
																"id": 868,
																"nodeType": "Block",
																"src": "1316:75:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 864,
																					"name": "supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 856,
																					"src": "1358:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 865,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "1366:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 863,
																				"name": "ERC20ExceededCap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "1341:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1341:35:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 867,
																		"nodeType": "RevertStatement",
																		"src": "1334:42:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "1010:21:4",
										"text": "@inheritdoc ERC20"
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1045:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 834,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1111:8:4"
									},
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1061:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "1053:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1075:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "1067:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1087:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "1079:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:41:4"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:0:4"
									},
									"scope": 874,
									"src": "1036:371:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "263:1146:4",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								791,
								796
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "122:1288:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							900
						]
					},
					"id": 901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 901,
							"sourceUnit": 730,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 877,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 880,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:5"
									},
									"id": 881,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 879,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 900,
							"linearizedBaseContracts": [
								900,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 884,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 900,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 890,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 900,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 896,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 900,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 901,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							930
						]
					},
					"id": 931,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 903,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 930,
							"linearizedBaseContracts": [
								930
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 908,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 907,
												"id": 910,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 930,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 917,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 916,
												"id": 919,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 930,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 925,
												"id": 927,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 930,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 931,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/HTC.sol": {
				"ast": {
					"absolutePath": "contracts/HTC.sol",
					"exportedSymbols": {
						"Context": [
							930
						],
						"ERC20": [
							651
						],
						"ERC20Burnable": [
							775
						],
						"ERC20Capped": [
							874
						],
						"HabeshaToken": [
							1055
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							900
						]
					},
					"id": 1056,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 932,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 933,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 652,
							"src": "67:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"id": 934,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 875,
							"src": "124:72:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 935,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1056,
							"sourceUnit": 776,
							"src": "198:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 936,
										"name": "ERC20Capped",
										"nameLocations": [
											"301:11:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "301:11:7"
									},
									"id": 937,
									"nodeType": "InheritanceSpecifier",
									"src": "301:11:7"
								},
								{
									"baseName": {
										"id": 938,
										"name": "ERC20Burnable",
										"nameLocations": [
											"314:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "314:13:7"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "314:13:7"
								}
							],
							"canonicalName": "HabeshaToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1055,
							"linearizedBaseContracts": [
								1055,
								775,
								874,
								651,
								41,
								900,
								729,
								930
							],
							"name": "HabeshaToken",
							"nameLocation": "285:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 941,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "728:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "705:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 940,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:15:7",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ac168a1",
									"id": 943,
									"mutability": "mutable",
									"name": "blockReward",
									"nameLocation": "752:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "740:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "740:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "879:293:7",
										"statements": [
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 963,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "941:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 966,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "958:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "962:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "958:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "949:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 964,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "949:8:7",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "949:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "941:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "941:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 972,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "986:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3730303030303030",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "993:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_70000000_by_1",
																	"typeString": "int_const 70000000"
																},
																"value": "70000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1005:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 975,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 215,
																				"src": "1011:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1011:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "1005:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 978,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1004:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "993:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 971,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "980:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "980:43:7"
											},
											{
												"expression": {
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "blockReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "1094:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 983,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "1108:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1118:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 985,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "1124:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1124:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1118:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 988,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1117:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1108:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1094:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "1094:41:7"
											}
										]
									},
									"id": 993,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "48616265736861546f6b656e",
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "817:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_365efb204a7e91e71e19c197372ca466a80b858fbe0406a35e167e04f4527b0d",
														"typeString": "literal_string \"HabeshaToken\""
													},
													"value": "HabeshaToken"
												},
												{
													"hexValue": "485443",
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "833:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0af0a9c62d4a385f50b18ccafd5aeb45efedf9cef0da26a2e826cc982a6cae6e",
														"typeString": "literal_string \"HTC\""
													},
													"value": "HTC"
												}
											],
											"id": 952,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 949,
												"name": "ERC20",
												"nameLocations": [
													"810:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "810:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "810:29:7"
										},
										{
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 954,
														"name": "cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "852:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "859:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 956,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "865:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "865:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "859:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 959,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "858:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "852:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 961,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 953,
												"name": "ERC20Capped",
												"nameLocations": [
													"840:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 874,
												"src": "840:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "840:38:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "791:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "786:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "802:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "797:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "797:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:24:7"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:7"
									},
									"scope": 1055,
									"src": "774:398:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "1352:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 997,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1427:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1433:8:7",
															"memberName": "coinbase",
															"nodeType": "MemberAccess",
															"src": "1427:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 999,
															"name": "blockReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "1443:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1421:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1421:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "1421:34:7"
											}
										]
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintMinorReward",
									"nameLocation": "1324:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1340:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1352:0:7"
									},
									"scope": 1055,
									"src": "1315:148:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										458,
										873
									],
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "1570:49:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1018,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "1595:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "1601:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "1605:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1015,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1581:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_HabeshaToken_$1055_$",
																"typeString": "type(contract super HabeshaToken)"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1587:7:7",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 873,
														"src": "1581:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1581:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "1581:30:7"
											}
										]
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1482:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1013,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1011,
												"name": "ERC20",
												"nameLocations": [
													"1550:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1550:5:7"
											},
											{
												"id": 1012,
												"name": "ERC20Capped",
												"nameLocations": [
													"1557:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 874,
												"src": "1557:11:7"
											}
										],
										"src": "1540:29:7"
									},
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1498:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1490:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1512:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1504:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1524:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "1516:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:41:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1570:0:7"
									},
									"scope": 1055,
									"src": "1473:146:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "1649:148:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1027,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1708:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1712:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1708:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1029,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "1722:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1708:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f72727920796f75206d75737420626520616e206f776e657220746f206163636573732074686973206f6e65",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1729:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369",
																"typeString": "literal_string \"Sorry you must be an owner to access this one\""
															},
															"value": "Sorry you must be an owner to access this one"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cd97834c1677a02d131f5686954b4d240d2a68b50b33759bb70c67bb0f72369",
																"typeString": "literal_string \"Sorry you must be an owner to access this one\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1700:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1700:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1700:77:7"
											},
											{
												"id": 1034,
												"nodeType": "PlaceholderStatement",
												"src": "1788:1:7"
											}
										]
									},
									"id": 1036,
									"name": "onlyOwner",
									"nameLocation": "1640:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:0:7"
									},
									"src": "1631:166:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "1858:151:7",
										"statements": [
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "blockReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "1959:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1044,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "1973:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1983:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1046,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "1989:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1989:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1983:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1049,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1982:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1973:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1959:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1959:41:7"
											}
										]
									},
									"functionSelector": "1a18e707",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1041,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1040,
												"name": "onlyOwner",
												"nameLocations": [
													"1849:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1036,
												"src": "1849:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1849:9:7"
										}
									],
									"name": "setBlockReward",
									"nameLocation": "1814:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1834:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1829:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1829:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:13:7"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1858:0:7"
									},
									"scope": 1055,
									"src": "1805:204:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1056,
							"src": "276:1736:7",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								791,
								796
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "39:1973:7"
				},
				"id": 7
			}
		}
	}
}